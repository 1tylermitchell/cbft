#!/usr/bin/env ruby

# TODO: WORK-IN-PROGRESS: interface might change!
#
# This script extracts the FTS /api/diag JSON from cbcollect_info
# directories (unzipped).  For example, to see cbft's goroutine
# stacks, you might pipe the output to jq...
#
#   ./cbft_cbcollect_info_analyze $DIRECTORY $DIRECTORY $DIRECTORY | \
#     jq '.["/debug/pprof/goroutine?debug=2"]? | split("\n")'
#
# To extract the bucketDataSourceStats, for example, try...
#
#   ./cbft_cbcollect_info_analyze $DIRECTORY $DIRECTORY $DIRECTORY | \
#     jq '.["/api/stats"]?["feeds"]?[]?["bucketDataSourceStats"]?'
#
require 'json'

# ---------------------------------------------------------------

# Returns the FTS /api/diag string from the couchbase.log.
def fetch_fts_api_diag(path)
  couchbase_log = IO.read("#{path}/couchbase.log")
  couchbase_log_parts = couchbase_log.split(/=============+\n/)

  couchbase_log_parts.each_with_index do |part, i|
    if part.start_with?("FTS /api/diag:")
      return couchbase_log_parts[i+1]
    end
  end
end

# ---------------------------------------------------------------

ARGV.each do |path|
  # The path is directory of cbcollect_info (the unzipped files).
  begin
    api_diag_s = fetch_fts_api_diag(path)
    api_diag = JSON.parse(api_diag_s)
    print JSON.generate(api_diag)
  rescue JSON::ParserError, JSON::GeneratorError, TypeError => err
    print JSON.generate({"err" => err.to_s})
  end

  print "\n"
end
