package cbft

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"github.com/elazarl/go-bindata-assetfs"
	"io"
	"io/ioutil"
	"os"
	"path"
	"path/filepath"
	"strings"
	"time"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindata_file_info struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindata_file_info) Name() string {
	return fi.name
}
func (fi bindata_file_info) Size() int64 {
	return fi.size
}
func (fi bindata_file_info) Mode() os.FileMode {
	return fi.mode
}
func (fi bindata_file_info) ModTime() time.Time {
	return fi.modTime
}
func (fi bindata_file_info) IsDir() bool {
	return false
}
func (fi bindata_file_info) Sys() interface{} {
	return nil
}

var _staticx_css_cbft_css = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x56\xcb\x6e\xdb\x3a\x10\xdd\xfb\x2b\x78\x91\xdd\x45\x64\x38\x7e\xc5\x96\x71\x03\xdc\x1a\x28\xb2\x09\xba\xe8\xb2\xe8\x82\x12\x87\xd6\xc0\x14\x49\x50\xf4\x2b\x45\xff\xbd\x94\x48\xdb\xb2\xfc\x88\xdc\x76\x65\x91\xf4\x9c\x39\x33\x73\x66\xc8\x6e\x22\x60\x0d\x6f\x8a\x51\x41\xba\x79\xf9\x13\x25\x8a\xed\x48\x97\x2b\x93\x47\x0b\xa3\x56\x9a\xfc\xe8\x10\xa2\x29\x63\x28\x17\xee\xd0\x5a\x95\xc7\xe4\xa9\xa7\xb7\xb3\xce\xcf\x4e\xa7\x8b\x92\xc1\xf6\x8d\x6a\xed\x8e\x49\x97\xca\xc5\x4a\x50\x13\xad\x30\xb2\x06\x20\xca\xa8\x64\x02\x2a\x08\x42\x12\x9a\x2e\x4b\x48\xc9\x62\xf2\xc0\x27\x9c\x72\x3e\xf3\x07\xca\x30\x30\x0e\x55\x6f\x49\xa1\x04\x32\xf2\xc0\x28\xf4\x81\xfa\xe3\x54\x09\xe5\x4e\x1f\x9e\xd3\x29\x24\x7d\xbf\x17\x08\x79\x26\x77\xd2\x89\x33\xb5\x06\x13\x48\xed\xc1\x87\x83\x09\x24\xd3\xd9\x05\xa2\x43\x3e\xe6\xcf\x75\xa2\xd1\xde\x86\xa5\x8e\xe4\xa4\x8d\x63\x2d\x68\x0a\x99\x12\xec\xe0\xf7\xd4\x47\x8f\x4f\x9b\xc9\xe8\xbb\xb8\x18\x2d\x32\x70\xd9\x48\x80\xf5\x59\xe2\xcf\xa3\x0d\x24\x4b\xb4\xae\x14\xdb\xa8\xc0\xf7\x2a\x09\x81\x97\xdb\x0a\xff\xc9\xd5\xfb\xcd\x3f\x5c\x3b\x3b\x8f\xa4\x5a\xcd\xa9\x4c\x41\xcc\x0d\x50\xeb\x8b\x99\x53\xb3\x40\x19\x59\xa5\x1d\xd1\x2a\xf9\x87\xbd\xbd\x44\x06\x57\x6a\x52\x40\x6a\x51\xc9\xc3\xc7\x2b\xd0\x7d\x56\xea\xa8\xd7\x4a\xda\x34\xff\x54\xca\xf5\xcc\x78\x74\x17\xa5\x7c\xff\x91\x58\x59\xc7\x32\xb8\xc8\xec\x75\x2a\x75\x33\x57\x66\x57\xab\x0b\xc6\xfd\x51\x5b\xe3\x9a\x2c\xf7\x02\xe3\x5e\x14\x47\xad\x1c\xa5\x37\x1d\x0d\x86\xfe\xb0\xa1\xc9\xe1\x80\x0f\xe8\x2d\x8f\x82\x26\x20\x2a\x37\x5c\x49\xeb\xe4\xe4\x89\x4a\xd7\xf1\x54\xd4\xb2\x26\x80\xb7\x09\x9e\x5a\x6b\x8a\x5b\x70\xd5\xb6\x13\x1b\xc4\x64\xaa\xed\x4d\xac\xf0\xf1\xea\xa7\x46\x05\x3d\x77\xd6\x46\x09\xef\x61\x8d\x05\x26\x28\xd0\xee\x62\x92\x21\x63\x20\xdb\xc3\x85\xf4\x9e\x80\x3e\x5e\x31\xed\x02\x43\x7b\x37\x23\x94\x19\x18\xbc\x1d\x21\x47\x10\x2c\xfc\xfc\xad\x30\xcf\x31\xef\x89\x35\x18\x1e\x43\x6e\xcf\xad\x4d\xc0\x8d\x04\x96\x5e\xfe\x77\x73\xe4\xe4\x56\xf1\x4a\xfb\xb0\x3b\x7d\x9c\x5e\xbe\x2f\xa4\xd0\xd4\x37\x2b\xc3\xc2\x8d\xd7\x8a\x8e\x40\x09\x51\x22\x54\xba\x2c\x85\x67\x61\x6b\x23\x2a\x70\x21\x63\x52\x75\x63\x25\x6e\xa7\xec\x0d\x32\x9b\xc5\x64\x02\x79\x5b\x7f\x31\x47\x53\xd8\x28\xcd\xd0\xed\xa0\xd4\x2b\xfb\xcd\xee\x34\xfc\x97\x66\x90\x2e\xdd\xe4\xfc\x5e\xef\x7c\x1f\xce\xf4\x26\xfa\x21\xdd\x2f\xe4\xdf\xc7\x66\x09\xdc\x5e\x85\x77\xf1\x1e\xba\x4e\xb8\xc6\xab\x0c\xdd\x73\x0a\xb1\xf6\x7b\x1f\x04\xab\x95\x5e\xe9\xb2\xd2\xd4\xe5\xd0\x4f\x21\xad\x0a\x2c\x47\xac\xcb\x1e\x08\x6a\x71\x0d\xb3\x7a\xba\x8f\x79\x2e\x47\x6e\xb8\x04\x7c\xec\x61\x51\x8a\x90\x0b\xb5\x89\xbd\x6a\x04\x7c\xcc\xa0\xe1\x98\x26\xee\x3d\xb0\xb2\xb7\x1c\x3f\x75\x47\x65\x68\x84\x84\x81\x1b\xf5\xfd\xf2\xc2\xa3\x62\x3c\x1e\xcf\x1a\x69\xdd\x64\xe8\xd1\x0f\x0f\x8a\x51\x78\x4f\x1c\x3e\x66\xd7\x47\x5b\x65\x1d\x39\x25\xa6\x50\x6e\x6f\x0c\xd5\xe5\xf6\x7b\x54\x85\x58\x0e\xcf\xde\xa5\x90\xd7\x08\x9b\x2f\x52\xec\x7c\x3b\xd0\x24\xbc\x90\xce\xdb\x9e\xfc\x83\xb9\x56\xc6\x52\x79\xb1\xc9\x0e\x38\xc9\xca\x5d\x70\xf2\xf7\x40\xb4\x51\x1a\x8c\x45\x28\xbe\x86\xab\xb5\x7d\x6b\xee\xbb\xf9\xb3\x9f\x40\x27\xcb\x79\x68\x0d\x28\x6a\x37\x4e\xb3\x86\x7f\x08\x79\x57\x27\xfe\x0a\x00\x00\xff\xff\x6d\x6a\xf3\x97\xec\x0a\x00\x00")

func staticx_css_cbft_css_bytes() ([]byte, error) {
	return bindata_read(
		_staticx_css_cbft_css,
		"staticx/css/cbft.css",
	)
}

func staticx_css_cbft_css() (*asset, error) {
	bytes, err := staticx_css_cbft_css_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "staticx/css/cbft.css", size: 2796, mode: os.FileMode(420), modTime: time.Unix(1446874443, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticx_index_ft_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x59\xed\x6e\xdb\x36\x17\xfe\x9f\xab\xe0\x2b\x14\xb5\x03\x58\xd6\xdb\x76\x18\x86\xc4\x36\xd0\xa5\x1b\x50\x6c\x6d\xf3\x23\xc5\x30\x14\x85\x41\x49\x94\xcd\x96\x22\x35\x92\xb2\xe3\xb6\xb9\xf7\x1d\x92\xfa\xb4\x25\x47\xce\x02\x6c\x4d\x01\x4b\xe2\xf9\xe4\xc3\xe7\x1c\x52\xea\xec\x7f\xaf\xde\x5d\xdd\xfc\x79\xfd\x0b\x5a\xeb\x94\x2d\xce\x66\xe6\x82\x18\xe6\xab\xb9\x47\xb8\x67\x06\x08\x8e\x17\x67\x08\xcd\x52\xa2\x31\x8a\xd6\x58\x2a\xa2\xe7\x5e\xae\x13\xff\x27\xcf\x0a\x42\xac\x08\x5a\x4b\x92\xcc\xbd\x00\x46\xcc\x90\xa6\x9a\x91\x45\x14\x26\x1a\x05\x88\xf2\x98\xdc\x3e\x9f\x05\x6e\xd0\xca\x19\xe5\x9f\x4b\x13\xa5\xb1\xa6\x51\x10\x29\x15\xe0\x2c\x9b\xc2\xd5\x43\x92\xb0\xb9\xa7\xf4\x8e\x11\xb5\x26\x44\x7b\xc1\xe2\x88\x55\x26\xa9\x4a\x1f\x60\x17\x0a\xa1\x95\x96\xf8\x21\x31\x63\xac\xd6\xa1\xc0\x32\x7e\x80\xad\xa4\xd1\x67\xb5\xc6\xdb\x69\x4a\x79\xaf\x79\x8f\x3d\xa3\x61\x00\x8b\x93\x33\x2c\xfd\x9c\xfa\x5a\x12\x12\xc4\x54\xe9\xfd\xc1\x61\xbe\xf7\x65\xed\x60\xb7\x36\x5b\xb3\x88\xd6\xd3\xa1\xe1\x5a\x48\x1d\xe5\x1a\xd1\x48\xf0\x3d\xdb\x20\xc1\x1b\x33\x3c\x85\x1f\x63\x39\x0b\x1c\x8f\x66\xa1\x88\x77\x88\xaf\x7c\x58\xea\xb9\x17\x85\x2b\xfd\x32\xcb\x1c\x8d\x62\xba\x41\x11\xc3\x4a\xc1\xb8\xe0\x1a\x53\x4e\xa4\x95\xb4\x65\x1c\x6f\x42\x2c\x91\xbb\xf8\x94\x6f\x08\x10\xb2\x7c\x4c\xe8\x2d\x89\x7d\x2d\x32\x98\xb7\x60\xc4\x6a\xd3\x15\x24\x24\x78\xe1\xea\x78\x20\x2b\xcf\x59\x23\x56\xe9\x19\x2e\x0d\x1d\x8b\xc3\x62\x86\xcb\x49\x5b\x8a\x13\x05\xf4\x7f\xed\xee\x66\x01\x5e\xcc\x60\xb5\x1a\x6e\x83\x9c\xfd\xb3\x20\x5c\xc4\x36\xc4\x5b\x73\x3d\x1e\x60\x06\xa4\xd8\x14\xd8\xb9\xdb\x03\x1c\xa5\xd8\xf6\x40\xc2\x7c\x95\xfa\xcf\xfe\x8f\x8a\x3b\x91\x24\x50\xf1\xfe\x33\x94\x02\x52\x4d\x9c\x8c\x11\xac\xe4\x86\x92\xed\xa2\x11\xb0\x2b\x7a\x75\x33\x0b\x0c\x01\x1c\x93\x54\x24\x69\xa6\x91\x92\x51\x9b\xdf\x9f\xfe\xca\x89\xdc\x15\x17\xff\xf9\xf4\x19\xfc\xfb\xa4\x3c\x88\xe1\x2c\x16\xc3\x8d\x73\x6a\x0b\x61\xb0\x75\xfc\x62\xba\x79\x31\x5c\xbd\x55\xc9\x83\xad\xd6\x79\x8a\x39\xfd\x42\x4e\xb3\xaa\xba\x55\xa3\x6f\x0d\x36\x2e\xba\x43\x79\x3d\xd9\xd0\xaf\xa3\x43\x83\xa9\x13\x38\x69\x06\xc7\x7d\xf9\x3a\x63\xea\x61\x0e\xa5\xc8\x35\x69\x3f\x3d\xcc\xd1\xbd\x1d\x75\x38\x0d\x95\xe0\x99\xa0\x5c\x93\x13\xc0\x76\x1b\x59\x5b\xbd\x4f\xff\x93\x0a\xc8\x6d\xb6\x19\xba\x96\xa0\x6e\x7b\xd4\x60\x6d\xd3\x6c\x06\x2b\xa7\x82\x53\x2d\x86\xa7\x02\xfc\xc7\xab\xe1\xee\x99\x58\xa9\xc1\xca\xb6\xf0\x07\x6b\x87\x3f\xfe\x30\x1c\xf0\x84\x32\x58\xcf\xe1\xa9\x28\x22\x61\x13\x24\xc3\x0d\x62\x2a\x49\xa4\xe9\xe6\xc0\xa4\xc7\xc6\x0f\x19\xd9\x10\x3f\x85\xcd\x94\xf2\x95\x43\xd6\xdd\xda\xc5\x2e\x05\x83\xe2\xf7\xfb\xd2\xbb\x8c\xf4\xb8\x3a\xd9\x17\x2c\x3c\xdb\x29\x3a\x0c\x92\xfb\xdd\xf8\xf6\xe6\xcb\xc0\x22\x1b\xe0\x6f\x2b\x64\xcc\xa0\xfa\x1f\xcb\x9f\x39\x2f\x3b\xda\x3c\x96\x47\x2d\x3e\x13\xb3\x7b\x3c\xae\xc3\xce\x1c\x7b\x7c\xde\x5a\xaa\x92\x30\x1f\xc8\x06\xa3\x6e\x4e\xf6\x43\xab\xc0\x1c\xca\xe0\xf4\xc6\x0e\x4b\xed\x6c\x56\xde\x25\x39\x8f\xcc\xa9\x0e\xd9\xf9\xbd\x25\x5b\x7b\xee\x7a\xe3\xe6\x36\x3e\x47\x5f\xed\xe9\x43\x12\x9d\x4b\x5e\x3c\x98\x3f\xcf\x70\x59\x79\x17\xe8\xeb\xdd\xa4\x1e\x8c\x49\x82\x73\xa6\x97\x05\x34\x46\xdc\x38\x84\x81\x02\xe1\x18\xe2\xc4\x20\xd0\x32\x27\x93\xb6\x30\xde\x71\x9c\xd2\xa8\x10\x56\xb2\x66\x00\x13\x75\x99\x50\xc2\x8c\x0b\x6f\x69\x1e\xbd\x8e\xf8\x76\xdc\x28\x14\x03\x5d\x3a\x25\xe1\x8d\x1e\x40\xc6\x63\x78\x07\xe9\xd2\x8b\xb1\x26\x9a\xa6\x64\x99\x99\x17\x36\xab\x6e\x86\x6e\x60\xe8\x5d\x66\x90\xc3\xac\xcb\xac\x4e\x12\xb3\x96\x42\xb8\xd3\x64\x89\xa5\xc4\xbb\x25\xac\x0f\x1c\xba\xb5\x73\x6a\x36\xba\xa6\x5e\x49\xab\x43\x10\xcb\xcc\xf7\xe1\xb7\x42\x53\x27\xcb\xa2\xbf\x76\xc9\x2b\xd6\xf7\x4b\xef\x35\x37\xeb\xeb\xa4\xf5\x22\x9d\xb9\xdf\xbb\xcb\xb3\x3d\x4a\x5d\x5b\x42\xbd\x86\x7d\xed\xaa\xa2\xe3\x98\xc2\xe3\x6f\xd0\x5a\x27\xee\x9d\xf6\x1a\x4b\x9c\xaa\xe2\xe1\xfd\x6b\x17\xf3\x89\x8a\x44\x46\x26\xe8\xc9\x5a\xeb\x0c\x2e\xf6\x38\x52\x5e\x4b\x8b\x27\x4c\x44\xf6\xad\xc4\xde\xae\x26\xc6\xca\x28\xe5\x34\x7c\x23\x62\xcc\x4a\x02\xd3\x04\x55\x41\xd1\x7c\x8e\x3c\x73\xd8\xf6\xce\x1b\xd0\xba\x70\x53\x33\xfe\x8e\xb3\x1d\x9a\x5b\x16\x5e\x16\xf3\x6a\x64\x34\xb5\x59\xde\x90\x34\x63\xc0\x03\x05\x8a\xdd\xe3\xdf\xbe\x01\x40\x97\xfd\x86\x1f\x3c\x8b\x8f\xf7\x11\xcd\xeb\x55\xef\xee\x36\x40\x3d\x4d\x31\xeb\xdb\x95\xcc\xa7\x06\xef\xd2\xe5\x08\x07\x19\x54\x8c\x43\x66\xdd\x45\x7d\xd9\x80\xa4\x42\x1f\x3d\x7d\x5a\xa5\xd1\x18\x9e\x16\xce\x9a\x50\xd5\xfe\x3b\x14\x5b\x88\x99\x6c\x68\x1a\x59\x4d\xaa\x7f\x36\xd9\x34\x53\x69\x30\x62\x6f\x1d\xea\x65\x77\xab\x5a\xae\xe7\xa4\x0c\x5e\xf3\xb2\x5d\x1d\x65\x71\xbc\xc5\x29\x51\x17\x88\xe7\x8c\xb5\x29\x6c\x8b\x17\xfa\xc3\xb5\x2d\xe7\x5e\x35\x53\xa6\x2f\x4d\x95\x5e\x95\x45\xda\xa9\x7a\x77\x7e\xd9\xe2\x46\xb8\x3f\x45\x98\x7a\x59\x0f\xe3\x26\x86\x45\x47\x05\x70\x1c\x2d\xf6\x16\x07\x2a\xa9\xbb\x90\x5e\x09\x4e\x1a\xb0\xc5\xf0\xf8\x2f\x14\x52\x15\xaa\x39\xa5\x0e\x32\xd4\xc5\x71\x00\x4c\x6b\xa6\xe5\xeb\x54\x2a\xe2\x9c\x91\xf1\xa8\xf8\x9e\x31\x3a\x9f\x5a\x9d\x7a\x23\x1b\x8f\x2c\x89\x5e\x16\xab\x6c\x53\xbb\xd2\x92\x8d\x26\xa8\x5b\xd0\xe7\xe1\x0a\xfa\xe4\xaf\xb6\xcf\x1d\xf8\xe8\x10\xf5\x79\xb9\x29\xbb\xe9\x81\x93\x43\xc9\x51\x1f\x3d\xa9\x74\xc9\xfa\xfc\xfc\x01\x27\xae\xdf\xe1\xc4\x75\xe0\xe4\x40\x60\x38\x7b\x3f\xe2\x09\x5d\x8d\x3f\x8c\x0a\x96\x48\xb1\xa1\x31\x91\xa3\x9a\xf9\x15\xab\xdb\x1a\xe7\x7b\xf5\xd8\x96\x4e\xb7\x6b\xc2\xc7\x23\x77\xe8\x09\x46\xed\x92\xb3\xc5\xac\x8b\xf6\xf8\x5e\xb2\x0b\x34\xaa\x0e\x4a\x55\x07\x74\xc7\x25\xd3\xf1\x3a\xac\x1b\xa0\x80\xf1\x2b\xa3\x6a\x81\xb8\x2b\xb8\x66\xf9\xf6\xd1\x4c\x3f\x08\x90\xff\x18\x7f\xc7\x81\xec\x45\x11\x8d\xaa\x7a\x6b\x42\xdb\x83\x69\xa3\x3a\xdb\x30\x77\x83\x5b\x7e\x43\xeb\x02\x68\x18\xc8\xd6\x43\x90\xe8\xc0\x9e\xe0\xfb\xc0\xee\x80\xbc\xf8\x68\xd7\x00\xfd\x78\x8a\x4b\x4e\xb6\x8f\x90\x26\x78\x39\x39\x4b\xd8\x15\x07\xa7\x79\x61\x6f\xcc\x06\xf0\x08\xc9\xba\xcf\x07\xa7\xa6\xfb\x80\x5c\x83\x25\x89\xa9\xfe\xae\xe0\x0d\x96\x11\x83\x1d\xed\xfb\xca\xf9\x42\xe3\xf0\xbf\xc1\x0d\xdb\xdb\xea\xb7\xbc\x59\xe0\xfe\x2f\xea\xef\x00\x00\x00\xff\xff\x95\x37\x41\x0e\x9c\x1a\x00\x00")

func staticx_index_ft_html_bytes() ([]byte, error) {
	return bindata_read(
		_staticx_index_ft_html,
		"staticx/index-ft.html",
	)
}

func staticx_index_ft_html() (*asset, error) {
	bytes, err := staticx_index_ft_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "staticx/index-ft.html", size: 6812, mode: os.FileMode(420), modTime: time.Unix(1447039389, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticx_index_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x19\x69\x6f\xdb\x38\xf6\x7b\x7e\x05\x57\x5b\xd4\x09\x60\x59\xdb\xed\x62\x31\x48\xec\x00\x99\x64\x8e\x62\x7a\xe4\x43\x8a\xc1\xa0\x28\x02\x4a\xa4\x64\xb6\x14\xa9\x21\x29\x27\x6e\x9b\xff\x3e\x8f\xd4\x61\x9d\x89\x9c\x69\x30\x2e\x10\x51\x7c\x27\xdf\x4d\x75\xf9\xaf\x8b\x77\xe7\x57\x7f\x5c\xfe\x84\xd6\x26\xe5\xa7\x07\x4b\xfb\x40\x1c\x8b\x64\xe5\x51\xe1\xd9\x0d\x8a\xc9\xe9\x01\x42\xcb\x94\x1a\x8c\xa2\x35\x56\x9a\x9a\x95\x97\x9b\xd8\xff\xc1\x73\x80\x10\x6b\x8a\xd6\x8a\xc6\x2b\x2f\x80\x1d\xbb\x65\x98\xe1\xf4\x34\x0a\x63\xb3\x0c\x8a\xb5\xdb\xe6\x4c\x7c\xae\x30\xb5\xc1\x86\x45\x41\xa4\x75\x80\xb3\x6c\x01\x4f\x0f\x29\xca\x57\x9e\x36\x5b\x4e\xf5\x9a\x52\xe3\x05\xa7\xf7\x50\x65\x8a\xe9\xf4\x11\x74\xa1\x94\x46\x1b\x85\x1f\x23\x93\x60\xbd\x0e\x25\x56\xe4\x11\xb4\x8a\x45\x9f\xf5\x1a\xdf\x2c\x52\x26\x46\xc9\x47\xe8\x39\x0b\x03\xf0\x49\xce\xb1\xf2\x73\xe6\x1b\x45\x69\x40\x98\x36\xdd\xcd\x69\xbc\xbb\xb0\xb6\xb0\x5b\xa7\xad\xf5\x9d\xe3\xd4\x27\x5c\x4b\x65\xa2\xdc\x20\x16\x49\xd1\xa1\x0d\x62\xbc\xb1\xdb\x0b\xf8\x63\x29\x97\x41\x11\x3e\xcb\x50\x92\x2d\x12\x89\x0f\xae\x5e\x79\x51\x98\x98\xb3\x2c\x2b\xa2\x87\xb0\x0d\x8a\x38\xd6\x1a\xf6\xa5\x30\x98\x09\xaa\x1c\xa4\x0d\x13\x78\x13\x62\x85\x8a\x87\xcf\xc4\x86\x42\x1c\x56\xaf\x31\xbb\xa5\xc4\x37\x32\x83\x73\x4b\x4e\x1d\x36\x4b\x40\x21\x29\x4a\x56\xf7\x0b\x1a\x16\xe6\x5b\xdd\x5b\x38\x80\x85\x2b\x1c\x09\x1a\x30\x42\xfd\x50\x61\x41\xbc\x46\xfc\xa3\xc6\x6f\xc9\xd2\xa4\x22\xe0\x32\x91\x1e\xd2\x2a\xda\x59\x0b\xa0\x60\xe8\x45\x26\x92\x22\x74\x6a\xb2\x00\x37\x14\x03\x4f\x6f\x1a\xaf\x39\x6f\xa8\x59\x59\x00\x1e\x6d\x3d\x39\x3b\x05\x5d\x4b\xad\x98\x20\xf4\x96\x6a\xd0\xee\x55\xb1\xb2\x02\x96\x10\x55\x4d\x29\x39\xff\x7b\x42\x84\x24\x4e\xc4\x5b\xfb\x7c\x0a\x01\xa9\x14\xcc\x48\x05\x22\xde\x14\xab\x27\x11\x82\x05\x4e\xa8\x95\xe1\x16\x4f\x21\x02\x02\xc1\xda\xe9\x35\x3c\x1e\xcd\xbe\x5a\x2a\x96\xac\x4d\x57\x56\x45\x42\x94\xcc\x88\xbc\x11\xdd\xa0\xc4\x5d\x04\x48\x9d\x24\xe1\xd4\x43\x04\x1b\x5c\xbe\x34\xc8\x5b\xd4\xf0\x2b\xce\xf1\xef\x2a\xd9\xc2\xdc\x18\x5b\x09\xb0\x62\xd8\xa7\xb7\x19\xe4\x03\x25\x2b\x2f\xc6\x5c\xd3\x8e\x68\xf8\xfd\x4a\x79\x86\x96\x1a\xb0\xea\x6c\xc4\x0a\x8a\x10\xd8\xc1\x6e\x76\x54\x6d\x26\x42\xc7\x20\xb5\xf2\x29\x15\x79\xa5\x8b\x5b\x77\x65\xb6\xcc\xbf\x36\x26\x3b\x0e\x02\x8e\x43\xbd\x88\x64\x1e\xad\x6d\xfb\x82\x55\xea\x4a\x5e\x37\x81\xeb\xdf\x2f\xd4\x18\x26\x12\x04\x99\xab\x0c\x25\x3d\xc5\xac\xae\x4d\x3f\xee\x2f\x99\xd0\x8d\x9f\xe4\x50\x52\x02\x5b\x5a\x36\x8c\xde\x8c\xe9\x72\x41\x37\x94\xcb\x8c\xaa\x99\x46\x8e\xe2\x09\xb4\xc1\x04\x5a\xc9\x44\x7d\xce\x2c\x2e\xb3\x3d\x15\x92\x72\x7f\x9d\x6a\x87\xb2\x0d\x73\xf5\x76\xaa\xee\xb1\x54\x79\xda\xd5\x7e\x4c\xc9\xf3\x0a\x0b\x01\x56\x9a\x43\x01\xd9\xa2\x82\xc1\x24\x4d\xdb\x79\xd9\xc5\x68\x42\x1b\xf5\xba\x5c\xf6\x9a\x99\x92\x37\x23\x7d\x89\xfb\x3a\xf5\x5f\xfc\x07\x95\x2b\x19\xc7\x30\x6d\xf9\x2f\x50\x0a\xed\xaa\xdb\xac\xa0\x9d\x5a\xaf\x9c\xb6\x1a\x44\x5f\x7a\xbd\x58\x06\xb6\x0b\x17\xed\x5c\x47\x8a\x65\xa6\xdd\x8d\xec\x90\xf1\xe9\xcf\x9c\xaa\x6d\xf9\xf0\xff\xbb\x78\x01\xff\x3e\x69\x97\x9c\x8e\xe2\x74\x3a\x71\xce\xdc\x34\x32\x99\x9a\xbc\x5c\x6c\x5e\x4e\x47\x6f\x8d\x53\x93\xa9\xd6\x39\x14\x78\xf6\x85\xee\x47\x55\x8f\x8c\x8d\xe1\x71\x32\x71\x39\xa2\x55\xcf\xbd\x09\xfd\x9d\x74\x98\xf2\x76\x0a\xec\x75\x82\xfb\x79\xf9\x26\xe3\xfa\x71\x0c\x95\xcc\x0d\x6d\xbf\x3d\x8e\xd1\x83\x63\xed\xf4\x30\xd4\x52\x64\x92\x09\x43\xf7\x30\x76\x71\x9b\x68\xa3\x8f\xe1\x7f\xd2\x01\xb4\xb9\xcd\x54\x5f\x02\xba\x1b\xc0\x26\x63\xdb\x49\x6a\x32\x72\x39\x15\x4d\xc7\x77\x73\xcd\x64\x74\x3b\xac\x4c\x46\x76\x89\x3f\x19\x3b\xfc\xff\xff\xa6\x1b\x3c\x66\x1c\xfc\x39\x5d\x15\x6d\x5b\x56\x44\xa7\x13\x10\xa6\x68\x64\xd8\xa6\x47\x32\x42\xe3\x87\x1c\xda\xb0\x9f\xc2\x8d\x06\xe6\x82\xc2\xb2\xc5\xd2\x39\xbb\x02\x4c\x92\x3f\xce\xcb\x6c\x33\x3a\xc2\x6a\x6f\x5e\xe0\x78\xbe\xd5\x6c\x9a\x49\x1e\x66\xe3\xbb\xc5\x97\x89\x49\x36\x81\xdf\x8d\x54\x84\x43\xf6\x7f\x2f\x7e\xf6\x5b\x45\x11\x36\xdf\x8b\xa3\x91\x9f\xa9\xed\x1e\xdf\x97\xe1\xa0\x8e\x23\x3c\x6f\x5d\xa8\xd2\x30\x9f\x18\x0d\x16\xdd\x7e\x5e\x99\x9a\x05\xf6\x66\x0c\x93\x34\xef\xa7\xda\xc1\xb2\x5a\xc5\xb9\x88\xec\xd5\x1a\xb9\xf3\xbd\xa5\x37\xee\x52\xf9\xa6\x38\xdb\xe1\x11\xfa\xea\xa6\x0f\x98\xe9\x73\x25\xca\x17\xfb\xf3\x6c\x2c\x6b\xef\x18\x7d\xbd\x9b\xef\x36\x09\x8d\x71\xce\xcd\x75\x69\x1a\x0b\x6e\xcd\x5d\x1e\x15\x18\xe4\x10\x00\x18\x95\xd3\x79\x1b\x48\xb6\x02\xa7\x2c\x2a\x81\x35\xac\x29\xc0\x4a\xbd\x8e\x19\xe5\x96\x85\x77\x6d\x5f\xbd\x01\xf9\x6e\xdf\x22\x94\x1b\x43\x38\x55\xc0\x5b\x3c\x30\x99\x20\x58\x91\x21\x3c\xb8\x45\x51\xc3\x52\x7a\x9d\xd9\x8f\x65\x0e\xdd\x6e\x5d\xc1\xd6\xbb\xcc\x5a\x0e\xf3\x21\xb2\x9d\x92\x98\xb7\x10\xc2\xad\xa1\xd7\x58\x29\xbc\xbd\x06\xff\xc0\x30\x6e\x0a\xa6\xb6\xd1\x35\xf1\xaa\xb0\xea\x1b\xb1\xd2\xbc\x6b\x7e\x07\xb4\x79\x72\x5d\xd6\xd7\x21\x78\x1d\xf5\xe3\xd0\x07\xc9\xad\x7f\x0b\xe8\xce\x49\x07\xc5\xdf\xbb\x93\x83\x4e\x48\x5d\xba\x80\x7a\x05\x7d\xed\xbc\x0e\xc7\x43\xb8\x61\x98\xdf\xa0\xb4\xce\x91\xab\xaf\x97\x58\xe1\x54\x97\x2f\xef\x5f\x15\x32\x9f\xe9\x08\xae\x45\x73\xf4\xcc\x5e\x10\xe0\xe1\xc6\x91\xea\x59\x51\x3c\xe3\x32\x72\x9f\x86\xdc\x32\x99\x5b\x2a\x8b\x94\xb3\xf0\x8d\x24\x98\x57\x01\xcc\x62\x54\x0b\x45\xab\x15\xf2\xdc\x15\xe8\xa8\x61\xda\x42\xdc\xc2\xee\xbf\x13\x7c\x8b\x56\x2e\x0a\x4f\xca\x73\x35\x34\x5a\x38\x2d\xaf\x68\x9a\x71\x88\x03\x0d\x88\xc3\xfb\xdf\xbe\x81\x81\x4e\xc6\x09\x3f\x78\xce\x3e\xde\x47\xb4\xda\x79\x7d\xb8\xda\x40\xe8\x19\x06\x37\xf0\x91\xae\x64\x3f\xf3\x7a\x27\x85\x8e\x30\xc8\xa0\x72\x1f\x34\x1b\x4e\xea\x93\x86\x49\x6a\xeb\xa3\xe7\xcf\x6b\x35\x1a\xdb\x8b\x92\x59\xd3\x54\x3b\xfe\x03\x88\x2d\x8b\x59\x6d\x58\x1a\x39\x4c\x66\x7e\xb4\xda\x34\x55\x69\x44\x44\xc7\x0f\x3b\xb7\x17\x5e\xad\xfc\x39\xaf\x84\xef\xe2\xb2\x9d\x1d\x55\x72\xbc\xc5\x29\xd5\xc7\x48\xe4\x9c\xb7\x43\xd8\x25\x2f\xd4\x87\x4b\x97\xce\xa3\x68\x36\x4d\xcf\x6c\x96\x9e\x57\x49\x3a\x88\x7a\x77\x74\xd2\x8a\x8d\xb0\x7b\x44\x38\x7a\x95\x0f\x87\x4d\x1b\x96\x15\x15\x8c\x53\x84\x45\xc7\x39\x90\x49\xc3\x89\x74\x21\x05\x6d\x98\x8d\xc0\xeb\x3f\x90\x48\xb5\xa8\xe6\x91\x06\x82\x61\x97\x1c\x3d\xc3\xb4\x4e\x5a\x5d\xa7\x52\x49\x72\x4e\x0f\x67\xe5\x47\xe5\xd9\xd1\xc2\xe1\xec\x1a\xd9\xe1\xcc\x05\xd1\x59\xe9\x65\xa7\xda\xb9\x51\x7c\x36\x47\xc3\x80\x31\x0e\xe7\x50\x27\x7f\x76\x75\xae\xc7\x63\x00\x34\xc6\xe5\xaa\xaa\xa6\x3d\x26\x7d\xc8\xbd\x3c\x46\x54\x19\x82\x8d\xf1\xf9\x1d\x26\xae\xd7\x30\x71\xf5\x98\xf4\x00\x36\x66\x1f\xb6\x78\xcc\x92\xc3\x0f\xb3\x32\x4a\x94\x74\x9f\x73\x66\xbb\xc8\xaf\xa3\xba\x8d\x71\xd4\xc9\xc7\x36\x74\x71\xb3\xa6\xe2\x70\x56\x0c\x3d\xc1\x6c\xde\xfb\xba\xf3\xd5\x94\xe5\xf1\xbd\xe2\xc7\x68\x56\x0f\x4a\x75\x05\x2c\xc6\x25\x5b\xf1\x06\xa8\x1b\x46\x01\xe2\x0b\x8b\xea\x0c\x71\x57\xc6\x9a\x8b\xb7\x8f\xf0\xb2\x9b\x84\x96\x41\xf1\x7f\x65\x7f\x05\x00\x00\xff\xff\xd2\xd6\x67\x41\x3c\x1b\x00\x00")

func staticx_index_html_bytes() ([]byte, error) {
	return bindata_read(
		_staticx_index_html,
		"staticx/index.html",
	)
}

func staticx_index_html() (*asset, error) {
	bytes, err := staticx_index_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "staticx/index.html", size: 6972, mode: os.FileMode(420), modTime: time.Unix(1446874443, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticx_js_debug_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x54\x4d\x6f\x9c\x30\x10\xbd\xe7\x57\x58\x51\x24\x58\x25\x85\x1e\xaa\x5e\xa2\x56\xaa\xb2\xaa\x14\xf5\x43\x55\xd4\xee\xa5\xea\xc1\x0b\xb3\xc4\x8a\xb1\x91\x6d\x48\xa2\x8a\xff\xde\x01\x37\x8b\xed\x65\x81\xee\xa1\xb9\x64\x61\xde\xcc\xbc\xf7\x66\x86\x5d\x2d\x32\xc3\xa4\x20\x6b\xd8\xd6\xc5\x8d\x51\x3c\xbe\xd0\x99\xac\xe0\x8a\x5c\xdc\x1b\x53\xe1\x3f\x25\x6b\x03\xdf\xa8\xa2\xa5\xc6\x27\x2e\x8b\x15\xf9\x7d\x46\xf0\xcf\x02\x93\x8a\x89\x1c\x9e\xbe\xd2\x12\xc8\x3b\x72\x7e\x7e\xed\xc6\x72\x99\xdd\xe6\xa3\xaf\xef\x40\xd7\xdc\x68\x8c\x89\x9a\xf3\x30\xda\xb3\x99\x80\xec\x18\xf0\x5c\x4f\x00\x40\x29\xa9\xbe\x80\xd6\xb4\x80\xb1\x78\x49\x9f\x3e\x7d\x06\x81\xa1\xd7\xe1\xfb\xcd\xfe\xbd\x1b\x28\xc0\x7c\xec\x9b\x62\xe8\xc5\xb4\xf8\xc5\x89\x45\xcc\xe6\xd8\x0d\xa0\xce\xf8\xae\x61\x1c\xa5\xb4\x62\xa9\x35\xf8\xd5\x96\x43\x03\x69\x74\x79\x60\xfb\x65\x94\xda\xae\x69\xb4\x4a\xf6\x55\x74\x9d\x65\xd8\x21\xde\x93\xcd\xa9\xa1\x2e\xe1\x09\xd2\x1d\x74\x20\xdd\x3a\x55\x7b\xe6\x7e\xcd\x2b\x92\xc9\x1c\x8e\x54\x0e\x94\x86\x85\xed\xef\xd6\x73\x3a\xef\x66\xbf\x96\xd9\x8c\xd1\x47\x76\x68\xe1\x1e\x2d\x59\x95\xa9\x75\x99\x5c\x99\x13\x87\x88\x7c\x31\xe2\xb9\xf8\xd7\x74\xd1\x39\xfc\xe3\xee\xf6\x46\x96\x95\x14\x20\x4c\xec\xde\xd7\xea\xc4\xa9\x7b\x0e\xda\xc9\xf8\xb0\x93\x24\xf4\x96\x8f\xeb\xf8\x47\x2d\x8b\xf5\x38\x9a\x2a\x25\x3b\xfc\xda\x1f\xbd\xcd\xba\xf6\x92\xda\xa0\xd3\xe2\xcd\x76\xba\x4d\x6e\xb7\x6d\xf2\x3f\xcf\xc8\xff\x62\x8d\x5b\xe1\x5e\x55\xe8\xe5\xd1\xbb\x09\x96\x63\x87\xdc\x1b\xaa\x08\x23\x4c\x1c\x49\x0a\x75\x74\x70\x25\x1f\xb1\xd6\x38\xfe\x27\xfb\xe5\x3b\x87\xe0\xe4\x01\xe1\xd4\xc8\x6d\xdc\x3f\xc0\xf3\x2a\xd1\x15\x67\xb8\x8e\x51\x30\x4b\xb6\x23\x16\x93\x70\x10\x85\xb9\x27\xef\x83\xc3\x9d\x98\xe1\x70\xda\x6e\x85\x60\x8c\x87\xd4\x18\x26\x6c\xa9\x86\xb7\x6f\xd6\x90\x7d\x97\x1f\x94\xda\xb3\x3c\x14\xd2\xb8\x42\x1a\xca\x67\x85\x34\x63\x42\x36\xb3\x42\x36\x83\x90\x66\x46\x48\x7b\x16\x8e\xfd\x01\x13\x0c\x2b\xa1\xff\x50\xc2\x23\x41\x49\xf4\x39\x0e\x7c\x3c\xf8\xfa\x35\x33\x59\x9b\x21\x0b\xf7\xb3\xfd\x13\x00\x00\xff\xff\xe6\xe2\x76\x3a\x70\x08\x00\x00")

func staticx_js_debug_js_bytes() ([]byte, error) {
	return bindata_read(
		_staticx_js_debug_js,
		"staticx/js/debug.js",
	)
}

func staticx_js_debug_js() (*asset, error) {
	bytes, err := staticx_js_debug_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "staticx/js/debug.js", size: 2160, mode: os.FileMode(420), modTime: time.Unix(1446874443, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticx_partials_debug_rows_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x90\xb1\x6e\x83\x30\x10\x86\xf7\x3c\xc5\xf5\xd4\x95\x92\xaa\xea\x06\x4c\xdd\xd2\x29\x43\x96\xaa\x83\xc1\xa7\x60\xe1\xd8\xc8\x36\x82\x08\xf9\xdd\x6b\x83\xa9\x50\xbb\x74\xe9\xe4\xff\xe4\x4f\xf7\xdd\x5d\xd1\xbe\x54\x67\x3d\xda\x22\x0f\xe1\x70\x28\x1c\xab\x25\x41\xad\x0d\x27\x53\xe2\x11\xa1\x91\xcc\xda\x12\x39\xd5\xc3\x15\xab\x03\x40\xe1\x4c\x7c\x62\x68\xa1\xd1\xd2\xf6\x4c\x95\x38\xcf\x37\x36\x9d\xde\x49\x79\x8f\xd5\x89\xee\x45\xee\xda\x84\x3d\x64\xd9\x6f\xf4\x92\xd0\x0b\x93\x03\x2d\x70\x96\x2d\xdd\xf3\xb5\x7d\xb0\x80\xba\x66\x86\x7a\x62\xae\x44\xa3\x47\x10\x0a\xb8\x6e\xde\xe2\x20\x67\xb2\x83\x74\x16\xb7\x41\xf8\x1a\x00\xe6\x39\x90\xde\xa7\xea\xc7\x36\xcf\xb8\x61\xbb\x2d\xb6\x92\xc3\x28\xb8\x6b\x4b\x7c\x3d\xf6\x13\xee\xdd\x4d\x1b\xd5\x9d\x24\xe5\xc4\x8d\x2c\x38\xc3\x9a\x0e\xea\x3b\x3c\x0a\xc5\x69\xc2\x6a\x91\x3e\x75\x1f\x6b\xfd\xe9\x7d\x58\x82\xef\x54\xf9\xde\xf5\x0f\x62\xf1\x17\x73\xc8\xf1\x18\xe9\x62\x09\x5b\x81\xef\xaf\xaf\x00\x00\x00\xff\xff\x63\x5f\x1c\x85\x0d\x02\x00\x00")

func staticx_partials_debug_rows_html_bytes() ([]byte, error) {
	return bindata_read(
		_staticx_partials_debug_rows_html,
		"staticx/partials/debug-rows.html",
	)
}

func staticx_partials_debug_rows_html() (*asset, error) {
	bytes, err := staticx_partials_debug_rows_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "staticx/partials/debug-rows.html", size: 525, mode: os.FileMode(420), modTime: time.Unix(1446874443, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticx_partials_debug_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x94\xcf\x8e\xd3\x30\x10\xc6\xef\x7d\x0a\xcb\x97\xdd\x3d\x04\x53\xb8\x70\x48\x72\xaa\x40\x3d\x80\x10\x6f\xe0\xd8\xd3\xc4\x5a\x27\x8e\x6c\x67\xb7\x4b\xd5\x77\x67\xfc\x27\xa4\xe9\x22\x01\x85\x4a\x8d\x1c\xcf\xcc\xef\x1b\x7f\xd6\xa4\xec\xb6\x44\x68\xee\x5c\x45\x47\xde\x42\xd1\x01\x97\x60\x69\xbd\x83\x66\x6a\x4b\xd6\x6d\xeb\xcd\xa6\x94\xea\x89\x0c\x6d\xe1\x3a\xf3\x5c\x51\xb0\xd6\xd8\xcf\xe0\x1c\xa6\xd3\xb9\x96\x6b\xb0\x9e\xc4\x67\x21\xf9\xd0\x82\x0d\x05\x42\x1b\xfe\x48\x89\x35\x1a\x72\x0a\xad\x37\x84\x9c\x4e\x97\x8c\xf3\x79\x53\x32\x54\x08\x42\x07\x63\xfb\x19\x19\xd6\x45\x67\xac\xfa\x6e\x06\xcf\xf5\x8c\x09\xdb\x91\x12\xbb\xba\xcc\x6d\xad\x99\xc6\x18\xc2\xa0\xe6\x0d\x68\x82\xfb\x15\x55\xc3\x38\xf9\xaf\xfb\x41\xc2\xf1\x0b\xef\x97\x9e\x85\xd1\x85\xeb\x8b\x77\x44\xa0\x00\xc2\x8b\x58\x93\x01\x84\xa4\x0a\x12\x4a\x12\x92\xc5\x78\xe6\x5f\x88\x67\xce\x87\x9f\x95\x65\x54\x0c\x06\xf4\x46\x82\x46\x67\xd5\x22\xee\x5f\x46\x3c\x85\x87\xa3\xa7\xab\xee\x73\x13\x34\x33\xf2\x4f\xc9\x5f\xf4\x3f\x6a\x2e\xa0\x33\x1a\x2f\xaa\xa2\xf7\x8d\x86\x27\x20\x49\x82\x0c\x98\xf0\x30\x7b\x90\x5c\xbd\x5c\xfc\x95\x65\x3b\x23\xfe\xd4\x2b\x4c\x25\xfb\xdd\xbf\xda\x24\x8d\xd8\xcb\x9b\x1d\x8a\xed\xae\xad\x41\x20\xc6\x6f\xf5\xe3\x75\xef\xe6\x70\x70\xe0\xa3\x0b\xf1\x7d\xfb\x76\x39\x4c\x33\x79\x6f\x86\xdc\xbc\x9b\x9a\x5e\x2d\xed\x37\x7e\x20\xf8\x2f\x46\xab\x7a\x6e\x5f\xae\x4e\x90\x26\x45\x89\x47\x74\x20\x4c\x1d\x1e\xe4\xfe\x21\x4f\x60\x70\xb6\x64\x89\xfd\x7f\xa5\x5a\xf0\x1f\x15\x68\xe9\x82\xd6\x27\xf0\x24\xbd\xad\xc5\xae\x2d\x2b\x59\xb0\xe9\xd5\x27\xe1\x10\x4b\xbf\x81\x9b\xb4\x77\x69\x38\xbb\xf7\xf5\x0c\xc4\x65\xd8\x19\x2d\xd4\xa7\xd3\x2a\xf5\x7c\x2e\x59\xd8\x5e\x3e\x00\x2b\x2c\x5e\xdf\x35\x33\xda\xb1\x02\x2e\x49\xbf\xa7\x45\x4b\x67\x64\x88\xa8\x41\xe8\x49\xa6\xf9\x26\xce\x8a\x8a\xde\x31\xe7\xb9\x57\xe2\xc8\x46\x6e\xbd\xe2\xda\xb1\x78\x29\x85\x35\xcf\xee\x4d\xe7\x7b\x7d\x47\x19\xb2\x7f\x04\x00\x00\xff\xff\xd5\x2e\xf4\xc1\x38\x05\x00\x00")

func staticx_partials_debug_html_bytes() ([]byte, error) {
	return bindata_read(
		_staticx_partials_debug_html,
		"staticx/partials/debug.html",
	)
}

func staticx_partials_debug_html() (*asset, error) {
	bytes, err := staticx_partials_debug_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "staticx/partials/debug.html", size: 1336, mode: os.FileMode(420), modTime: time.Unix(1446874443, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticx_partials_index_ft_index_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x90\x4d\x6e\x84\x30\x0c\x46\xf7\x9c\x22\xf2\x66\x56\x34\x17\x08\xec\xbb\x68\xd5\x2b\x98\xe0\x42\x34\x26\x41\x76\xe8\x8f\x10\x77\x2f\x03\x43\xd5\x51\xdb\x59\x24\xb2\xe4\xf7\xf9\x25\x76\x89\x8d\x67\x54\xad\xa0\x11\xc2\xd6\xcb\x34\x34\x50\x17\xc6\x38\x0e\xb5\xd3\x11\xe3\xd1\xef\xf8\x73\xec\x83\x4f\xd1\x7c\x57\x65\x93\xd2\x19\x6a\x67\x57\xf6\x88\xa0\xe9\x85\x5e\x2b\xb0\x21\xb6\xf4\x41\x0a\xf5\xe3\x5e\x38\x8b\x37\xe4\x3c\x6f\xc4\x33\x0e\xb4\x2c\x7b\xc3\xd9\xc4\x75\x51\xb8\x36\xbc\x99\xd8\x95\xda\xa7\xf7\x0a\x74\xf2\x9e\x54\x9f\xd6\x83\x1d\xc1\xf1\x1c\x64\x92\x6c\xb6\xbb\xbc\x22\x97\x8c\xe7\x84\x67\x30\x92\x98\xae\xcc\xf6\x9b\x79\xbe\x1d\xb3\x2c\xab\x6c\xd5\xfc\xb2\x91\x48\x92\x7b\xae\x16\x63\x47\x72\x57\xf5\x73\xc6\x1f\xa2\x10\x3d\x4f\x2d\x19\x15\x5f\xc1\xc9\x6a\xc6\x1c\xbc\x1d\x51\x72\x40\xd6\x7d\x6f\x36\x63\xa3\x0f\x7d\x1e\xf8\x04\xf6\xbf\xec\xca\xbc\x60\xee\x2f\xc0\x57\x00\x00\x00\xff\xff\xc2\x0e\xa1\x2d\xc8\x01\x00\x00")

func staticx_partials_index_ft_index_html_bytes() ([]byte, error) {
	return bindata_read(
		_staticx_partials_index_ft_index_html,
		"staticx/partials/index/ft/index.html",
	)
}

func staticx_partials_index_ft_index_html() (*asset, error) {
	bytes, err := staticx_partials_index_ft_index_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "staticx/partials/index/ft/index.html", size: 456, mode: os.FileMode(420), modTime: time.Unix(1447037434, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticx_partials_index_ft_list_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x54\xc1\x8e\x9b\x30\x10\x3d\x27\x5f\xe1\xba\xaa\xb6\x3d\xb0\x9c\xb7\x25\xbe\xf7\xd0\xfd\x85\xca\xe0\x59\xb0\x62\x6c\xcb\x1e\x4a\xa3\x28\xff\xde\xb1\x4d\x20\xdd\x6a\x95\x9e\x16\x29\xc6\x30\xf3\xe6\xbd\xbc\x19\xd3\x38\xc3\x6c\x5f\xe9\x97\x03\xd7\x56\xc1\xef\x67\x39\x42\x7c\x34\x60\x7b\x1c\xf8\x9e\xd1\xd5\x19\x19\xe3\x81\xb7\x01\xa4\xea\xc2\x34\xb6\x5c\xd0\xfb\xc6\x68\xd1\x44\x2f\xed\x35\xde\x9b\x93\x1f\x74\xe7\x2c\x5b\x77\x55\xeb\xdc\x91\x8b\xa6\xa6\xdc\x2b\x44\xb2\x21\x00\x91\x7d\xe4\xe2\x7b\xe2\x83\xd8\xd4\x72\x49\x69\x6a\x67\xc4\x7e\xdf\x28\xfd\x2b\x69\x8a\x83\x9b\x0f\x1c\x42\x70\xe1\x07\xc4\x28\x7b\xe0\x57\x32\x69\x20\x20\xcb\x6b\xa5\xa4\xed\x21\x24\x40\x67\x9c\x3c\x72\x16\x9c\x81\x25\x25\x4b\x3d\x9f\x6f\x6b\x5c\x2e\xc4\x43\x0c\x89\x08\x65\x6b\xe0\xce\xdf\xdf\x1c\x28\xd9\x79\xad\x22\x06\xed\x41\x51\xfd\x5d\x83\x81\x56\xba\x0d\x6c\xd6\x0a\x87\x03\x7f\x7a\xfa\xc4\x45\xaa\xd4\xd4\x38\x2c\x31\xb1\xec\xe9\x16\x0a\x28\xf1\x06\xf0\x20\xf1\x86\x9b\x69\xcb\x36\x21\xbc\x80\xd5\x66\x5b\xad\x8b\x69\xf5\xf9\xbc\xa6\x5d\x2e\x5c\xfc\xf5\x58\x1c\x25\x58\x41\xb3\x88\xa7\xe4\xc8\x3c\x68\x24\xe5\x5e\x76\xf0\x95\x59\x37\x07\xe9\xbf\x65\x86\x5d\xd3\x4e\x88\xd4\xb9\xec\xa1\xee\x8e\xe4\xba\xd2\x98\xfb\xf3\x79\xad\xfb\x85\xa7\x54\x76\xbd\xf0\xe4\xa9\x66\x01\xae\x7d\x69\xd1\x32\xfa\x55\x0a\x5e\xe4\x64\x30\xef\xe3\x58\x48\x76\x77\xc7\x25\x91\xa6\x71\x49\x79\x82\xa5\xa7\x2c\xae\x2e\x24\x6f\x28\xa5\xa6\x5b\x78\x77\xa9\xde\x4c\xb1\x8a\xba\xb7\x9b\xde\x2c\xe4\x3f\x04\x2b\x30\x80\xef\xaf\x18\x83\x8c\xc3\xaa\xf6\xb5\xce\x65\x5c\xca\x74\xd2\x9a\x86\xfc\xe6\x28\xa6\xf3\xf1\xe1\xad\x03\x92\xe2\xb6\x33\x93\x22\xc9\x0f\x75\x44\x89\xba\xab\xbd\x0c\xa8\xa5\x89\x65\x60\xd3\xdb\x80\x8f\x03\x8e\xe6\x81\x8b\xed\x00\xa6\xf2\x8b\x66\x6d\xfd\x84\x55\x1f\xdc\xe4\xcb\x07\xe6\x9f\x91\xff\x69\x61\xce\x21\x0a\x2e\xae\xbe\xb6\xc6\x07\x3d\xca\x70\xe2\x8b\x81\x71\x6a\x47\x8d\x0b\x86\x50\xfa\x5e\x4b\x93\x3f\x5a\xb0\x67\x98\x59\x6e\x50\x21\x5b\x7d\x4a\x7b\xb9\xca\xff\x13\x00\x00\xff\xff\x6b\xaf\x71\xa8\x3b\x05\x00\x00")

func staticx_partials_index_ft_list_html_bytes() ([]byte, error) {
	return bindata_read(
		_staticx_partials_index_ft_list_html,
		"staticx/partials/index/ft/list.html",
	)
}

func staticx_partials_index_ft_list_html() (*asset, error) {
	bytes, err := staticx_partials_index_ft_list_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "staticx/partials/index/ft/list.html", size: 1339, mode: os.FileMode(420), modTime: time.Unix(1447043173, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticx_partials_index_ft_new_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x58\x5b\x6f\xdb\x36\x14\x7e\xcf\xaf\x60\xf4\x50\x27\x80\x15\x77\x5d\x81\x0d\x99\x6d\x60\xe8\x36\xa0\xc0\x16\x14\xc8\xf2\x14\xf4\x81\x92\x4e\x6c\xc1\xb4\x28\x90\x54\x2e\x75\xfd\xdf\x77\x48\x51\x24\x75\xf1\x2d\xcb\x43\x0d\x24\x96\xc5\x73\xfd\xce\x39\x9f\x28\x4e\xb3\xfc\x91\x14\x8b\x38\x7f\x98\x45\x6b\x50\x34\x9a\x9f\x9d\x4d\x39\x23\x29\xa3\x52\xce\xa2\x44\x00\xcd\x52\x51\xad\x13\x5c\x20\x64\xca\xf2\xf9\x54\x96\xb4\x68\xd6\x17\xec\xa5\x5c\xe6\x29\x2f\x88\xbb\x8a\x13\xce\x57\xd1\x7c\x3a\x41\xd9\x46\x85\x92\xa5\x00\xf4\x30\xc9\x8b\x0c\x9e\x41\x46\xf3\xcf\xf5\xc5\x74\x42\x43\x49\x1d\x89\x5c\xf2\xa7\x59\x94\xcb\x3f\xb3\x5c\x45\xf3\xcd\xa6\x80\x27\x23\x7c\x43\xd7\xb0\xdd\x0e\x0a\x9f\x37\xd2\x37\xf0\x44\x8c\x70\x2d\x36\x9d\x70\xa6\xf3\xb1\x39\xd6\xc2\x20\x04\x17\xff\x80\x94\x74\x01\x51\x93\x07\x65\x20\x14\x31\xff\xe3\x8c\x16\x0b\x10\x5a\x21\x65\x9c\xae\x22\x22\x38\x03\x2b\x62\x50\xd8\x6c\x42\x1b\xdb\x2d\xfa\x41\x0f\xda\xd1\x03\x17\xeb\xc6\xa4\xb9\xd6\xff\xe2\x25\x17\xf9\x37\x5e\x28\xca\x1a\x5b\xfa\x76\x0d\xa8\x0e\x2d\x50\x88\x17\x82\x57\xa5\x59\xd2\x39\xd2\x04\x98\xb6\x81\x78\x14\x65\xa5\x1c\x0e\x91\x59\xb7\x1f\xab\x9e\x72\x16\xcb\x75\xfc\x81\x60\x0d\x14\xba\x89\x8d\xb6\x45\x9a\x68\x2d\x04\x45\xdf\xb2\xc6\x03\xcf\x56\xf5\xa7\xf7\x81\x5d\x93\xbe\x59\xdd\x8c\x96\x54\xc6\x26\xe5\xd1\x35\x31\xdf\x7f\xe5\xc0\x32\x79\x95\xbb\xba\xd8\x88\xad\xd9\x6e\x15\x07\xa2\x75\xaa\x43\x25\x36\x68\x5a\x7b\x26\xf1\x7e\xa9\xf5\x9d\x35\xcf\x80\xcd\xa2\x50\xbb\xe5\x8a\x10\xf5\x52\x22\xda\x0a\x9e\x55\xd4\x42\xd9\x42\xd4\x91\xce\xb3\x1e\xce\xa4\x64\x34\x85\x25\x67\x19\x60\x11\x4a\x06\x54\x02\x81\x42\x61\x7f\xe0\x10\x98\x24\xe2\x42\x0b\x4e\x2c\xaa\x4d\xec\xfe\xe2\xf4\x0a\xff\x8b\x51\x9f\x5e\x61\xad\x75\x44\x85\x1d\xb0\x12\x18\xa4\x6a\x00\xc7\xb6\x7b\x5c\xe7\xa5\xca\x79\x81\x56\x54\x5d\x71\x2d\x40\xa8\x24\xea\xaa\x0e\xdf\x64\x44\x92\x17\xbc\x91\x52\x05\x0b\x2e\x5e\x74\x4a\x44\x21\x40\xc4\x69\xc8\xdf\x85\x70\xde\xd1\x7f\x6d\x95\x3c\x52\x56\x61\x8d\xa2\x79\x1c\x93\x74\xc9\x39\xe2\x6b\x54\x4c\xed\x48\x1c\xe3\x0c\x1b\x41\x17\xf7\xa4\x0e\x7c\x2f\xde\x96\xd0\xc2\x8c\xc8\xbb\x77\x36\x16\x58\x63\x51\x15\xc8\xfe\x9d\xfb\x50\xe1\xab\xc3\xe0\x40\xf5\x0e\x54\xe7\x50\x4d\x7e\x6d\xcf\x4e\x38\x1f\xba\xd3\x11\x47\x3f\x20\x3a\xae\xed\x36\x44\xb1\xc9\xb6\x48\x59\x95\x81\xd5\xdb\x95\xd0\xc4\x83\xe8\x46\x6c\x37\x82\xf5\xc0\x75\x31\x6c\xfd\x3e\x9f\x91\x51\x82\x13\xb2\xc2\x09\x81\x91\x5e\xbe\x38\xef\x80\xfc\xfd\x3b\x39\xdf\x17\xd4\xa5\x83\x19\x5d\x0a\x28\x81\xaa\x59\x74\xe1\xba\x66\x4c\xca\x4b\xdd\x46\x8d\xce\x17\x2a\xe8\x5a\x46\x7d\x34\x83\xea\xb4\x48\xcc\x99\x5c\x8d\xc9\xa3\x31\xd5\x11\x18\x48\x73\x36\xf3\x6d\x6b\x92\xa2\xd9\x23\x2d\x52\xc8\x4c\x36\xcd\x8f\x9a\x04\xef\x57\x41\x0a\x27\xd0\x66\x9d\xc8\xbd\xf3\xf3\x15\x0d\x05\x34\x3a\xd4\x5a\x1f\xdb\xad\x45\xbc\x1d\x4d\xa2\xe6\x5e\xfe\x0d\x2e\x56\x97\xe6\x31\xe9\x9b\xee\x40\xdb\xe1\xb2\x66\x48\x8a\x8f\xfa\x01\x36\x18\x8a\xb3\xc3\x9b\xe6\x23\xf8\x93\x4e\x7a\x53\x6a\xf9\x9b\x6a\xfd\x77\x5e\x80\x06\x07\xdb\x75\x40\x7a\x88\x8c\x71\x52\x9a\x38\x8e\xef\xd3\xa3\x99\xf5\x96\x57\x22\x85\x53\xa9\xb5\xd6\x7a\x13\x6e\x1d\x0a\xa0\x4d\xae\xd2\x49\x1c\xcd\xae\x5e\xe5\x78\x7a\xad\x75\xfe\x17\xbf\xee\x9e\xb9\x70\xa0\x7c\xc6\x96\x38\x82\x1b\x9a\x39\x8a\x9c\x8d\xf6\x97\xeb\xc0\x5e\xe7\xe3\x8e\x72\x1d\xb3\xd9\x09\x68\xd7\x6d\x31\xba\xc5\x7a\xc5\x8e\xc2\x6f\x22\x76\x9a\x68\x6d\x29\x92\x2a\x5d\x81\x7a\xdd\x1e\xe2\xb5\x98\xeb\x95\x86\xc4\xf6\xe3\x6f\xd9\xf6\xf4\x0a\xd4\x8a\x87\x6b\x30\x4c\xd5\xbe\xab\x03\xfa\xdf\x11\xd1\x31\x84\x2b\x03\xd5\x7b\x6f\x3c\xe4\xdb\x61\x06\xbc\xdd\xa1\xd8\xa7\xb4\x61\xfa\x0b\x7d\x0d\xf0\xe0\xe1\x2d\xe9\xee\xea\xe2\x33\xca\x5b\xef\x73\xe7\x0f\xd4\x44\x77\x77\x9f\xff\x78\x45\x0b\x69\xb5\xb7\x18\xe2\x9e\xfb\xd3\x87\x78\xc0\x44\x6b\x88\x2f\x6a\x0a\xa5\x8c\xd8\x71\xae\xaa\x3c\xbb\x7c\xab\x77\x82\x2f\x8c\x16\x03\x83\xe8\x0a\xe6\xaa\x70\xc2\x73\x4d\xdb\x3c\x7a\x48\x07\x87\x64\x8f\xef\x26\x3c\x5f\x89\x20\x85\x1d\x93\x32\x2a\x9d\xc8\xe8\xe8\x59\xf1\x75\x0a\x1c\xbc\x7a\x14\xdc\x1e\xf3\xb6\x4a\xd6\xb9\x1a\xd8\x63\x5a\x44\xf8\xc3\x83\xc4\x22\x6b\x50\x7b\x4f\xfe\x6e\x1b\x3a\x80\x6c\xd3\xa5\x4b\x48\x57\x09\x7f\xf6\x27\x0f\xed\x19\xd2\x9f\x5b\x84\xd6\xcd\x16\x41\x57\x2a\x2f\x16\xd2\x3d\x9f\x8d\x0b\xe7\x30\x11\x7e\x57\xdf\x3d\x66\x99\x84\x1b\x82\xa4\x52\x8a\xbb\x83\x9b\x44\x15\x04\xff\xe2\x54\x3b\xc1\x86\xf8\x64\xbe\xa7\x93\x5a\xca\x6f\x06\xfc\x56\xcc\xea\x1b\xbe\xcd\xd3\x15\xbe\x0d\xdb\xd7\xd5\x8b\xf0\x05\x7c\xdc\x7a\x41\x18\x77\xf6\xed\xe3\x36\x99\x04\x3f\x9d\xae\x9f\xb8\x71\x97\xf5\xcd\x0d\x5f\x69\x7c\x36\x08\x78\x34\xd6\xb5\xf8\x65\xb7\x67\x6a\xc0\x65\x5d\xcc\x6e\xde\x19\x3c\xd0\x8a\xa9\x10\x20\x73\xae\xd5\x3f\x53\x0a\xac\x7e\xc2\x9e\x52\x50\x9f\x30\x79\xbd\x89\x56\xdc\x69\x67\xc0\xcc\x5d\x99\x1d\x32\xd3\x2e\x44\xb7\x83\xa7\x13\xdd\xb5\xfa\xc0\xa9\x39\x78\x92\xea\x85\xc1\xfc\xcc\x9c\x39\x5d\x05\x2d\xbd\x39\xd3\x93\x03\x54\x5c\x93\x84\xab\xe5\x6f\x67\xdb\xbe\x0c\x9a\xf0\x27\x39\x46\xa3\xa4\x59\x86\x2d\x17\x2b\x5e\x5e\x93\x5f\xca\xe7\x41\x35\xbb\xc7\xd5\xf2\x6b\x2a\x16\x79\xb1\x5f\xdc\x90\x4c\xf0\xea\x63\x14\xf5\xa0\xc6\x4a\xd0\x42\x6a\xc9\x6b\x92\xd2\x32\x57\x54\xbf\xc5\x38\x1b\xa6\xdb\xaf\xdc\x34\x04\xee\x30\x21\xc5\x51\xe9\xe7\xf7\xa1\xcb\xf6\x10\xf7\xc2\xfb\x60\x85\x11\xee\x1a\xb2\xff\x02\x00\x00\xff\xff\x46\xcb\x3f\x22\x01\x15\x00\x00")

func staticx_partials_index_ft_new_html_bytes() ([]byte, error) {
	return bindata_read(
		_staticx_partials_index_ft_new_html,
		"staticx/partials/index/ft/new.html",
	)
}

func staticx_partials_index_ft_new_html() (*asset, error) {
	bytes, err := staticx_partials_index_ft_new_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "staticx/partials/index/ft/new.html", size: 5377, mode: os.FileMode(420), modTime: time.Unix(1447037434, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticx_partials_index_ft_query_results_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x55\xc1\x52\xdb\x30\x10\xbd\xe7\x2b\xb6\x6a\x87\xc0\x14\x27\x40\x87\x03\x60\xfb\xd2\x7b\xa7\xd3\x70\xef\x28\xb6\x6c\xab\xc8\x92\x2b\xc9\x01\xc6\xf8\xdf\x2b\xc9\x96\x65\x07\x68\x7b\x8a\xb5\xda\x7d\xfb\xde\xd3\x4a\x89\x73\x7a\x80\x8c\x61\xa5\x12\x24\x89\x6a\x99\x56\x5f\x05\xd7\x98\x72\x22\x51\xba\x5a\xb9\x7d\x5e\x46\xaa\x12\x8f\x53\xc6\x46\x0b\x8d\xd9\xcf\x8a\x6a\x65\x72\x00\xe2\xea\xfa\x08\xe3\x5e\x34\x6e\xc7\xec\xa9\x06\x73\x8b\x50\xd1\x9c\x24\xa8\xc1\x25\x81\x18\xae\x50\xfa\xdd\x7e\x75\x9d\x0d\xf4\x3d\x88\x02\xe2\xad\x4d\x1d\xaa\xba\xee\x75\x2b\x93\x35\x06\x67\xc0\xbe\xad\x68\x79\x7e\x2f\xc4\x03\x4a\x4f\x43\xed\x14\x35\xa5\x8a\xc8\x03\x91\x91\x32\x2c\xce\x42\xa7\x78\x5b\x5d\xbb\xdf\x99\x0d\x4d\xcb\x58\x24\x69\x59\x69\xf4\x5a\xf9\xa4\xd9\xd4\x50\xde\xb4\x1a\xf4\x73\x63\x74\x65\x15\xc9\x1e\xf6\xe2\xc9\x95\xd4\x22\x27\x2c\x41\xe4\xa9\x61\xc6\xc8\x5d\x26\x24\xe5\x25\x4a\x61\x67\xa0\x60\x5c\xba\xe6\xa6\xab\xf1\xd8\x7c\x09\x06\x4a\x63\xa9\x13\xd4\x75\x05\x95\x4a\xff\x70\xfd\xfa\xde\xf7\x62\xd4\x02\x4b\xd2\x10\x6c\x92\x0c\x0b\xa0\x1c\xde\x20\x65\x52\xf7\x69\xd7\x99\xc8\x86\xe6\x7d\x1f\x6f\xf7\x53\x7c\xee\xd7\x1e\xe7\x25\x99\xc9\x3b\xa6\x3a\x20\x38\xff\x48\x6e\xa3\xc4\x62\x85\xf3\x59\x3a\xf6\x48\x18\xfb\x0b\xd8\x58\x01\x33\xe9\x23\x46\xcb\x52\xa3\x2c\x9d\x66\x64\x4f\x79\x1e\x55\xba\x66\x4e\xe2\xc6\x01\x71\xac\xa9\xe0\x3b\x6d\x2b\x77\xb8\x20\x28\x1d\x89\xc4\x5b\x5b\xba\x35\x18\x9e\xd2\xe0\xe7\x3b\xfc\x02\x0d\x3f\xd3\xde\xcd\xd3\x82\x12\x96\x7f\xc3\x35\x39\x87\x42\xe2\xb2\x26\x5c\xab\x33\x6b\xb0\x25\x31\x45\x66\x08\x01\x63\x50\x3c\xe5\x6c\x18\xe1\xa5\xae\x20\x85\x0b\x6b\xe2\x04\x6c\xdd\x9b\x91\xf3\xe2\x67\xcb\x57\x67\xec\x31\x2d\x8f\xc0\xe1\xc8\x25\xbf\x81\x06\x37\xe6\xf0\xdb\x39\xfe\xd2\x9a\xb0\xf0\x55\xf1\x56\xb0\x61\x12\x17\xba\x78\x5b\xdb\x6b\xaa\x8c\x9e\x4b\xe4\xdd\xcc\x04\x8b\x58\x19\x5d\x5e\xc1\xf8\x25\x8a\x42\x11\x1d\x5d\xfb\x59\x6d\xd9\x74\x95\x70\x49\x87\xf3\x0b\xe3\x39\xa8\x1c\xf0\xdd\x6b\x60\xb1\x67\x4c\xb1\xdd\xce\x18\xcd\x1e\x12\xf4\xab\xad\x9b\x7b\x61\x29\x9c\xda\xd4\xe8\xf2\x1c\x3e\x91\x83\xd1\x7b\x86\xa0\x92\xa4\x48\xd0\xe2\x50\x4e\x18\xfe\xdd\x8a\xbb\x99\x6a\x1c\x34\x07\x7b\x8e\x8c\xa6\xd6\xe1\x03\x66\x34\x77\x5a\x9d\xc5\x58\x6b\x19\x8d\x22\xba\x8e\x42\x92\x80\xe3\x7a\x72\x02\x6b\x9c\x69\x7a\x20\x6b\x78\x79\x81\xf5\x1a\xa6\x2b\x1a\xc8\x0f\xda\x28\x7c\x18\x8a\x26\xaa\x6f\x0b\xa3\x41\x93\x99\x18\x6a\x27\x05\xcf\x10\x97\xcf\x67\x00\xf5\xb9\x8b\x3b\xb9\x14\xf9\x36\xaf\xf1\x05\xf6\x47\xfb\x0e\x2b\x9b\xf5\xf9\x5f\x76\xcb\xff\xb0\xdb\xcf\xe1\x38\x74\xfe\xcd\x9b\x7e\x95\x7e\x66\x24\x5d\x6d\x8e\xff\x7c\xa0\x33\x45\x35\x96\x66\x80\x22\x46\x0a\x7d\x0b\x5f\x2e\x9a\xa7\xbb\x55\xbf\x0a\xcf\xba\xcb\x31\x43\x28\xe4\x2d\x7c\xbc\xb9\xb9\xb1\xbb\xc6\x11\x87\xf8\x27\x00\x00\xff\xff\x1b\x61\x4f\xfb\xd9\x06\x00\x00")

func staticx_partials_index_ft_query_results_html_bytes() ([]byte, error) {
	return bindata_read(
		_staticx_partials_index_ft_query_results_html,
		"staticx/partials/index/ft/query-results.html",
	)
}

func staticx_partials_index_ft_query_results_html() (*asset, error) {
	bytes, err := staticx_partials_index_ft_query_results_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "staticx/partials/index/ft/query-results.html", size: 1753, mode: os.FileMode(420), modTime: time.Unix(1447037434, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticx_partials_index_ft_tab_manage_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x57\x5b\x6f\xdb\x36\x14\x7e\xf7\xaf\x60\x5d\x2c\x4e\x80\xc8\x4e\xb6\x26\x58\x1d\xd7\x40\xd7\x64\x40\x1f\x06\x64\xcb\xc3\x1e\x8a\x3e\xd0\xe2\xb1\x45\x98\x26\x35\x92\xaa\xeb\xaa\xfe\xef\x3b\xa4\xee\xb6\x9c\xfa\x52\x24\x81\x25\x8a\x3a\xd7\xef\x7c\xc7\x3c\x1e\x31\xfe\x85\xc8\x59\x60\x22\xb5\x7c\xd7\x05\xad\x95\xfe\x0b\x8c\xa1\x33\xe8\x92\x50\x50\x63\xde\x75\xa9\x00\x6d\x89\xbf\x06\x8c\xca\x19\x68\xa7\x10\x0a\x45\xe7\x5d\xa2\x95\x80\x5c\xa4\x3b\xee\x10\x92\xa6\x75\x1b\xeb\x75\x67\x34\x40\x0f\xe3\x4e\xa7\xe9\x68\x49\xb5\xe4\x72\x66\x5a\x9d\xe4\x2f\x9f\xf1\x32\x4a\x84\xbb\xe1\x42\x70\x27\xa6\x21\x06\x6a\x4b\xb3\x84\x4b\x52\x7a\xc8\x04\x5d\x64\xf9\x16\x06\xe5\x55\x07\x82\x7b\x5b\x03\x67\xac\x0c\xd3\xd2\x89\x80\x22\x2a\x2e\x19\x7c\xfd\xa0\xa4\xc5\x00\x32\x4b\x23\xab\x73\xcf\x36\x1a\x7f\x74\xaf\xc9\x47\x84\xc4\xd8\xd1\x00\x37\xf2\x37\xac\xf0\x39\x32\x31\x95\x2e\x40\x3e\x2d\x8c\x51\xf9\xaf\xe6\x16\xba\x63\x90\xce\x13\x1b\x0d\x9c\x4c\xab\xc2\xab\x0d\x0d\xc6\xcd\x96\x0a\xba\x65\xdb\x6e\x27\x89\xb5\x6a\x87\xe3\x5c\xa6\xf8\xb3\xab\x18\xa1\xcd\x14\xca\x6a\x4c\xac\x24\xf8\x29\x2a\xb1\xa9\xe3\x0b\xc3\xc3\x79\x13\xa0\x73\xff\x70\x0f\xd3\xbe\xa4\x0b\xb8\x24\x3d\xee\x81\xe9\xe1\x2a\xa6\x89\x81\xde\x45\x59\x8b\x22\xd1\xdc\xdd\x4c\xac\xe2\x88\x87\x18\x71\xb9\x0a\x8c\x55\x71\x77\x9c\xa7\x4a\xee\xb3\xd4\x73\xac\x8b\x34\x07\x59\xd8\x3b\xd2\x7e\x75\x7c\xde\x0c\xa6\x34\x11\xf6\xe4\xbc\x35\x98\x64\x71\x60\xe2\xb1\xa0\xab\x2a\xf1\x07\xf9\xa3\xbc\x0b\x06\xe0\x5d\xef\x60\xe8\xdf\x09\x68\x0e\x66\x7f\x8a\xfe\x03\x94\x1d\xc4\xd0\x4c\xe1\x54\x82\x7a\x2b\x2f\xc7\xcf\xff\x10\x96\x95\x2b\x93\x8b\x5b\x08\xb5\xfc\x19\x0c\xcd\xb1\x3e\x90\xa2\x07\x67\x7e\x1a\x43\xcb\xcc\x8f\x48\xbb\x95\x9f\xcf\x65\xbd\x07\x41\x1f\xa9\xb6\xdc\x72\xf4\x83\x40\x18\xc3\x67\x72\x01\xd2\xee\x4b\xd8\x47\x41\xe5\x9f\x5a\x7d\x03\xd9\x4e\xc1\x56\xd2\xd6\x95\x5a\x88\xbe\x37\x6d\x6b\x76\x5e\xae\x7e\xb1\x77\x0a\xf0\x0d\x5c\x11\x13\x39\xcd\xd6\xa7\xd7\xb1\x01\xff\x21\x1c\x3e\x12\x86\xd3\x1a\xb8\x09\xc3\x31\x20\xb4\xf7\xf0\x8f\x51\x68\x72\x1a\xaf\x4e\x6f\x6b\x7c\xf0\x0f\xbb\xc6\x86\x92\xf3\x75\x96\x47\xe3\x27\x95\xe8\x10\xaa\xb7\x8d\x26\x88\xea\xc3\x8e\x54\x0c\xde\x33\xa6\xdd\xb4\x53\xac\xcd\x7b\xad\x4b\x90\x8b\xcd\x12\x90\x11\x25\x91\x06\xac\xd9\xc0\xbd\x32\x83\x34\x75\x77\x04\xd4\xfc\xb1\x72\x82\x9f\x0a\x8d\xcf\xfd\x24\xe1\x6c\xbd\xee\x8e\x33\x11\xb7\xb7\x5e\x8f\x06\xb4\xb4\xe4\xa6\xa5\x33\x39\x31\xf1\x5d\x76\xcd\xe7\xa7\x1c\x9b\x68\xa3\xdf\xeb\x61\xbb\xa2\x3d\x66\x10\x60\xe0\xd5\x13\x54\xc3\x60\xb5\xd9\xad\x7a\x30\x4d\xab\x6d\x4f\x00\x17\x50\xbd\x49\x1b\x02\xc6\xc3\x58\xa1\xf8\x64\xf5\x86\xfc\x89\x50\xe6\xe3\xac\xeb\x80\x7a\x5c\x0e\xd7\x4f\xcf\xa2\xfa\xb9\x41\xf6\x9a\xfd\xa7\x18\x42\x52\x2c\x1e\x35\x57\x38\xb6\xac\x82\x66\xda\x7b\x98\xef\xc7\xb9\xaa\x2b\x5f\xe9\x2a\x4d\xcf\x0f\xb5\x13\x66\xc7\x12\x39\x3b\xc3\x41\xa6\x77\x41\xbe\x7f\x27\xbd\xac\xd8\xbd\xf5\xfa\x38\x7b\x7e\x12\xf3\x06\x97\x9b\x06\xcb\x36\xab\xf3\xa8\xbd\xc7\x8c\x5d\xb9\x85\xd5\xfd\x1a\x97\xb0\xa0\x29\x0a\x2f\x23\xf4\x10\x60\x3b\x87\x30\x44\x30\x97\x9a\xc6\x77\x9d\x75\xa7\x63\xa3\x7e\x59\x64\x27\x17\x2b\xe3\x89\x31\x24\x1a\x04\xb5\xfc\x0b\x38\xb1\xba\x14\xf5\x72\x78\x9e\xb8\x2f\xca\x21\x99\x08\x15\xce\xef\x1a\x9a\x74\x62\x94\x48\x2c\xb8\xdd\x09\x0d\xe7\x33\xad\x12\xc9\x86\x59\x0c\x77\x1d\xdc\x0d\x16\x26\xb0\x9a\x4a\x33\x55\x7a\x31\x24\x7e\x89\xde\xe0\x3c\xb8\xb9\xfa\xe5\x92\x5c\x5d\xe0\x2f\x1b\x9b\x3f\x33\x98\x5d\xd4\x24\xde\x64\x02\xce\x76\xb0\x84\xc9\x9c\xdb\x9f\x60\xe9\x54\x0b\x88\x10\xab\x10\x72\x2d\xb0\x85\x79\xa8\x84\xa0\xb1\xd9\x82\x13\x85\x2f\x49\x9b\xf6\x14\xbf\xdc\x83\x29\x5d\x70\x81\x28\x2f\x94\x54\xde\x90\x47\x9a\x32\x86\x87\xc3\x90\xfc\x16\x7f\x25\x6f\xf0\x93\xdf\x3d\xde\x4a\x33\xd0\x81\x80\xa9\x1d\x92\xdf\x71\x1f\x4b\xc1\x59\x01\x7d\x7b\x9c\x3b\x74\x5e\x53\xe6\xfe\x9d\x56\xbf\xec\xc3\xb4\x51\xd3\x00\xb3\x52\x7a\x48\x5e\xbf\xbd\x7f\x78\x78\x7b\xdf\x10\x2d\x3b\xf5\x6a\x97\xd2\xed\xf5\x87\xdb\xdb\x6b\xaf\xd4\xf8\x41\xe9\xe5\x17\x54\xcf\xb8\x0c\x26\x0a\x0f\x17\x2c\xcb\xcd\x55\x96\x5f\x99\xfb\xaf\xb8\xb1\x71\xa9\xf2\x1f\x92\xeb\x2a\x0d\xf0\x7f\x2d\x6e\x2c\xbb\x24\x9b\x5b\x51\xd6\x05\x85\x97\x1b\x34\x73\xed\xec\x17\x0b\x67\x06\x8f\xc5\xac\xd3\xfe\x0f\x00\x00\xff\xff\x07\xc8\xb5\x91\x25\x10\x00\x00")

func staticx_partials_index_ft_tab_manage_html_bytes() ([]byte, error) {
	return bindata_read(
		_staticx_partials_index_ft_tab_manage_html,
		"staticx/partials/index/ft/tab-manage.html",
	)
}

func staticx_partials_index_ft_tab_manage_html() (*asset, error) {
	bytes, err := staticx_partials_index_ft_tab_manage_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "staticx/partials/index/ft/tab-manage.html", size: 4133, mode: os.FileMode(420), modTime: time.Unix(1447037434, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticx_partials_index_ft_tab_monitor_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xe4\x58\x5d\x6f\xdb\x36\x14\x7d\xcf\xaf\x60\x35\x0c\x6d\x81\x5a\x89\x37\x08\x59\x5c\xdb\xc0\x30\x74\xc0\x50\x64\x1d\x9a\x61\x2f\x45\x1e\x68\x91\x91\x88\x50\x94\x40\xd1\x4e\xb2\xc4\xff\x7d\x97\x1f\x92\x29\x89\x8a\x53\xd7\x2f\xdb\xfa\x90\x4a\xf7\xe3\x9c\xc3\xcb\x4b\x8a\xf4\x9c\xb0\x0d\x4a\x39\xae\xeb\x45\xc4\x04\xa1\xf7\x57\x0a\xab\x3a\x42\x22\x9b\xb0\x1b\xdf\xf4\x2b\xc7\x2a\xe6\x54\x64\x2a\x47\x4b\x74\x16\x2d\x4f\x10\x9a\xe7\x3f\x2e\x8d\x73\x7e\x0a\x4f\x27\xc6\x92\x58\x0b\xba\x29\x25\x32\xd9\xa8\xc2\x52\x31\xc5\x4a\x51\x23\xa0\x61\x99\xa0\x04\xa9\x12\xa9\x9c\xa2\x74\x2d\x25\x15\x0a\x89\x92\x50\xc0\x48\x2c\xc6\x6a\xad\x54\x29\xb4\x84\x94\xb3\xf4\x76\x11\xf1\x12\x93\xdf\x5a\x25\x6f\xde\x46\x1d\xc5\x97\xa5\x60\xaa\x94\x9f\xe9\x8d\xa4\x75\x6e\x84\x01\x48\x5d\x61\xd1\x84\x65\xfc\xa1\xca\x59\x0a\x98\xed\xd3\x44\x36\xe1\xf3\x53\x1d\x6a\xb3\x1c\x86\x16\x71\x6a\x55\x98\x61\xfa\x58\xb5\x96\xd0\x70\x99\x24\xfd\xcf\x95\xab\xe3\x5c\x3e\x3e\xfa\xef\xdb\x6d\xc3\xa4\x21\x99\xa8\xd6\x4a\xa7\x15\x30\x74\xbe\x88\x30\xe7\xae\xf2\xea\xa1\xa2\x8b\x28\xcd\x69\x7a\xbb\x2a\xef\xdd\x70\xae\xf2\xf2\x0e\x41\x0c\x32\x88\x46\x9f\x41\x08\x83\x11\xaa\x30\xe3\xcf\x62\xb9\x10\x84\x05\x4c\x06\x2b\x98\xc8\xec\x94\x51\x9c\xe6\xfd\x79\xeb\xd3\x29\xbc\xe2\x54\xd3\xd5\x80\xb4\x88\x5e\x35\x74\xae\xf2\x4a\x2e\x5d\x5d\xe6\xd0\x2b\x5e\xd9\x7e\xc7\x05\x8d\x4c\x7b\xcc\x4f\x55\xee\x05\x2d\x7f\x29\xd7\xc2\x33\xc2\x93\x6c\xc1\x34\x91\xa4\x15\xc5\x6a\x11\xbd\xa9\xdf\xa1\xba\x7e\x0b\x02\xd1\xae\x33\x7f\xce\xb2\xce\x44\x38\x55\x75\x1d\x63\xb2\xc1\x22\x85\x76\x7b\x7a\x42\x6d\x81\x77\xbc\x64\x28\x0e\xa6\xac\x8e\x39\x5e\x51\xae\xa7\x4b\x11\x3f\xd8\xf4\xa3\x89\x7f\x4c\x73\x2c\x32\x4a\x66\x20\x26\xae\x24\xdd\xc4\xa9\x1e\x00\x7a\xb5\xd0\x06\xf3\xbc\x6d\x79\x10\x32\xa0\x36\xe2\x09\x89\x75\xb1\xa2\x72\x76\xb6\xdd\x36\xd0\x2d\x4d\x33\x6c\xf8\x5f\x57\x38\x58\xec\xa3\xd7\xda\x1a\x2f\xf1\x3d\x12\x75\xdf\x7a\x71\x11\x5f\x7c\xaf\x98\xe6\x0f\xf8\x46\x3d\xc9\x98\xe7\x7c\xd4\x73\x49\x09\x83\x35\x16\x72\x84\xcd\x2c\x64\xbd\x52\x84\xd0\x4d\xc0\xf1\x19\x2b\x8a\xa6\x13\x68\xf3\xa0\x27\x19\xf5\x4c\xc7\x5d\x5a\x59\xcf\xe1\x4f\xc0\x47\x68\xd0\x68\xa9\xff\x8e\x05\x95\x6b\x99\x52\x37\x4f\xe6\xf9\xd0\x05\xa0\xb7\xe6\x7f\xcb\x0a\xf8\x3a\xd0\x02\xda\xd2\x42\xc2\xd3\x00\x50\x7b\xfd\x05\xf5\x35\xc8\x15\x85\x82\x0b\xdd\x8d\xf5\x97\xd7\xa6\xcf\x5f\x5f\x3b\xaa\x90\x6b\xc0\xed\x07\x45\x26\x28\xba\x3e\x96\x98\x51\x29\x2f\x10\x72\x3c\x19\xc9\x98\x8c\x64\xbf\x8c\xe4\x68\x32\xce\xc7\x64\x9c\xef\x97\x71\x7e\x2c\x19\x71\x61\xb7\xa7\x81\x0c\xe7\x78\x4e\x46\x93\x7b\xa8\x8c\x82\xb6\xc4\xfa\x71\xb8\x08\xe8\xb7\x80\xb3\x16\x9b\x05\xa0\xd9\xe1\xc8\xb5\xdd\x8a\x2d\xb8\x7d\x19\xe0\xbb\x98\x43\x29\x24\xec\xc2\xd0\x08\x66\x5b\x6f\x7b\xa4\x6b\x1c\x50\x5a\x77\x64\xdc\x7e\x6f\x4c\x0f\xa2\x4e\x42\xd4\xc9\xf3\xd4\xc9\x71\xa8\xa7\x41\xee\xe9\x1e\xf2\xe9\x51\xd8\xfd\x9e\xdc\x19\xc6\x38\xb5\x6f\x0f\xe3\xe0\xb3\xe9\xda\xc3\xbe\x8e\xc7\x7b\x5f\x50\x9b\xd1\x1a\xfc\x9c\xe0\xb1\xea\xbf\x7e\xc7\x98\x9f\xc2\xc5\x0e\x86\x3a\xb8\xdf\x7d\x90\xb2\x94\x75\x7b\x7d\xb3\xaf\x9d\xfb\x9b\x35\x7d\xcb\x05\xae\x77\x66\xf5\x78\xdd\x0d\x32\x78\x7c\x5d\x7e\xaa\xfa\x07\x2d\x93\xd4\x37\xfe\xd1\xc8\xe9\x3b\x3e\xd2\x87\xbe\xe9\x2f\xcc\xfb\xa6\x3f\x59\xf1\x92\x93\x16\x6d\xcf\x58\x5e\xc5\x5c\x03\x42\xd5\x69\xfc\xa9\x1a\x6d\x4c\x2a\x65\x64\x62\x20\x75\x10\x64\x1c\xed\x18\xc2\x6e\x18\xc9\x28\xf8\x06\x73\x0b\x0e\x63\x0b\x67\xeb\x11\x76\x3d\x60\x75\xf7\x8d\xe0\x62\xd0\x3d\xb2\x3b\x36\x06\xa6\x2b\xd0\x41\x1f\x8a\x4a\x3d\xb8\xa2\x88\x12\x51\x63\x34\xc0\xb6\xf1\xfe\x4f\x6b\xac\x56\x0f\xba\x94\x79\x82\x1e\x01\xa9\xc0\x32\x63\x62\xc2\xe9\x8d\x9a\xa1\xa4\xba\x7f\x7f\xb2\x3d\x89\x77\xa7\xf5\x61\xcc\x0f\x67\x3a\xa8\x35\xae\x4a\x10\x5c\x34\xe6\x6e\xae\x5d\x59\x03\x84\x69\x28\x94\x98\xb8\x0d\x85\x4e\x4b\x31\x9f\x60\x0e\x2b\x77\x86\x2c\xfa\x30\xf8\x1d\xea\xbc\xe7\xcd\xbb\xdb\x0d\x76\x01\x8d\x21\x37\xf0\x15\x26\x84\x41\xd5\xbc\xd1\xee\x8c\x92\x65\xf9\xce\x7a\x97\x33\x45\x27\x50\xba\x94\xce\xa0\x65\xee\x24\xae\xbc\x51\xfb\xb1\xfb\xb4\x19\x66\x45\xef\x55\x33\x28\x93\xdc\xcf\x6b\x3f\x20\xdd\xf4\xb8\xb9\xeb\xf4\xcd\xed\xc7\x63\x00\xaf\x07\x37\x54\x15\xbb\xaf\xa3\x09\x5f\xe1\xf4\x36\x93\x70\xc3\x21\x93\xb4\xe4\xa5\x9c\xa1\xef\x08\x21\xfd\x24\xf3\x23\xca\x17\xf3\xab\x4c\xf3\xa3\xcc\xf5\x58\x3f\x34\x99\xae\xde\x2f\x8b\x7a\x51\x7f\xb4\x53\x1a\xc3\xaa\x1d\xcc\x73\x0c\x1b\xcc\xe3\x70\xba\x64\x81\x79\x1f\xc2\xec\x01\x86\xed\xa6\x14\x6a\x62\x96\xc1\x0c\x31\x05\x65\x4b\xdf\x0f\x9a\xe3\x27\x5f\x43\x77\xb1\x7b\x8a\xad\xd8\xde\x1f\x93\xe7\x2f\x42\x8f\x94\xfd\x4d\x35\xb6\x0a\x34\x5e\x53\x22\x58\xb0\x76\x85\xfe\x13\x00\x00\xff\xff\x43\x4f\x57\xbf\xee\x14\x00\x00")

func staticx_partials_index_ft_tab_monitor_html_bytes() ([]byte, error) {
	return bindata_read(
		_staticx_partials_index_ft_tab_monitor_html,
		"staticx/partials/index/ft/tab-monitor.html",
	)
}

func staticx_partials_index_ft_tab_monitor_html() (*asset, error) {
	bytes, err := staticx_partials_index_ft_tab_monitor_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "staticx/partials/index/ft/tab-monitor.html", size: 5358, mode: os.FileMode(420), modTime: time.Unix(1447037434, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticx_partials_index_ft_tab_query_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x56\x4d\x6f\xe3\x36\x10\xbd\xfb\x57\x70\x75\xd8\x24\x07\x86\xfb\x81\x02\xad\xeb\x18\x28\x72\x59\x14\x6d\x76\xdb\x04\x45\x0f\x05\x0a\x5a\x1a\x4b\x6c\x28\x92\x25\xa9\xc4\x86\xe1\xff\xde\xa1\x44\xea\xc3\x72\x9b\xf4\xd6\x1a\x48\x24\x8a\x6f\x1e\xdf\x0c\x67\x86\x5c\x15\xe2\x89\xa8\x92\xe6\x5a\x79\xab\xa5\x04\x7b\x93\xfd\xd4\x80\xdd\xdf\x7a\x2b\xb3\xf5\x62\x91\x00\xae\xd2\xcf\x37\x19\x58\xab\xed\x8f\xe0\x1c\x2f\x21\x23\xb9\xe4\xce\xdd\x64\x1c\xad\x3c\x69\xff\xd3\x82\xab\x12\x6c\xcb\x28\x35\x7f\xcc\x08\x92\x42\x84\x20\x1d\x21\x87\xc3\x98\xe3\x78\x5c\xac\x18\xae\x10\x16\xda\x6a\x5b\x27\x4a\xc5\x9f\x36\xdc\xd2\xf0\x29\x51\xfc\x19\x54\xb5\x14\xad\xa4\x08\x14\xca\x34\x9e\x96\x56\x37\x86\xe4\x5a\x52\x59\xd2\xf7\x1f\x5a\x14\xe2\xda\xc9\xa0\xa5\xd6\x05\xc8\x44\xd1\xce\xc5\x5f\xd0\x59\x05\xc9\x71\xf2\xb6\x1d\x14\x97\x57\x13\x94\xdf\x1b\x04\x78\xd8\xf9\xde\xe7\xa0\x2c\x05\x6d\x82\x35\x92\xe7\x50\x69\x59\x84\x48\x1a\x09\xdc\x01\x01\xe5\x31\x26\x9c\x74\xeb\xb3\xa8\xee\xbc\x17\x74\xe3\x55\xd4\x8f\x98\x4d\xe3\xbd\x56\x09\x86\x53\x04\xff\xa8\xb1\xa2\xe6\xc8\x14\x85\xb9\x66\x53\x0b\x3f\x51\x11\x5d\x93\x22\x7f\xbc\xc9\x6c\xa3\xda\x2d\x45\xaf\xd6\x3d\x68\x25\x12\x6b\x29\xf7\xa6\x12\xe8\x0b\xe9\xdf\xa8\x03\x6e\xf3\x2a\x5b\xaf\x98\xe8\xb5\xb0\x4e\x4c\x54\xdf\xed\x5a\xff\x72\xb2\x2d\xad\xa7\xf7\xcd\x26\x9b\xfb\x1a\x77\xe9\x9b\xc1\x49\x67\xb8\x0a\x72\xc5\x36\x1a\x7e\x02\x69\xc8\xdb\xb7\xa4\x1f\x5c\x4b\x50\xa5\xaf\xa6\x2e\xa2\xc5\x46\xa8\x82\x56\xbe\x96\x23\xc3\x7b\xbe\x85\x81\x9b\x05\xf2\x13\xc9\x67\xf5\x7c\x1c\x6c\x24\xdf\x80\x1c\x47\x2a\xa5\x51\x8c\xe7\x3f\x64\x4a\xd4\x35\xce\xb7\xef\x8a\x27\xae\x72\x28\x1e\x74\x59\x4a\x98\xa1\xbb\x2d\xcc\x2b\xc8\x1f\x37\x7a\x97\x92\x23\xfc\x92\x61\xef\xca\x48\xd7\x69\xf8\x57\x2c\x24\xe4\xac\x5c\xcf\x09\x38\xad\xa0\x09\x06\x6b\xed\x19\x27\x70\xf7\xb7\x62\xf7\xf7\x9b\xa7\xb7\x5b\x07\x9e\x7e\x48\x25\xf7\xf5\x69\xf0\x1e\x44\x0d\x1a\x83\x76\x59\x3b\xc8\xdd\xd5\x72\x22\xfe\x4c\x65\xfa\x0e\x9f\x11\x51\x0c\x83\xc5\x2c\x9f\x5f\x2e\x55\x72\xae\x40\x07\x99\xec\x35\xa9\xf0\xa2\x77\xb7\x5a\x39\xe1\x3c\xa8\x7c\x4f\x7e\x80\x27\x90\x2f\xfa\x97\x0f\x16\xad\x41\xe7\xe8\xec\xeb\xff\xc2\xe3\x5f\x20\xf7\xda\xba\x7f\xe3\x73\x34\x99\x79\x9d\xbe\xff\x67\xfc\x26\x7f\x38\xdd\x35\xcb\xd3\x08\x7c\x7f\xff\xf9\x8e\xe0\x52\x5d\x53\x22\x16\xf0\xe9\xfc\x72\xe8\x12\x6d\x17\x4b\xf4\x8d\x95\xa3\x72\x4b\xbf\x4b\x5c\xa7\xae\x39\xf6\x2c\x29\x14\x90\x80\x22\xb0\xe3\x35\x1e\x13\xcb\x89\x6b\xf3\x58\x0e\x84\xf3\x8e\x41\xae\x06\x15\xa3\x7e\x77\xd2\x32\x70\x68\x2c\x0c\xbd\xe1\xcd\x58\xe4\xe1\xd0\x3b\x7e\x3c\xae\x18\x02\xcf\x1b\x8d\x6d\x5a\xf9\xf4\xd7\x2f\x9f\xef\x1f\x08\xfd\x44\x32\xcc\x11\xdc\x54\x4f\x1f\x50\xdf\x92\x70\x63\xb0\x5b\x72\x2f\xb4\x62\x81\x3b\x23\xbf\x2d\x48\xe5\xbd\x59\x32\x76\x38\x54\xda\xf9\x2f\xda\xfa\xe3\x91\x71\x23\x18\xb6\x71\xd8\xe1\xe7\xf6\x79\xc7\x6b\xbc\x17\xb0\x2e\xce\x68\x44\x0b\x72\x31\xd1\x77\x31\x12\x38\x6f\x84\xf1\x36\x31\xe9\x83\x16\x5c\x23\xbd\x0b\x67\xca\x9b\xf8\x7e\xed\xb5\xe7\xf2\xf7\x4a\xf8\x94\x7e\xe3\x7e\x78\xa7\x7f\xee\x60\x5d\xbb\xac\xbe\x5a\x2b\x4d\x12\x4b\xc8\x82\xbd\x6e\x62\x2a\xac\x18\xce\xbe\xbc\x6e\x5a\x36\x2c\x78\x3a\x8e\xc7\x1b\x59\x93\x77\x51\x4b\x38\x0d\x55\x2e\x9b\x02\xba\xb1\xb3\xf9\x4d\x76\xc1\x9c\xc7\x80\xe6\xcc\x70\xeb\x05\x97\x2e\xc6\xad\x95\x41\x7b\x42\x3c\x0e\x2f\xa6\x2e\x8d\x1a\xfa\xab\x75\xc6\x67\x76\x86\x03\x03\xd2\xa4\x73\x48\x8a\xc0\x62\xc1\x00\xf7\x89\x87\x08\x35\xa3\xe9\xd3\x69\x54\x84\xcf\x20\xe5\xa8\x3e\x0e\x87\x0e\x8c\x77\xc2\x94\xbe\x43\xed\x32\x29\xba\x5d\x0e\x2b\xf7\x4e\xa4\xa7\xf3\x7b\x89\x09\x71\x9d\xae\x1d\xe4\x80\x58\xbc\x22\x95\x42\x51\xaf\xcd\x92\xbc\x7f\x67\x76\xdf\x2e\x8e\x11\xd1\x9f\x76\xaf\x84\xb5\x55\xf4\x5a\xf0\xf5\x50\x23\xad\xc9\x16\xcb\x82\x3e\x83\x28\x2b\xbf\x24\x0a\x7b\x15\x97\x83\x55\x9f\x67\x63\x76\x09\x5b\x84\x7e\x8c\xf4\x58\xd2\x9d\x77\x7f\x05\x00\x00\xff\xff\xf0\x14\x69\xf2\xab\x0b\x00\x00")

func staticx_partials_index_ft_tab_query_html_bytes() ([]byte, error) {
	return bindata_read(
		_staticx_partials_index_ft_tab_query_html,
		"staticx/partials/index/ft/tab-query.html",
	)
}

func staticx_partials_index_ft_tab_query_html() (*asset, error) {
	bytes, err := staticx_partials_index_ft_tab_query_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "staticx/partials/index/ft/tab-query.html", size: 2987, mode: os.FileMode(420), modTime: time.Unix(1447037434, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticx_partials_index_ft_tab_summary_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x54\x4d\x53\xdb\x30\x14\xbc\xe7\x57\xbc\xfa\x00\xed\xc1\xa8\xbd\xd2\x24\x17\x38\x94\x1e\x28\xd3\x84\x4e\x67\xda\x1e\x14\x49\x89\x05\xb2\xa4\x91\x64\x48\x9a\xf1\x7f\xaf\xbe\xec\xd8\x81\x50\x66\x60\x84\xde\xbe\xd5\x6a\x57\x7e\x53\x2a\x80\x08\x6c\xed\xac\xa0\xa2\xac\x94\xe1\x7f\x95\x74\x58\x00\x97\x94\x6d\x4b\xdb\xd4\x35\x36\xbb\x62\x3e\x01\x98\x52\xfe\x04\x72\x53\xda\x4a\x3d\xcf\x8a\x58\xbf\xc2\xf2\x4a\x35\xd2\xc5\x7a\x40\xb8\xf9\xb5\x22\x4d\xcd\xa4\x83\x58\xb8\x9c\x22\xbf\x97\x8b\x34\x2d\xfc\xd2\x6a\x2c\x03\xd5\xca\xb3\x64\x2a\xdf\x97\xa9\xa6\x28\x94\xe7\x93\x0e\xbc\x6a\x9c\x53\x11\x4e\x04\x27\x8f\xb3\x42\x28\x4c\x6f\x86\x3d\xef\x3f\x14\x19\xdc\xfd\xe4\x2b\xad\x9c\x04\xff\x5b\x52\xb6\xc6\x8d\x70\x71\xbd\xb5\xc5\xbc\x47\x27\x25\x19\xbd\x11\x3b\x5d\x71\xe2\xcf\xea\x57\xa5\x61\x6b\xc3\x6c\x75\x50\xd5\x75\x7e\x4f\x85\x4e\x24\x4a\x2a\xf3\x55\x51\xb8\x6b\x5a\x56\x06\x45\xf3\x90\x77\x2f\xee\x05\x93\xa2\x7a\xb8\xc5\x35\xeb\x0d\x0a\xf6\xec\xf7\xc9\x0a\xb6\xbe\x90\xbe\xd6\xb6\x89\x68\xd8\x73\x7f\x7f\x73\x7d\xaa\xa7\x69\x38\x7d\xad\x67\xb9\xd3\x27\xcf\x71\xbe\x36\xec\x49\x11\xf3\x75\x4e\x65\xc9\x6a\x2d\xb0\x63\x16\xce\xce\x60\xbc\xf3\x6b\xc4\xf1\x67\xf0\x04\x5e\xcf\x3c\x50\x67\xa3\x63\xe7\x0f\xce\x9e\x99\x81\x17\x5a\x86\xe9\x74\x72\x24\x11\x0d\x65\xc7\x9a\x8e\x15\xa0\xfe\xac\x64\xf6\x21\x8a\xc1\x56\x10\xb8\x50\x8d\x21\xec\x4d\x5f\x6c\x84\x2c\x8f\xdc\xe9\x5b\xdf\x8a\x2e\xb5\xde\x0e\x02\x9c\x74\xef\x60\x14\x8b\xc7\x72\xc9\x1d\x57\x72\xc4\x94\x64\x73\xa9\x1b\x17\xee\x5e\x2b\xca\xc4\xac\x78\xb0\x4a\x5e\x33\x87\xb9\xb0\x05\x84\xeb\xce\x0a\x52\x31\xf2\xb8\x52\xdb\xde\xb0\x85\xff\x30\x53\x48\x40\x7b\x6e\xf8\xba\xf8\x76\x9b\xad\x88\xa4\x5d\x32\xc3\x8f\x79\xc8\xde\x9b\x78\x2c\x81\x34\x46\xfc\x4f\x42\x16\x11\xa0\x40\x94\x9f\x1d\x92\x82\x53\x60\x18\x31\xcc\x47\x06\xae\xe2\xf6\x85\xc4\x3e\xb5\xac\xaf\xfb\x5f\x1b\x76\x90\x38\x3c\x7d\x1e\xf9\xcb\x9f\x77\xf7\x4b\x28\xbf\x40\x71\xe5\x47\x96\x1f\x39\x65\x0c\x14\xb0\xd6\x7e\x4e\xe0\xc0\x8c\xc2\xc5\x0a\xf8\x3d\x81\xca\x39\x7d\x89\xd0\x7e\x5f\x29\xeb\xee\x94\x71\x6d\x8b\xb0\xe6\x28\x6a\x41\x39\xbd\x94\x59\x80\x97\x14\xce\x0f\x91\x2e\x9c\x69\xdb\xf3\x29\xf2\x82\x4e\xa8\x7b\x37\x94\x37\x9c\x45\x12\x6f\x4a\x6d\xb8\xad\x21\x3d\x8b\x59\x71\x44\x3b\x42\xe7\xef\x43\x60\xb9\x69\xf0\x86\x95\x0f\xf8\x09\x5b\x62\xb8\x8e\x63\x31\x1e\x3f\x7a\xdf\xe9\x79\xf9\xbf\xc2\xeb\x9a\x5a\xb7\x13\x1e\x71\x31\x1a\xdd\x40\x29\xec\x3d\xd4\xaf\x37\x5c\x96\x2b\xe5\xc7\x54\x7d\x09\x9f\x3e\xea\xed\xe7\x49\xeb\x7b\x73\xd7\xbf\x00\x00\x00\xff\xff\x1c\x36\x9e\x46\x09\x06\x00\x00")

func staticx_partials_index_ft_tab_summary_html_bytes() ([]byte, error) {
	return bindata_read(
		_staticx_partials_index_ft_tab_summary_html,
		"staticx/partials/index/ft/tab-summary.html",
	)
}

func staticx_partials_index_ft_tab_summary_html() (*asset, error) {
	bytes, err := staticx_partials_index_ft_tab_summary_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "staticx/partials/index/ft/tab-summary.html", size: 1545, mode: os.FileMode(420), modTime: time.Unix(1447037434, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticx_partials_index_ft_tabs_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x90\x41\x4e\xc3\x30\x10\x45\xf7\x3d\xc5\xe0\x45\xbd\x0a\xbe\x40\x9c\x0d\x6c\x41\x42\x9c\x60\x28\x93\x76\x24\xdb\x01\xdb\x29\x44\x69\xef\x8e\x33\x4d\x25\x90\x82\xba\xc9\x22\xca\x8f\xf4\xf3\xfe\xd3\xd4\xbd\x83\x9d\xc3\x94\xac\x0a\x78\x84\xf2\x54\x19\xdf\x92\x82\xd8\x39\xb2\xaa\x64\xc7\x29\xab\x66\x03\x50\x3b\x86\xb0\xaf\x30\xe7\x58\xcd\xbf\x8c\x63\x29\x80\xb5\xa0\x53\xef\x3d\xc6\x41\xc3\x76\x0b\x1a\x77\x99\x8f\xa4\xe1\x74\x02\xcd\xe1\xfa\x75\x3e\x0b\xa6\x80\x10\x0e\x91\x5a\xab\x0c\x87\x77\xfa\xa6\x64\xc6\x51\xd2\x33\x7a\x9a\x5a\xaf\x17\x58\x6d\x50\x76\x8d\xe3\x5f\xfb\xe9\xd0\x7d\x59\x25\xfd\x07\x0c\x2f\x3d\xc5\x41\x09\x16\xfe\xb7\xfb\x9c\x5a\x6b\xb8\x19\x21\xa9\x46\x66\x97\xfd\x96\x0d\x7c\x17\x38\x77\x71\x15\x87\x99\xa5\x9a\xa7\x4b\x58\xf6\xe0\x76\xbe\xd2\x23\xb5\xd3\xea\x35\xdf\xe7\xe1\x83\xe0\xae\x38\xa1\x63\x4c\xfa\xe6\xf1\x3c\x06\xdc\xd3\x3a\xe6\x82\x2a\xe2\xf2\xfe\xe3\x5d\x9b\xde\x35\x9b\x9f\x00\x00\x00\xff\xff\x66\x37\x9b\x69\x8f\x02\x00\x00")

func staticx_partials_index_ft_tabs_html_bytes() ([]byte, error) {
	return bindata_read(
		_staticx_partials_index_ft_tabs_html,
		"staticx/partials/index/ft/tabs.html",
	)
}

func staticx_partials_index_ft_tabs_html() (*asset, error) {
	bytes, err := staticx_partials_index_ft_tabs_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "staticx/partials/index/ft/tabs.html", size: 655, mode: os.FileMode(420), modTime: time.Unix(1447037434, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticx_partials_index_start_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x8f\x41\x4f\x03\x21\x10\x46\xef\xfc\x8a\x2f\x3d\xdb\xd6\x7a\x54\xe4\xee\xc5\x78\xf3\x0c\xec\x20\x24\x2c\x18\x18\xda\x6d\x8c\xff\x5d\x68\x76\x13\x7b\x22\xbc\xc9\x7b\x0c\x72\x0a\x67\xd8\xa8\x6b\x7d\xdd\x85\x34\xd1\xf2\x49\xd1\xe6\x99\x76\x4a\x00\xd2\x9f\xd4\x7a\x07\x67\x58\xe3\x58\x1e\x3b\x1b\xa3\xee\xa9\x01\x10\x2a\x34\x5c\x8b\x71\xcf\xb4\x30\x2a\x95\x33\x15\xb8\x5c\x60\x73\xb3\xde\xe8\x4a\x98\x34\xeb\x83\x3c\x0e\x67\x73\x3f\x22\xdd\x26\xe4\x42\x22\x5c\x73\xeb\x4e\x28\xb5\xf7\xc6\x16\xb8\x04\xf6\x60\x4f\x78\xa7\x0b\xde\x6e\xc8\x34\xe6\x9c\xb6\xcc\x7a\x08\x59\xf9\x1a\x49\x89\xc3\xff\xed\xe1\x4f\x0f\xb8\x27\xe3\x9f\x3f\xfd\xf1\x59\x97\xaf\x90\xf6\x26\xf7\xd8\xfc\x8c\xa7\xc7\xef\xe5\x45\xfc\xf6\xdc\xda\xf9\x0b\x00\x00\xff\xff\x3c\xde\xdc\xcd\x11\x01\x00\x00")

func staticx_partials_index_start_html_bytes() ([]byte, error) {
	return bindata_read(
		_staticx_partials_index_start_html,
		"staticx/partials/index/start.html",
	)
}

func staticx_partials_index_start_html() (*asset, error) {
	bytes, err := staticx_partials_index_start_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "staticx/partials/index/start.html", size: 273, mode: os.FileMode(420), modTime: time.Unix(1447042892, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"staticx/css/cbft.css":                         staticx_css_cbft_css,
	"staticx/index-ft.html":                        staticx_index_ft_html,
	"staticx/index.html":                           staticx_index_html,
	"staticx/js/debug.js":                          staticx_js_debug_js,
	"staticx/partials/debug-rows.html":             staticx_partials_debug_rows_html,
	"staticx/partials/debug.html":                  staticx_partials_debug_html,
	"staticx/partials/index/ft/index.html":         staticx_partials_index_ft_index_html,
	"staticx/partials/index/ft/list.html":          staticx_partials_index_ft_list_html,
	"staticx/partials/index/ft/new.html":           staticx_partials_index_ft_new_html,
	"staticx/partials/index/ft/query-results.html": staticx_partials_index_ft_query_results_html,
	"staticx/partials/index/ft/tab-manage.html":    staticx_partials_index_ft_tab_manage_html,
	"staticx/partials/index/ft/tab-monitor.html":   staticx_partials_index_ft_tab_monitor_html,
	"staticx/partials/index/ft/tab-query.html":     staticx_partials_index_ft_tab_query_html,
	"staticx/partials/index/ft/tab-summary.html":   staticx_partials_index_ft_tab_summary_html,
	"staticx/partials/index/ft/tabs.html":          staticx_partials_index_ft_tabs_html,
	"staticx/partials/index/start.html":            staticx_partials_index_start_html,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func     func() (*asset, error)
	Children map[string]*_bintree_t
}

var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"staticx": &_bintree_t{nil, map[string]*_bintree_t{
		"css": &_bintree_t{nil, map[string]*_bintree_t{
			"cbft.css": &_bintree_t{staticx_css_cbft_css, map[string]*_bintree_t{}},
		}},
		"index-ft.html": &_bintree_t{staticx_index_ft_html, map[string]*_bintree_t{}},
		"index.html":    &_bintree_t{staticx_index_html, map[string]*_bintree_t{}},
		"js": &_bintree_t{nil, map[string]*_bintree_t{
			"debug.js": &_bintree_t{staticx_js_debug_js, map[string]*_bintree_t{}},
		}},
		"partials": &_bintree_t{nil, map[string]*_bintree_t{
			"debug-rows.html": &_bintree_t{staticx_partials_debug_rows_html, map[string]*_bintree_t{}},
			"debug.html":      &_bintree_t{staticx_partials_debug_html, map[string]*_bintree_t{}},
			"index": &_bintree_t{nil, map[string]*_bintree_t{
				"ft": &_bintree_t{nil, map[string]*_bintree_t{
					"index.html":         &_bintree_t{staticx_partials_index_ft_index_html, map[string]*_bintree_t{}},
					"list.html":          &_bintree_t{staticx_partials_index_ft_list_html, map[string]*_bintree_t{}},
					"new.html":           &_bintree_t{staticx_partials_index_ft_new_html, map[string]*_bintree_t{}},
					"query-results.html": &_bintree_t{staticx_partials_index_ft_query_results_html, map[string]*_bintree_t{}},
					"tab-manage.html":    &_bintree_t{staticx_partials_index_ft_tab_manage_html, map[string]*_bintree_t{}},
					"tab-monitor.html":   &_bintree_t{staticx_partials_index_ft_tab_monitor_html, map[string]*_bintree_t{}},
					"tab-query.html":     &_bintree_t{staticx_partials_index_ft_tab_query_html, map[string]*_bintree_t{}},
					"tab-summary.html":   &_bintree_t{staticx_partials_index_ft_tab_summary_html, map[string]*_bintree_t{}},
					"tabs.html":          &_bintree_t{staticx_partials_index_ft_tabs_html, map[string]*_bintree_t{}},
				}},
				"start.html": &_bintree_t{staticx_partials_index_start_html, map[string]*_bintree_t{}},
			}},
		}},
	}},
}}

// Restore an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, path.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// Restore assets under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	if err != nil { // File
		return RestoreAsset(dir, name)
	} else { // Dir
		for _, child := range children {
			err = RestoreAssets(dir, path.Join(name, child))
			if err != nil {
				return err
			}
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

func assetFS() *assetfs.AssetFS {
	for k := range _bintree.Children {
		return &assetfs.AssetFS{Asset: Asset, AssetDir: AssetDir, Prefix: k}
	}
	panic("unreachable")
}
