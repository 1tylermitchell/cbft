package cbft

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"github.com/elazarl/go-bindata-assetfs"
	"io"
	"io/ioutil"
	"os"
	"path"
	"path/filepath"
	"strings"
	"time"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindata_file_info struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindata_file_info) Name() string {
	return fi.name
}
func (fi bindata_file_info) Size() int64 {
	return fi.size
}
func (fi bindata_file_info) Mode() os.FileMode {
	return fi.mode
}
func (fi bindata_file_info) ModTime() time.Time {
	return fi.modTime
}
func (fi bindata_file_info) IsDir() bool {
	return false
}
func (fi bindata_file_info) Sys() interface{} {
	return nil
}

var _staticx_css_cbft_css = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x56\xcb\x6e\xdb\x3a\x10\xdd\xfb\x2b\x78\x91\xdd\x45\x64\x38\x7e\xc5\x96\x71\x03\xdc\x1a\x28\xb2\x09\xba\xe8\xb2\xe8\x82\x12\x87\xd6\xc0\x14\x49\x50\xf4\x2b\x45\xff\xbd\x94\x48\xdb\xb2\xfc\x88\xdc\x76\x65\x91\xf4\x9c\x39\x33\x73\x66\xc8\x6e\x22\x60\x0d\x6f\x8a\x51\x41\xba\x79\xf9\x13\x25\x8a\xed\x48\x97\x2b\x93\x47\x0b\xa3\x56\x9a\xfc\xe8\x10\xa2\x29\x63\x28\x17\xee\xd0\x5a\x95\xc7\xe4\xa9\xa7\xb7\xb3\xce\xcf\x4e\xa7\x8b\x92\xc1\xf6\x8d\x6a\xed\x8e\x49\x97\xca\xc5\x4a\x50\x13\xad\x30\xb2\x06\x20\xca\xa8\x64\x02\x2a\x08\x42\x12\x9a\x2e\x4b\x48\xc9\x62\xf2\xc0\x27\x9c\x72\x3e\xf3\x07\xca\x30\x30\x0e\x55\x6f\x49\xa1\x04\x32\xf2\xc0\x28\xf4\x81\xfa\xe3\x54\x09\xe5\x4e\x1f\x9e\xd3\x29\x24\x7d\xbf\x17\x08\x79\x26\x77\xd2\x89\x33\xb5\x06\x13\x48\xed\xc1\x87\x83\x09\x24\xd3\xd9\x05\xa2\x43\x3e\xe6\xcf\x75\xa2\xd1\xde\x86\xa5\x8e\xe4\xa4\x8d\x63\x2d\x68\x0a\x99\x12\xec\xe0\xf7\xd4\x47\x8f\x4f\x9b\xc9\xe8\xbb\xb8\x18\x2d\x32\x70\xd9\x48\x80\xf5\x59\xe2\xcf\xa3\x0d\x24\x4b\xb4\xae\x14\xdb\xa8\xc0\xf7\x2a\x09\x81\x97\xdb\x0a\xff\xc9\xd5\xfb\xcd\x3f\x5c\x3b\x3b\x8f\xa4\x5a\xcd\xa9\x4c\x41\xcc\x0d\x50\xeb\x8b\x99\x53\xb3\x40\x19\x59\xa5\x1d\xd1\x2a\xf9\x87\xbd\xbd\x44\x06\x57\x6a\x52\x40\x6a\x51\xc9\xc3\xc7\x2b\xd0\x7d\x56\xea\xa8\xd7\x4a\xda\x34\xff\x54\xca\xf5\xcc\x78\x74\x17\xa5\x7c\xff\x91\x58\x59\xc7\x32\xb8\xc8\xec\x75\x2a\x75\x33\x57\x66\x57\xab\x0b\xc6\xfd\x51\x5b\xe3\x9a\x2c\xf7\x02\xe3\x5e\x14\x47\xad\x1c\xa5\x37\x1d\x0d\x86\xfe\xb0\xa1\xc9\xe1\x80\x0f\xe8\x2d\x8f\x82\x26\x20\x2a\x37\x5c\x49\xeb\xe4\xe4\x89\x4a\xd7\xf1\x54\xd4\xb2\x26\x80\xb7\x09\x9e\x5a\x6b\x8a\x5b\x70\xd5\xb6\x13\x1b\xc4\x64\xaa\xed\x4d\xac\xf0\xf1\xea\xa7\x46\x05\x3d\x77\xd6\x46\x09\xef\x61\x8d\x05\x26\x28\xd0\xee\x62\x92\x21\x63\x20\xdb\xc3\x85\xf4\x9e\x80\x3e\x5e\x31\xed\x02\x43\x7b\x37\x23\x94\x19\x18\xbc\x1d\x21\x47\x10\x2c\xfc\xfc\xad\x30\xcf\x31\xef\x89\x35\x18\x1e\x43\x6e\xcf\xad\x4d\xc0\x8d\x04\x96\x5e\xfe\x77\x73\xe4\xe4\x56\xf1\x4a\xfb\xb0\x3b\x7d\x9c\x5e\xbe\x2f\xa4\xd0\xd4\x37\x2b\xc3\xc2\x8d\xd7\x8a\x8e\x40\x09\x51\x22\x54\xba\x2c\x85\x67\x61\x6b\x23\x2a\x70\x21\x63\x52\x75\x63\x25\x6e\xa7\xec\x0d\x32\x9b\xc5\x64\x02\x79\x5b\x7f\x31\x47\x53\xd8\x28\xcd\xd0\xed\xa0\xd4\x2b\xfb\xcd\xee\x34\xfc\x97\x66\x90\x2e\xdd\xe4\xfc\x5e\xef\x7c\x1f\xce\xf4\x26\xfa\x21\xdd\x2f\xe4\xdf\xc7\x66\x09\xdc\x5e\x85\x77\xf1\x1e\xba\x4e\xb8\xc6\xab\x0c\xdd\x73\x0a\xb1\xf6\x7b\x1f\x04\xab\x95\x5e\xe9\xb2\xd2\xd4\xe5\xd0\x4f\x21\xad\x0a\x2c\x47\xac\xcb\x1e\x08\x6a\x71\x0d\xb3\x7a\xba\x8f\x79\x2e\x47\x6e\xb8\x04\x7c\xec\x61\x51\x8a\x90\x0b\xb5\x89\xbd\x6a\x04\x7c\xcc\xa0\xe1\x98\x26\xee\x3d\xb0\xb2\xb7\x1c\x3f\x75\x47\x65\x68\x84\x84\x81\x1b\xf5\xfd\xf2\xc2\xa3\x62\x3c\x1e\xcf\x1a\x69\xdd\x64\xe8\xd1\x0f\x0f\x8a\x51\x78\x4f\x1c\x3e\x66\xd7\x47\x5b\x65\x1d\x39\x25\xa6\x50\x6e\x6f\x0c\xd5\xe5\xf6\x7b\x54\x85\x58\x0e\xcf\xde\xa5\x90\xd7\x08\x9b\x2f\x52\xec\x7c\x3b\xd0\x24\xbc\x90\xce\xdb\x9e\xfc\x83\xb9\x56\xc6\x52\x79\xb1\xc9\x0e\x38\xc9\xca\x5d\x70\xf2\xf7\x40\xb4\x51\x1a\x8c\x45\x28\xbe\x86\xab\xb5\x7d\x6b\xee\xbb\xf9\xb3\x9f\x40\x27\xcb\x79\x68\x0d\x28\x6a\x37\x4e\xb3\x86\x7f\x08\x79\x57\x27\xfe\x0a\x00\x00\xff\xff\x6d\x6a\xf3\x97\xec\x0a\x00\x00")

func staticx_css_cbft_css_bytes() ([]byte, error) {
	return bindata_read(
		_staticx_css_cbft_css,
		"staticx/css/cbft.css",
	)
}

func staticx_css_cbft_css() (*asset, error) {
	bytes, err := staticx_css_cbft_css_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "staticx/css/cbft.css", size: 2796, mode: os.FileMode(420), modTime: time.Unix(1446874443, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticx_index_ft_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x59\xff\x6e\xdb\x36\x10\xfe\x3f\x4f\xc1\x09\x45\xed\x00\x96\xb5\xb6\xc3\x30\x24\xb6\x81\x2e\xdd\x86\x62\x6b\x1b\x60\x29\x86\xa1\x28\x0c\x4a\x3a\xd9\x6c\x28\x52\x23\x29\x3b\x6e\x9b\x77\xdf\x91\x92\x6c\xc9\x96\x1c\x25\x0b\xb0\x2d\x05\x2c\x89\xf7\x93\xdf\x7d\x47\x52\xea\xe4\x9b\x57\xef\x2e\xae\xfe\xbc\xfc\x89\x2c\x4d\xca\x67\x27\x13\x7b\x21\x9c\x8a\xc5\xd4\x03\xe1\xd9\x01\xa0\xf1\xec\x84\x90\x49\x0a\x86\x92\x68\x49\x95\x06\x33\xf5\x72\x93\xf8\x3f\x78\x4e\x10\x52\x0d\x64\xa9\x20\x99\x7a\x01\x8e\xd8\x21\xc3\x0c\x87\x59\x14\x26\x86\x04\x84\x89\x18\x6e\x9e\x4f\x82\x62\xd0\xc9\x39\x13\xd7\x95\x89\x36\xd4\xb0\x28\x88\xb4\x0e\x68\x96\x8d\xf1\xea\x11\x05\x7c\xea\x69\xb3\xe1\xa0\x97\x00\xc6\x0b\x66\x47\xac\x32\xc5\x74\xfa\x00\xbb\x50\x4a\xa3\x8d\xa2\x0f\x89\x19\x53\xbd\x0c\x25\x55\xf1\x03\x6c\x15\x8b\xae\xf5\x92\xae\xc7\x29\x13\x9d\xe6\x1d\xf6\x9c\x85\x01\x16\x27\xe7\x54\xf9\x39\xf3\x8d\x02\x08\x62\xa6\xcd\xfe\x60\x3f\xdf\xfb\xb2\x66\xb0\x1b\x97\xad\x2d\xa2\xf3\x74\x68\xb8\x94\xca\x44\xb9\x21\x2c\x92\x62\xcf\x36\x48\xe8\xca\x0e\x8f\xf1\xc7\x5a\x4e\x82\x82\x47\x93\x50\xc6\x1b\x22\x16\x3e\x96\x7a\xea\x45\xe1\xc2\xbc\xcc\xb2\x82\x46\x31\x5b\x91\x88\x53\xad\x71\x5c\x0a\x43\x99\x00\xe5\x24\x4d\x99\xa0\xab\x90\x2a\x52\x5c\x7c\x26\x56\x80\x84\xac\x1e\x13\x76\x03\xb1\x6f\x64\x86\xf3\x96\x1c\x9c\x36\x5b\x60\x42\x52\x94\xae\x8e\x07\x72\xf2\x9c\xd7\x62\x55\x9e\xf1\x52\xd3\x71\x38\xcc\x26\xb4\x9a\xb4\xa3\x38\x68\xa4\xff\xeb\xe2\x6e\x12\xd0\xd9\x04\xab\x55\x73\x1b\xe4\xfc\x9f\x05\x11\x32\x76\x21\xde\xda\xeb\xf1\x00\x13\x24\xc5\xaa\xc4\xae\xb8\x3d\xc0\x51\xc9\x75\x07\x24\xdc\xd7\xa9\xff\xec\x5b\x52\xde\xc9\x24\xc1\x8e\xf7\x9f\x91\x14\x91\xaa\xe3\x64\x8d\xb0\x92\x2b\x06\xeb\x59\x2d\x60\x5b\xf4\xed\xcd\x24\xb0\x04\x28\x98\xa4\x23\xc5\x32\x43\xb4\x8a\x9a\xfc\xfe\xf4\x57\x0e\x6a\x53\x5e\xfc\xe7\xe3\x67\xf8\xef\x93\xf6\x30\x46\x61\x31\xeb\x6f\x9c\x33\xd7\x08\xbd\xad\xe3\x17\xe3\xd5\x8b\xfe\xea\x8d\x4e\xee\x6d\xb5\xcc\x53\x2a\xd8\x67\xb8\x9f\xd5\x76\xb5\xaa\xad\x5b\xbd\x8d\xcb\xd5\xa1\xba\xde\xdb\xd0\xdf\x45\xc7\x05\x66\x97\xc0\xbd\x66\x70\xdc\x97\x6f\x32\xae\x1f\xe6\x50\xc9\xdc\x40\xf3\xe9\x61\x8e\xee\x5c\x51\xfb\xd3\x50\x4b\x91\x49\x26\x0c\xdc\x03\xec\x62\x23\x6b\xaa\x77\xe9\x7f\xd2\x01\xdc\x64\xab\xbe\xb5\x44\x75\xb7\x46\xf5\xd6\xb6\x8b\x4d\x6f\xe5\x54\x0a\x66\x64\xff\x54\x90\xff\x74\xd1\xdf\x3d\x97\x0b\xdd\x5b\xd9\x35\x7e\x6f\xed\xf0\xfb\xef\xfa\x03\x9e\x30\x8e\xf5\xec\x9f\x8a\x06\x85\x9b\x20\xf4\x37\x88\x99\x82\xc8\xb0\xd5\x81\x49\x87\x8d\x1f\x72\x58\x81\x9f\xe2\x66\xca\xc4\xa2\x40\xb6\xb8\x75\xc5\xae\x04\xbd\xe2\x77\xfb\x32\x9b\x0c\x3a\x5c\xdd\xdb\x17\x16\x9e\x6f\x34\xeb\x07\xc9\xdd\x6e\x7c\x77\xf3\xb9\x67\x93\xf5\xf0\xb7\x96\x2a\xe6\xd8\xfd\x8f\xe5\xcf\x9e\x97\x0b\xda\x3c\x96\x47\x23\xaf\xc1\xee\x1e\x8f\xeb\xb0\x35\xc7\x0e\x9f\x37\x8e\xaa\x10\xe6\x3d\xd9\x60\xd5\xed\xc9\xbe\x6f\x17\xd8\x43\x19\x9e\xde\xf8\x61\xab\x9d\x4c\xaa\xbb\x24\x17\x91\x3d\xd5\x11\x37\xbf\xb7\xb0\x76\xe7\xae\x37\xc5\xdc\x86\xa7\xe4\x8b\x3b\x7d\x28\x30\xb9\x12\xe5\x83\xfd\xf3\x2c\x97\xb5\x77\x46\xbe\xdc\x8e\x76\x83\x31\x24\x34\xe7\x66\x5e\x42\x63\xc5\xb5\x43\x18\x2a\x80\xa0\x18\x27\x46\x81\x51\x39\x8c\x9a\xc2\x78\x23\x68\xca\xa2\x52\xb8\x95\xd5\x03\xd8\xa8\xf3\x84\x01\xb7\x2e\xbc\xb9\x7d\xf4\x5a\xe2\xbb\x71\xab\x50\x0e\xb4\xe9\x54\x84\xb7\x7a\x08\x99\x88\xf1\x1d\xa4\x4d\x2f\xa6\x06\x0c\x4b\x61\x9e\xd9\x17\x36\xa7\x6e\x87\xae\x70\xe8\x5d\x66\x91\xa3\xbc\xcd\x6c\x97\x24\xe5\x0d\x85\x70\x63\x60\x4e\x95\xa2\x9b\x39\xd6\x07\x0f\xdd\xa6\x70\x6a\x37\xba\xba\x5e\x45\xab\x43\x10\xab\xcc\xf7\xe1\x77\x42\xdb\x27\xf3\x72\x7d\x6d\x93\x6f\x59\xdf\x2d\xbd\xd3\xdc\xd6\xb7\x90\xee\x8a\x74\x52\xfc\xde\x9e\x9f\xec\x51\xea\xd2\x11\xea\x35\xee\x6b\x17\x5b\x3a\x0e\x19\x3e\xfe\x8a\x4b\xeb\xa8\x78\xa7\xbd\xa4\x8a\xa6\xba\x7c\x78\xff\xba\x88\xf9\x44\x47\x32\x83\x11\x79\xb2\x34\x26\xc3\x8b\x3b\x8e\x54\xd7\xca\xe2\x09\x97\x91\x7b\x2b\x71\xb7\x8b\x91\xb5\xb2\x4a\x39\x0b\xdf\xc8\x98\xf2\x8a\xc0\x2c\x21\xdb\xa0\x64\x3a\x25\x9e\x3d\x6c\x7b\xa7\x35\x68\x8b\x70\x63\x3b\xfe\x4e\xf0\x0d\x99\x3a\x16\x9e\x97\xf3\xaa\x65\x34\x76\x59\x5e\x41\x9a\x71\xe4\x81\x46\xc5\xf6\xf1\xaf\x5f\x11\xa0\xf3\x6e\xc3\x0f\x9e\xc3\xc7\xfb\x48\xa6\xbb\xaa\xb7\xaf\x36\x48\x3d\xc3\x28\xef\xda\x95\xec\xa7\x06\xef\xbc\xc8\x11\x0f\x32\xa4\x1c\xc7\xcc\xda\x9b\xfa\xbc\x06\xc9\x16\x7d\xf2\xf4\xe9\x36\x8d\xda\xf0\xb8\x74\x56\x87\x6a\xe7\xbf\x45\xb1\x81\x98\xcd\x86\xa5\x91\xd3\x64\xe6\x47\x9b\x4d\x3d\x95\x1a\x23\xf6\xea\xb0\x2b\x7b\x51\xd5\xaa\x9e\xa3\x2a\xf8\x8e\x97\xcd\xee\xa8\x9a\xe3\x2d\x4d\x41\x9f\x11\x91\x73\xde\xa4\xb0\x6b\x5e\x5c\x1f\x2e\x5d\x3b\x77\xaa\xd9\x36\x7d\x69\xbb\xf4\xa2\x6a\xd2\x56\xd5\xdb\xd3\xf3\x06\x37\xc2\xfd\x29\xe2\xd4\xab\x7e\x18\xd6\x31\x2c\x57\x54\x04\xa7\xa0\xc5\x5e\x71\xb0\x93\xda\x1b\xe9\x95\x14\x50\x83\x2d\xc6\xc7\x7f\xa1\x91\xb6\xa1\xea\x53\x6a\x21\xc3\xae\x39\x0e\x80\x69\xcc\xb4\x7a\x9d\x4a\x65\x9c\x73\x18\x0e\xca\xef\x19\x83\xd3\xb1\xd3\xd9\x6d\x64\xc3\x81\x23\xd1\xcb\xb2\xca\x2e\xb5\x0b\xa3\xf8\x60\x44\xda\x05\x5d\x1e\x2e\x70\x9d\xfc\xd9\xad\x73\x07\x3e\x5a\x44\x5d\x5e\xae\xaa\xd5\xf4\xc0\xc9\xa1\xe4\xa8\x8f\x8e\x54\xda\x64\x5d\x7e\xfe\xc0\x13\xd7\x6f\x78\xe2\x3a\x70\x72\x20\xb0\x9c\xbd\x1b\xf1\x84\x2d\x86\x1f\x06\x25\x4b\x94\x5c\xb1\x18\xd4\x60\xc7\xfc\x2d\xab\x9b\x1a\xa7\x7b\xfd\xd8\x94\x8e\xd7\x4b\x10\xc3\x41\x71\xe8\x09\x06\xcd\x96\x73\xcd\x6c\xca\xe5\xf1\xbd\xe2\x67\x64\xb0\x3d\x28\x6d\x57\xc0\xe2\xb8\x64\x57\xbc\x16\xeb\x1a\x28\x68\xfc\xca\xaa\x3a\x20\x6e\x4b\xae\x39\xbe\x7d\xb4\xd3\x0f\x02\xe2\x3f\xc6\xdf\x71\x20\x3b\x51\x24\x83\x6d\xbf\xd5\xa1\xed\xc0\xb4\xd6\x9d\x4d\x98\xdb\xc1\xad\xbe\xa1\xb5\x01\xd4\x0f\x64\xe7\x21\x48\x4c\xe0\x4e\xf0\x5d\x60\xb7\x40\x5e\x7e\xb4\xab\x81\x7e\x3c\xc5\xb9\x80\xf5\x23\xa4\x89\x5e\xee\x9d\x25\xee\x8a\xbd\xd3\x3c\x73\x37\x76\x03\x08\xe6\x10\x33\xf3\x3f\x4b\x39\xe2\xb8\x4b\xfc\x07\x72\x76\xad\xd7\x78\x09\xb1\x5f\xcc\x67\x27\xe3\x44\xaa\xf4\x17\x9c\x4e\xe6\x4c\xec\xee\xec\xe8\x1d\x33\x8d\x89\x6d\x70\xcf\xc5\xfc\xd1\xbc\xa6\xf8\xbb\xcc\x55\x04\xdd\x9a\x18\xa5\xf0\x3d\x09\x8a\xff\x8f\xf9\x3b\x00\x00\xff\xff\x66\xf3\xcd\x5e\xa0\x19\x00\x00")

func staticx_index_ft_html_bytes() ([]byte, error) {
	return bindata_read(
		_staticx_index_ft_html,
		"staticx/index-ft.html",
	)
}

func staticx_index_ft_html() (*asset, error) {
	bytes, err := staticx_index_ft_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "staticx/index-ft.html", size: 6560, mode: os.FileMode(420), modTime: time.Unix(1447048852, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticx_index_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x19\x69\x6f\xdb\x38\xf6\x7b\x7e\x05\x57\x5b\xd4\x09\x60\x59\xdb\xed\x62\x31\x48\xec\x00\x99\x64\x8e\x62\x7a\xe4\x43\x8a\xc1\xa0\x28\x02\x4a\xa4\x64\xb6\x14\xa9\x21\x29\x27\x6e\x9b\xff\x3e\x8f\xd4\x61\x9d\x89\x9c\x69\x30\x2e\x10\x51\x7c\x27\xdf\x4d\x75\xf9\xaf\x8b\x77\xe7\x57\x7f\x5c\xfe\x84\xd6\x26\xe5\xa7\x07\x4b\xfb\x40\x1c\x8b\x64\xe5\x51\xe1\xd9\x0d\x8a\xc9\xe9\x01\x42\xcb\x94\x1a\x8c\xa2\x35\x56\x9a\x9a\x95\x97\x9b\xd8\xff\xc1\x73\x80\x10\x6b\x8a\xd6\x8a\xc6\x2b\x2f\x80\x1d\xbb\x65\x98\xe1\xf4\x34\x0a\x63\xb3\x0c\x8a\xb5\xdb\xe6\x4c\x7c\xae\x30\xb5\xc1\x86\x45\x41\xa4\x75\x80\xb3\x6c\x01\x4f\x0f\x29\xca\x57\x9e\x36\x5b\x4e\xf5\x9a\x52\xe3\x05\xa7\xf7\x50\x65\x8a\xe9\xf4\x11\x74\xa1\x94\x46\x1b\x85\x1f\x23\x93\x60\xbd\x0e\x25\x56\xe4\x11\xb4\x8a\x45\x9f\xf5\x1a\xdf\x2c\x52\x26\x46\xc9\x47\xe8\x39\x0b\x03\xf0\x49\xce\xb1\xf2\x73\xe6\x1b\x45\x69\x40\x98\x36\xdd\xcd\x69\xbc\xbb\xb0\xb6\xb0\x5b\xa7\xad\xf5\x9d\xe3\xd4\x27\x5c\x4b\x65\xa2\xdc\x20\x16\x49\xd1\xa1\x0d\x62\xbc\xb1\xdb\x0b\xf8\x63\x29\x97\x41\x11\x3e\xcb\x50\x92\x2d\x12\x89\x0f\xae\x5e\x79\x51\x98\x98\xb3\x2c\x2b\xa2\x87\xb0\x0d\x8a\x38\xd6\x1a\xf6\xa5\x30\x98\x09\xaa\x1c\xa4\x0d\x13\x78\x13\x62\x85\x8a\x87\xcf\xc4\x86\x42\x1c\x56\xaf\x31\xbb\xa5\xc4\x37\x32\x83\x73\x4b\x4e\x1d\x36\x4b\x40\x21\x29\x4a\x56\xf7\x0b\x1a\x16\xe6\x5b\xdd\x5b\x38\x80\x85\x2b\x1c\x09\x1a\x30\x42\xfd\x50\x61\x41\xbc\x46\xfc\xa3\xc6\x6f\xc9\xd2\xa4\x22\xe0\x32\x91\x1e\xd2\x2a\xda\x59\x0b\xa0\x60\xe8\x45\x26\x92\x22\x74\x6a\xb2\x00\x37\x14\x03\x4f\x6f\x1a\xaf\x39\x6f\xa8\x59\x59\x00\x1e\x6d\x3d\x39\x3b\x05\x5d\x4b\xad\x98\x20\xf4\x96\x6a\xd0\xee\x55\xb1\xb2\x02\x96\x10\x55\x4d\x29\x39\xff\x7b\x42\x84\x24\x4e\xc4\x5b\xfb\x7c\x0a\x01\xa9\x14\xcc\x48\x05\x22\xde\x14\xab\x27\x11\x82\x05\x4e\xa8\x95\xe1\x16\x4f\x21\x02\x02\xc1\xda\xe9\x35\x3c\x1e\xcd\xbe\x5a\x2a\x96\xac\x4d\x57\x56\x45\x42\x94\xcc\x88\xbc\x11\xdd\xa0\xc4\x5d\x04\x48\x9d\x24\xe1\xd4\x43\x04\x1b\x5c\xbe\x34\xc8\x5b\xd4\xf0\x2b\xce\xf1\xef\x2a\xd9\xc2\xdc\x18\x5b\x09\xb0\x62\xd8\xa7\xb7\x19\xe4\x03\x25\x2b\x2f\xc6\x5c\xd3\x8e\x68\xf8\xfd\x4a\x79\x86\x96\x1a\xb0\xea\x6c\xc4\x0a\x8a\x10\xd8\xc1\x6e\x76\x54\x6d\x26\x42\xc7\x20\xb5\xf2\x29\x15\x79\xa5\x8b\x5b\x77\x65\xb6\xcc\xbf\x36\x26\x3b\x0e\x02\x8e\x43\xbd\x88\x64\x1e\xad\x6d\xfb\x82\x55\xea\x4a\x5e\x37\x81\xeb\xdf\x2f\xd4\x18\x26\x12\x04\x99\xab\x0c\x25\x3d\xc5\xac\xae\x4d\x3f\xee\x2f\x99\xd0\x8d\x9f\xe4\x50\x52\x02\x5b\x5a\x36\x8c\xde\x8c\xe9\x72\x41\x37\x94\xcb\x8c\xaa\x99\x46\x8e\xe2\x09\xb4\xc1\x04\x5a\xc9\x44\x7d\xce\x2c\x2e\xb3\x3d\x15\x92\x72\x7f\x9d\x6a\x87\xb2\x0d\x73\xf5\x76\xaa\xee\xb1\x54\x79\xda\xd5\x7e\x4c\xc9\xf3\x0a\x0b\x01\x56\x9a\x43\x01\xd9\xa2\x82\xc1\x24\x4d\xdb\x79\xd9\xc5\x68\x42\x1b\xf5\xba\x5c\xf6\x9a\x99\x92\x37\x23\x7d\x89\xfb\x3a\xf5\x5f\xfc\x07\x95\x2b\x19\xc7\x30\x6d\xf9\x2f\x50\x0a\xed\xaa\xdb\xac\xa0\x9d\x5a\xaf\x9c\xb6\x1a\x44\x5f\x7a\xbd\x58\x06\xb6\x0b\x17\xed\x5c\x47\x8a\x65\xa6\xdd\x8d\xec\x90\xf1\xe9\xcf\x9c\xaa\x6d\xf9\xf0\xff\xbb\x78\x01\xff\x3e\x69\x97\x9c\x8e\xe2\x74\x3a\x71\xce\xdc\x34\x32\x99\x9a\xbc\x5c\x6c\x5e\x4e\x47\x6f\x8d\x53\x93\xa9\xd6\x39\x14\x78\xf6\x85\xee\x47\x55\x8f\x8c\x8d\xe1\x71\x32\x71\x39\xa2\x55\xcf\xbd\x09\xfd\x9d\x74\x98\xf2\x76\x0a\xec\x75\x82\xfb\x79\xf9\x26\xe3\xfa\x71\x0c\x95\xcc\x0d\x6d\xbf\x3d\x8e\xd1\x83\x63\xed\xf4\x30\xd4\x52\x64\x92\x09\x43\xf7\x30\x76\x71\x9b\x68\xa3\x8f\xe1\x7f\xd2\x01\xb4\xb9\xcd\x54\x5f\x02\xba\x1b\xc0\x26\x63\xdb\x49\x6a\x32\x72\x39\x15\x4d\xc7\x77\x73\xcd\x64\x74\x3b\xac\x4c\x46\x76\x89\x3f\x19\x3b\xfc\xff\xff\xa6\x1b\x3c\x66\x1c\xfc\x39\x5d\x15\x6d\x5b\x56\x44\xa7\x13\x10\xa6\x68\x64\xd8\xa6\x47\x32\x42\xe3\x87\x1c\xda\xb0\x9f\xc2\x8d\x06\xe6\x82\xc2\xb2\xc5\xd2\x39\xbb\x02\x4c\x92\x3f\xce\xcb\x6c\x33\x3a\xc2\x6a\x6f\x5e\xe0\x78\xbe\xd5\x6c\x9a\x49\x1e\x66\xe3\xbb\xc5\x97\x89\x49\x36\x81\xdf\x8d\x54\x84\x43\xf6\x7f\x2f\x7e\xf6\x5b\x45\x11\x36\xdf\x8b\xa3\x91\x9f\xa9\xed\x1e\xdf\x97\xe1\xa0\x8e\x23\x3c\x6f\x5d\xa8\xd2\x30\x9f\x18\x0d\x16\xdd\x7e\x5e\x99\x9a\x05\xf6\x66\x0c\x93\x34\xef\xa7\xda\xc1\xb2\x5a\xc5\xb9\x88\xec\xd5\x1a\xb9\xf3\xbd\xa5\x37\xee\x52\xf9\xa6\x38\xdb\xe1\x11\xfa\xea\xa6\x0f\x98\xe9\x73\x25\xca\x17\xfb\xf3\x6c\x2c\x6b\xef\x18\x7d\xbd\x9b\xef\x36\x09\x8d\x71\xce\xcd\x75\x69\x1a\x0b\x6e\xcd\x5d\x1e\x15\x18\xe4\x10\x00\x18\x95\xd3\x79\x1b\x48\xb6\x02\xa7\x2c\x2a\x81\x35\xac\x29\xc0\x4a\xbd\x8e\x19\xe5\x96\x85\x77\x6d\x5f\xbd\x01\xf9\x6e\xdf\x22\x94\x1b\x43\x38\x55\xc0\x5b\x3c\x30\x99\x20\x58\x91\x21\x3c\xb8\x45\x51\xc3\x52\x7a\x9d\xd9\x8f\x65\x0e\xdd\x6e\x5d\xc1\xd6\xbb\xcc\x5a\x0e\xf3\x21\xb2\x9d\x92\x98\xb7\x10\xc2\xad\xa1\xd7\x58\x29\xbc\xbd\x06\xff\xc0\x30\x6e\x0a\xa6\xb6\xd1\x35\xf1\xaa\xb0\xea\x1b\xb1\xd2\xbc\x6b\x7e\x07\xb4\x79\x72\x5d\xd6\xd7\x21\x78\x1d\xf5\xe3\xd0\x07\xc9\xad\x7f\x0b\xe8\xce\x49\x07\xc5\xdf\xbb\x93\x83\x4e\x48\x5d\xba\x80\x7a\x05\x7d\xed\xbc\x0e\xc7\x43\xb8\x61\x98\xdf\xa0\xb4\xce\x91\xab\xaf\x97\x58\xe1\x54\x97\x2f\xef\x5f\x15\x32\x9f\xe9\x08\xae\x45\x73\xf4\xcc\x5e\x10\xe0\xe1\xc6\x91\xea\x59\x51\x3c\xe3\x32\x72\x9f\x86\xdc\x32\x99\x5b\x2a\x8b\x94\xb3\xf0\x8d\x24\x98\x57\x01\xcc\x62\x54\x0b\x45\xab\x15\xf2\xdc\x15\xe8\xa8\x61\xda\x42\xdc\xc2\xee\xbf\x13\x7c\x8b\x56\x2e\x0a\x4f\xca\x73\x35\x34\x5a\x38\x2d\xaf\x68\x9a\x71\x88\x03\x0d\x88\xc3\xfb\xdf\xbe\x81\x81\x4e\xc6\x09\x3f\x78\xce\x3e\xde\x47\xb4\xda\x79\x7d\xb8\xda\x40\xe8\x19\x06\x37\xf0\x91\xae\x64\x3f\xf3\x7a\x27\x85\x8e\x30\xc8\xa0\x72\x1f\x34\x1b\x4e\xea\x93\x86\x49\x6a\xeb\xa3\xe7\xcf\x6b\x35\x1a\xdb\x8b\x92\x59\xd3\x54\x3b\xfe\x03\x88\x2d\x8b\x59\x6d\x58\x1a\x39\x4c\x66\x7e\xb4\xda\x34\x55\x69\x44\x44\xc7\x0f\x3b\xb7\x17\x5e\xad\xfc\x39\xaf\x84\xef\xe2\xb2\x9d\x1d\x55\x72\xbc\xc5\x29\xd5\xc7\x48\xe4\x9c\xb7\x43\xd8\x25\x2f\xd4\x87\x4b\x97\xce\xa3\x68\x36\x4d\xcf\x6c\x96\x9e\x57\x49\x3a\x88\x7a\x77\x74\xd2\x8a\x8d\xb0\x7b\x44\x38\x7a\x95\x0f\x87\x4d\x1b\x96\x15\x15\x8c\x53\x84\x45\xc7\x39\x90\x49\xc3\x89\x74\x21\x05\x6d\x98\x8d\xc0\xeb\x3f\x90\x48\xb5\xa8\xe6\x91\x06\x82\x61\x97\x1c\x3d\xc3\xb4\x4e\x5a\x5d\xa7\x52\x49\x72\x4e\x0f\x67\xe5\x47\xe5\xd9\xd1\xc2\xe1\xec\x1a\xd9\xe1\xcc\x05\xd1\x59\xe9\x65\xa7\xda\xb9\x51\x7c\x36\x47\xc3\x80\x31\x0e\xe7\x50\x27\x7f\x76\x75\xae\xc7\x63\x00\x34\xc6\xe5\xaa\xaa\xa6\x3d\x26\x7d\xc8\xbd\x3c\x46\x54\x19\x82\x8d\xf1\xf9\x1d\x26\xae\xd7\x30\x71\xf5\x98\xf4\x00\x36\x66\x1f\xb6\x78\xcc\x92\xc3\x0f\xb3\x32\x4a\x94\x74\x9f\x73\x66\xbb\xc8\xaf\xa3\xba\x8d\x71\xd4\xc9\xc7\x36\x74\x71\xb3\xa6\xe2\x70\x56\x0c\x3d\xc1\x6c\xde\xfb\xba\xf3\xd5\x94\xe5\xf1\xbd\xe2\xc7\x68\x56\x0f\x4a\x75\x05\x2c\xc6\x25\x5b\xf1\x06\xa8\x1b\x46\x01\xe2\x0b\x8b\xea\x0c\x71\x57\xc6\x9a\x8b\xb7\x8f\xf0\xb2\x9b\x84\x96\x41\xf1\x7f\x65\x7f\x05\x00\x00\xff\xff\xd2\xd6\x67\x41\x3c\x1b\x00\x00")

func staticx_index_html_bytes() ([]byte, error) {
	return bindata_read(
		_staticx_index_html,
		"staticx/index.html",
	)
}

func staticx_index_html() (*asset, error) {
	bytes, err := staticx_index_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "staticx/index.html", size: 6972, mode: os.FileMode(420), modTime: time.Unix(1446874443, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticx_js_debug_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x54\x4d\x6f\x9c\x30\x10\xbd\xe7\x57\x58\x51\x24\x58\x25\x85\x1e\xaa\x5e\xa2\x56\xaa\xb2\xaa\x14\xf5\x43\x55\xd4\xee\xa5\xea\xc1\x0b\xb3\xc4\x8a\xb1\x91\x6d\x48\xa2\x8a\xff\xde\x01\x37\x8b\xed\x65\x81\xee\xa1\xb9\x64\x61\xde\xcc\xbc\xf7\x66\x86\x5d\x2d\x32\xc3\xa4\x20\x6b\xd8\xd6\xc5\x8d\x51\x3c\xbe\xd0\x99\xac\xe0\x8a\x5c\xdc\x1b\x53\xe1\x3f\x25\x6b\x03\xdf\xa8\xa2\xa5\xc6\x27\x2e\x8b\x15\xf9\x7d\x46\xf0\xcf\x02\x93\x8a\x89\x1c\x9e\xbe\xd2\x12\xc8\x3b\x72\x7e\x7e\xed\xc6\x72\x99\xdd\xe6\xa3\xaf\xef\x40\xd7\xdc\x68\x8c\x89\x9a\xf3\x30\xda\xb3\x99\x80\xec\x18\xf0\x5c\x4f\x00\x40\x29\xa9\xbe\x80\xd6\xb4\x80\xb1\x78\x49\x9f\x3e\x7d\x06\x81\xa1\xd7\xe1\xfb\xcd\xfe\xbd\x1b\x28\xc0\x7c\xec\x9b\x62\xe8\xc5\xb4\xf8\xc5\x89\x45\xcc\xe6\xd8\x0d\xa0\xce\xf8\xae\x61\x1c\xa5\xb4\x62\xa9\x35\xf8\xd5\x96\x43\x03\x69\x74\x79\x60\xfb\x65\x94\xda\xae\x69\xb4\x4a\xf6\x55\x74\x9d\x65\xd8\x21\xde\x93\xcd\xa9\xa1\x2e\xe1\x09\xd2\x1d\x74\x20\xdd\x3a\x55\x7b\xe6\x7e\xcd\x2b\x92\xc9\x1c\x8e\x54\x0e\x94\x86\x85\xed\xef\xd6\x73\x3a\xef\x66\xbf\x96\xd9\x8c\xd1\x47\x76\x68\xe1\x1e\x2d\x59\x95\xa9\x75\x99\x5c\x99\x13\x87\x88\x7c\x31\xe2\xb9\xf8\xd7\x74\xd1\x39\xfc\xe3\xee\xf6\x46\x96\x95\x14\x20\x4c\xec\xde\xd7\xea\xc4\xa9\x7b\x0e\xda\xc9\xf8\xb0\x93\x24\xf4\x96\x8f\xeb\xf8\x47\x2d\x8b\xf5\x38\x9a\x2a\x25\x3b\xfc\xda\x1f\xbd\xcd\xba\xf6\x92\xda\xa0\xd3\xe2\xcd\x76\xba\x4d\x6e\xb7\x6d\xf2\x3f\xcf\xc8\xff\x62\x8d\x5b\xe1\x5e\x55\xe8\xe5\xd1\xbb\x09\x96\x63\x87\xdc\x1b\xaa\x08\x23\x4c\x1c\x49\x0a\x75\x74\x70\x25\x1f\xb1\xd6\x38\xfe\x27\xfb\xe5\x3b\x87\xe0\xe4\x01\xe1\xd4\xc8\x6d\xdc\x3f\xc0\xf3\x2a\xd1\x15\x67\xb8\x8e\x51\x30\x4b\xb6\x23\x16\x93\x70\x10\x85\xb9\x27\xef\x83\xc3\x9d\x98\xe1\x70\xda\x6e\x85\x60\x8c\x87\xd4\x18\x26\x6c\xa9\x86\xb7\x6f\xd6\x90\x7d\x97\x1f\x94\xda\xb3\x3c\x14\xd2\xb8\x42\x1a\xca\x67\x85\x34\x63\x42\x36\xb3\x42\x36\x83\x90\x66\x46\x48\x7b\x16\x8e\xfd\x01\x13\x0c\x2b\xa1\xff\x50\xc2\x23\x41\x49\xf4\x39\x0e\x7c\x3c\xf8\xfa\x35\x33\x59\x9b\x21\x0b\xf7\xb3\xfd\x13\x00\x00\xff\xff\xe6\xe2\x76\x3a\x70\x08\x00\x00")

func staticx_js_debug_js_bytes() ([]byte, error) {
	return bindata_read(
		_staticx_js_debug_js,
		"staticx/js/debug.js",
	)
}

func staticx_js_debug_js() (*asset, error) {
	bytes, err := staticx_js_debug_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "staticx/js/debug.js", size: 2160, mode: os.FileMode(420), modTime: time.Unix(1446874443, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticx_partials_debug_rows_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x90\xb1\x6e\x83\x30\x10\x86\xf7\x3c\xc5\xf5\xd4\x95\x92\xaa\xea\x06\x4c\xdd\xd2\x29\x43\x96\xaa\x83\xc1\xa7\x60\xe1\xd8\xc8\x36\x82\x08\xf9\xdd\x6b\x83\xa9\x50\xbb\x74\xe9\xe4\xff\xe4\x4f\xf7\xdd\x5d\xd1\xbe\x54\x67\x3d\xda\x22\x0f\xe1\x70\x28\x1c\xab\x25\x41\xad\x0d\x27\x53\xe2\x11\xa1\x91\xcc\xda\x12\x39\xd5\xc3\x15\xab\x03\x40\xe1\x4c\x7c\x62\x68\xa1\xd1\xd2\xf6\x4c\x95\x38\xcf\x37\x36\x9d\xde\x49\x79\x8f\xd5\x89\xee\x45\xee\xda\x84\x3d\x64\xd9\x6f\xf4\x92\xd0\x0b\x93\x03\x2d\x70\x96\x2d\xdd\xf3\xb5\x7d\xb0\x80\xba\x66\x86\x7a\x62\xae\x44\xa3\x47\x10\x0a\xb8\x6e\xde\xe2\x20\x67\xb2\x83\x74\x16\xb7\x41\xf8\x1a\x00\xe6\x39\x90\xde\xa7\xea\xc7\x36\xcf\xb8\x61\xbb\x2d\xb6\x92\xc3\x28\xb8\x6b\x4b\x7c\x3d\xf6\x13\xee\xdd\x4d\x1b\xd5\x9d\x24\xe5\xc4\x8d\x2c\x38\xc3\x9a\x0e\xea\x3b\x3c\x0a\xc5\x69\xc2\x6a\x91\x3e\x75\x1f\x6b\xfd\xe9\x7d\x58\x82\xef\x54\xf9\xde\xf5\x0f\x62\xf1\x17\x73\xc8\xf1\x18\xe9\x62\x09\x5b\x81\xef\xaf\xaf\x00\x00\x00\xff\xff\x63\x5f\x1c\x85\x0d\x02\x00\x00")

func staticx_partials_debug_rows_html_bytes() ([]byte, error) {
	return bindata_read(
		_staticx_partials_debug_rows_html,
		"staticx/partials/debug-rows.html",
	)
}

func staticx_partials_debug_rows_html() (*asset, error) {
	bytes, err := staticx_partials_debug_rows_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "staticx/partials/debug-rows.html", size: 525, mode: os.FileMode(420), modTime: time.Unix(1446874443, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticx_partials_debug_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x94\xcf\x8e\xd3\x30\x10\xc6\xef\x7d\x0a\xcb\x97\xdd\x3d\x04\x53\xb8\x70\x48\x72\xaa\x40\x3d\x80\x10\x6f\xe0\xd8\xd3\xc4\x5a\x27\x8e\x6c\x67\xb7\x4b\xd5\x77\x67\xfc\x27\xa4\xe9\x22\x01\x85\x4a\x8d\x1c\xcf\xcc\xef\x1b\x7f\xd6\xa4\xec\xb6\x44\x68\xee\x5c\x45\x47\xde\x42\xd1\x01\x97\x60\x69\xbd\x83\x66\x6a\x4b\xd6\x6d\xeb\xcd\xa6\x94\xea\x89\x0c\x6d\xe1\x3a\xf3\x5c\x51\xb0\xd6\xd8\xcf\xe0\x1c\xa6\xd3\xb9\x96\x6b\xb0\x9e\xc4\x67\x21\xf9\xd0\x82\x0d\x05\x42\x1b\xfe\x48\x89\x35\x1a\x72\x0a\xad\x37\x84\x9c\x4e\x97\x8c\xf3\x79\x53\x32\x54\x08\x42\x07\x63\xfb\x19\x19\xd6\x45\x67\xac\xfa\x6e\x06\xcf\xf5\x8c\x09\xdb\x91\x12\xbb\xba\xcc\x6d\xad\x99\xc6\x18\xc2\xa0\xe6\x0d\x68\x82\xfb\x15\x55\xc3\x38\xf9\xaf\xfb\x41\xc2\xf1\x0b\xef\x97\x9e\x85\xd1\x85\xeb\x8b\x77\x44\xa0\x00\xc2\x8b\x58\x93\x01\x84\xa4\x0a\x12\x4a\x12\x92\xc5\x78\xe6\x5f\x88\x67\xce\x87\x9f\x95\x65\x54\x0c\x06\xf4\x46\x82\x46\x67\xd5\x22\xee\x5f\x46\x3c\x85\x87\xa3\xa7\xab\xee\x73\x13\x34\x33\xf2\x4f\xc9\x5f\xf4\x3f\x6a\x2e\xa0\x33\x1a\x2f\xaa\xa2\xf7\x8d\x86\x27\x20\x49\x82\x0c\x98\xf0\x30\x7b\x90\x5c\xbd\x5c\xfc\x95\x65\x3b\x23\xfe\xd4\x2b\x4c\x25\xfb\xdd\xbf\xda\x24\x8d\xd8\xcb\x9b\x1d\x8a\xed\xae\xad\x41\x20\xc6\x6f\xf5\xe3\x75\xef\xe6\x70\x70\xe0\xa3\x0b\xf1\x7d\xfb\x76\x39\x4c\x33\x79\x6f\x86\xdc\xbc\x9b\x9a\x5e\x2d\xed\x37\x7e\x20\xf8\x2f\x46\xab\x7a\x6e\x5f\xae\x4e\x90\x26\x45\x89\x47\x74\x20\x4c\x1d\x1e\xe4\xfe\x21\x4f\x60\x70\xb6\x64\x89\xfd\x7f\xa5\x5a\xf0\x1f\x15\x68\xe9\x82\xd6\x27\xf0\x24\xbd\xad\xc5\xae\x2d\x2b\x59\xb0\xe9\xd5\x27\xe1\x10\x4b\xbf\x81\x9b\xb4\x77\x69\x38\xbb\xf7\xf5\x0c\xc4\x65\xd8\x19\x2d\xd4\xa7\xd3\x2a\xf5\x7c\x2e\x59\xd8\x5e\x3e\x00\x2b\x2c\x5e\xdf\x35\x33\xda\xb1\x02\x2e\x49\xbf\xa7\x45\x4b\x67\x64\x88\xa8\x41\xe8\x49\xa6\xf9\x26\xce\x8a\x8a\xde\x31\xe7\xb9\x57\xe2\xc8\x46\x6e\xbd\xe2\xda\xb1\x78\x29\x85\x35\xcf\xee\x4d\xe7\x7b\x7d\x47\x19\xb2\x7f\x04\x00\x00\xff\xff\xd5\x2e\xf4\xc1\x38\x05\x00\x00")

func staticx_partials_debug_html_bytes() ([]byte, error) {
	return bindata_read(
		_staticx_partials_debug_html,
		"staticx/partials/debug.html",
	)
}

func staticx_partials_debug_html() (*asset, error) {
	bytes, err := staticx_partials_debug_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "staticx/partials/debug.html", size: 1336, mode: os.FileMode(420), modTime: time.Unix(1446874443, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticx_partials_index_ft_list_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x56\x49\x6f\xdb\x38\x14\xbe\xfb\x57\x30\x1c\xcc\x78\x02\x44\x56\xd1\x9e\x92\x48\x2a\x0a\xf4\xd2\x43\x73\xea\xbd\xa0\xc4\x17\x89\x08\x45\x12\x24\x15\xc7\x30\xfc\xdf\xfb\x48\x2d\x96\x5d\x17\x46\x8b\x2e\x01\x1a\x03\xb6\x49\xea\x6d\xdf\x5b\x3e\x31\xd3\x92\xa8\x3a\x11\xf7\x39\x15\x8a\xc3\xd3\x1d\x6b\xc1\xad\x24\xa8\xda\x37\x74\x41\xf0\x53\x49\xe6\x5c\x4e\x4b\x0b\x8c\x57\xb6\x6b\x4b\x5a\xe0\x79\x26\x45\x91\x39\xc3\xd4\xf8\xbc\x96\x1b\xd3\x88\x4a\x2b\x32\xad\x92\x52\xeb\x07\x5a\x64\x29\xca\x8e\x2a\x8c\x34\x16\xd0\xd9\x3f\xb4\xf8\x10\xfc\x81\xcb\x52\x36\x88\x64\xa9\x96\xc5\x62\x91\x71\xf1\x18\x62\x72\x8d\x5e\xe7\x14\xac\xd5\xf6\x23\x38\xc7\x6a\xa0\xa3\x33\x26\xc1\x7a\x12\x7f\x13\xce\x54\x0d\x36\x28\x54\x52\xb3\x07\x4a\xac\x96\x30\x88\xc4\x50\xb7\xdb\xb9\x8d\xdd\x0e\xfd\xa0\x87\x99\xa3\xd3\xe0\x51\x35\x0a\x0c\x2e\xa5\x70\x7e\x88\xb8\x4f\x40\xf3\x7a\x8f\x00\xd7\xe1\xc8\xb3\x52\xc2\xa8\xd0\x6f\xe2\x6f\xe2\xbc\x15\x06\x78\x54\x0c\x72\xb6\x5f\xf4\x9b\x86\xac\x05\xf7\x4d\x4e\xaf\xaf\xff\x1d\xb2\x42\x42\x24\x59\xea\x9b\x03\xb9\x62\x7f\x82\x2b\x3b\x19\x0b\x18\x2c\x18\x60\x3e\xa7\xff\x4f\x40\xae\x48\x5c\xbe\x87\xfb\x4b\x5c\x4d\x1b\x47\x27\x93\x73\xe8\xf8\x64\xe5\x37\x06\xc8\x45\x4e\x96\x4c\x0a\xe6\x96\x74\xee\x9c\xef\x4b\x97\x8a\x1e\x76\xba\xdd\x4e\xce\x76\x3b\x5a\x1c\x6c\xfb\xaa\xa2\xda\xdc\x06\x71\x7e\x13\x6a\xb3\x6e\x84\xc7\xa4\x18\x56\xc1\x0d\x51\x7a\x6d\x99\xb9\x9d\x79\x8b\xd2\x65\xe7\x3d\x36\x53\x2c\xab\xa8\x1e\xb0\x11\xb8\xe8\x0b\xb0\x87\x78\x49\x0f\x74\xc6\x4f\xc0\x81\x0d\x1b\x0d\x4c\x2d\x53\x7a\x45\xf0\x9b\x70\xb8\x67\x9d\xf4\x71\xed\xda\x23\xaf\xd1\xf3\xb9\xae\x0e\x81\x84\xae\x0e\x72\x05\x09\xbb\xc3\xc8\xd3\xde\xf3\x39\x3c\xd8\xad\x0a\x9e\x05\x20\x23\x3b\x97\x38\x51\xab\x3d\xaa\x18\xdc\x0f\xc1\xe2\x20\xc1\x3f\x0f\x5c\xde\x32\xd7\x4c\x98\xce\xa0\xd9\x37\xeb\x38\x5b\xf8\x1f\x86\x17\x89\x82\x1c\x30\x81\x50\xa6\xf3\x49\x6d\x75\x67\xc6\x81\xfe\x6a\x34\x3e\x2b\x58\xbf\x8d\x9b\x4f\x01\x23\x9a\x79\x84\xff\x9c\xee\x6c\x05\xf1\xa0\xd2\x5d\xd5\x94\xcc\xc1\x84\x6b\xcc\xe4\x51\x16\x8c\x15\x2d\xb3\x1b\x3a\xe4\xca\x75\x65\x2b\xfc\x7c\x32\xc5\xb9\xca\x86\x04\x88\x82\xdc\xc1\x9a\xc4\xaa\x2c\x4e\x65\x20\x8c\x6b\x84\x1c\x99\x71\xfc\xff\x06\x03\xbe\x0b\xf4\x70\x4c\x83\x64\x38\xfd\x05\x64\x18\x2d\xff\x41\x4a\xcc\x5f\x28\xf1\x85\x12\x5f\x28\xf1\xe7\x52\x62\x1c\xa8\x39\x25\x2a\x21\x7f\x3f\x19\xf6\xdc\xf2\x1d\x94\x78\xea\xee\x78\x71\xf2\xf2\x48\x26\x11\x55\xc9\x8e\x63\xbc\xcb\xd4\x79\xe6\x45\x95\x1a\x66\xbd\x60\xd2\xf5\xb9\x09\xa7\xd6\xaf\x1a\xdf\xca\x25\x4d\xff\xc2\xd7\xcd\x94\xd3\xc8\x85\xc5\x62\x35\xbb\x6b\x5f\x91\xd5\xf1\x7b\x87\x6c\x51\xd5\x30\xce\x05\x26\xb7\xd4\x68\xb5\xbd\x21\x6f\x5e\x99\xa7\xdb\x45\xb8\xdb\x0f\x46\xbe\x04\x00\x00\xff\xff\x13\x70\x25\x4c\xd9\x0c\x00\x00")

func staticx_partials_index_ft_list_html_bytes() ([]byte, error) {
	return bindata_read(
		_staticx_partials_index_ft_list_html,
		"staticx/partials/index/ft/list.html",
	)
}

func staticx_partials_index_ft_list_html() (*asset, error) {
	bytes, err := staticx_partials_index_ft_list_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "staticx/partials/index/ft/list.html", size: 3289, mode: os.FileMode(420), modTime: time.Unix(1447047797, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticx_partials_index_ft_new_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x58\x5b\x6f\xdb\x36\x14\x7e\xcf\xaf\x60\xf4\x50\x27\x40\x14\x77\xdd\xc3\x86\xcc\x36\x50\x74\x17\x14\xd8\x8a\x02\x59\x9f\x82\x3e\x50\x12\x63\x13\xa6\x45\x81\xa4\x72\xa9\xeb\xff\xbe\xc3\x8b\x48\xea\x62\x5b\x4e\x3a\x03\x89\x6d\xe9\xdc\xf8\x7d\xe7\x7c\xa6\x38\x2b\xe8\x03\x2a\x97\x29\xbd\x9f\x27\x1b\xa2\x70\xb2\x38\x3b\x9b\x71\x86\x72\x86\xa5\x9c\x27\x99\x20\xb8\xc8\x45\xbd\xc9\xe0\x06\x42\x33\x46\x17\x33\x59\xe1\xb2\xb9\xbf\x64\xcf\xd5\x8a\xe6\xbc\x44\xfe\x53\x9a\x71\xbe\x4e\x16\xb3\x29\xd8\x3a\x17\x78\x83\x0f\x18\xad\x04\x81\x34\x53\x5a\x16\xe4\x89\xc8\xc4\x5e\x47\xe8\xa3\xfd\x6e\xad\xa6\xd8\x78\x05\x6f\x5d\x9d\x5c\xf1\xc7\x79\x42\xe5\x1f\x05\x55\xc9\x62\xbb\x2d\xc9\xa3\x71\xfa\x84\x37\x64\xb7\x1b\x34\x3e\x6f\xac\x4d\xd8\x4f\xe4\xd1\xa6\xb1\x49\xcc\x12\xdc\xaa\x9b\x58\xff\x3e\x57\x04\xbd\x79\x83\x5a\xdf\xe7\x73\x34\xc1\x8c\x62\x39\x49\x16\xef\xf5\xfb\x6c\xaa\x7d\x43\x89\xb3\x29\x67\x1a\x32\x07\xa3\xcd\x4d\x84\xe0\xe2\x1f\x22\x25\x5e\x92\xa4\x81\x0a\x33\x22\x14\x32\xff\xd3\x02\x97\x4b\x22\xb4\x43\xce\x38\x5e\x27\x48\x70\x46\x9c\x89\xa9\x78\xbb\x8d\x63\xec\x76\x90\x07\x32\xe8\x44\xf7\x5c\x6c\x9a\x90\xe6\xb3\xfe\x97\xae\xb8\xa0\xdf\x78\xa9\x30\x6b\x62\xe9\xcb\x96\x33\x5d\x5a\xe4\x90\x2e\x05\xaf\x2b\xe3\xf6\x97\xfe\xe4\x81\x74\x50\xcd\x18\xce\x08\xd3\xf7\x01\xf1\xb2\xaa\x55\x30\x70\x7c\x99\x97\x8b\x98\x73\x96\xca\x4d\xfa\x0e\x01\xf3\x0a\x32\xa7\xc6\xbb\x4d\xad\xfb\xfc\x43\x50\x37\x64\x42\x2d\xae\x59\x4c\x36\x57\x77\xb4\x4e\x57\xd5\x4f\x6f\xa3\x92\x0d\xd8\xe6\xee\x76\xb2\xc2\x32\x35\x00\x4f\x6e\x90\x79\xff\x93\x12\x56\xc8\x6b\xea\x9b\xca\xaf\xa0\xcd\xac\x6b\xaa\x01\x20\x68\x80\xb1\xdf\x9f\x86\x3b\x17\xcf\x60\xda\xef\x53\x7d\x65\xc3\x0b\xc2\x02\x36\x3d\xcc\x11\x52\x00\xcf\x3c\x51\xe4\x49\x25\x2d\x4e\x1d\xfa\x1d\x6b\x5a\xf4\x28\x44\x15\xc3\x39\x59\x71\x56\x10\xe0\xb7\x62\x04\x4b\x82\x48\xa9\xa0\x1b\x31\x2a\xb5\xc5\xd4\xc1\xd9\x14\x1d\x3e\x8c\x69\x24\xcd\xdf\xc1\x46\x32\x06\x27\x34\x92\x71\x42\xda\x6b\x04\xdb\x1e\x64\x49\x18\xc9\xd5\x00\xa6\xed\xf4\x70\x9f\x57\x8a\xf2\x12\xa2\x28\xcb\xbe\x69\x40\x2c\x91\xba\xb6\xe5\xdb\x45\x66\xcf\x70\x21\xc7\x8a\x2c\xb9\x78\xd6\x4b\x42\x0a\xd1\x12\x79\x0f\xf9\x5e\x08\x9f\x1d\xf2\xdb\xa8\xe8\x01\xb3\x1a\xf8\x4a\x16\x69\x8a\xf2\x15\xe7\x80\xb5\x71\x31\x3c\xa2\x34\x05\xf5\x30\x86\xbe\xee\xa9\x2d\xfc\x20\x05\x7b\x26\xc8\xd6\x42\x36\x40\xb0\x22\xb2\x7f\xe5\x2e\x76\xf8\xea\x31\x18\x43\x68\x13\xa3\x4d\xec\x11\xe2\x8e\xd1\xf5\x6b\x7b\xc4\xe2\x31\xd2\x03\x01\x10\x87\x39\xd2\x45\xec\x76\x31\xc0\x0d\x10\x65\xce\xea\x82\x38\xbf\x7d\x6b\x9d\x06\x7c\xfd\x24\xee\x07\xd7\xce\xe5\x41\x81\x3a\x07\x81\xca\x60\x90\xd6\x30\x48\x64\xa2\x6f\x5f\x9c\x77\xf0\xff\xfe\x1d\x9d\x1f\x2a\xea\xd2\x33\x00\x29\x05\xa9\x08\x56\xf3\xe4\xc2\x37\xd4\x15\xaa\x2e\x75\x87\x35\x3e\x9f\xb1\xc0\x9b\xe6\x27\x73\xd4\x24\x3a\x8f\x96\x00\xfa\x3c\xeb\x2b\xf4\x60\xe2\x57\x6d\x83\x81\xb5\x83\x18\xd3\x18\x88\x0b\x5c\x3c\xe0\x32\x27\x85\x59\x62\xf3\xc5\x0a\xe8\xdd\x3a\x5a\xd7\x09\x92\x6b\x6b\xbd\xf3\x79\xbe\x42\xa0\x48\x82\x47\xf4\x1b\x0a\x71\xb4\x00\x9b\x6b\xf4\x1b\xb9\x58\x5f\x9a\xfd\x41\xe8\xc4\x63\xd2\x01\xf7\xb5\xbc\x62\xd8\xf8\x0c\xc8\xc7\x50\xa1\x1d\xd1\x35\x2f\xc1\x1f\xf5\xaa\xb7\x95\xb6\xff\x54\x6f\xfe\xa6\x25\xd1\xe8\x40\x13\x0f\x58\x0f\x29\x39\xcc\x4f\x53\xc7\xf8\xee\x3d\xd0\x13\xb7\xbc\x16\x39\x39\x24\xcf\x91\xc5\x09\xfa\x6c\xbd\x7e\x88\x40\x0f\x15\xd0\x56\x68\xe9\x2d\x46\x4b\x74\x70\x19\xaf\xd1\xd6\xe7\x55\x22\x7d\x94\x89\xd6\x8f\x7b\x3c\x79\x01\x05\x27\x3b\xd1\x05\xad\x3b\x25\x65\x93\xc3\x14\x9e\xba\x57\x73\x14\x6a\xb7\x53\x28\xf4\x1b\x99\x2e\x83\x2f\xd8\xb7\x84\xad\xca\xde\x10\xad\x8d\x4b\x56\xe7\x6b\xa2\xd2\xd7\x6d\x58\x6c\xaa\x8e\x4e\x9e\x4a\x85\xbe\xd3\x88\xe0\x61\x5a\x7a\x82\x3c\x96\x18\xeb\x78\xea\x66\xd7\x6b\x7d\x98\x80\xe8\x47\x65\x4f\x49\x63\x14\x5b\x46\xae\x77\x21\x78\x2c\xd8\xc3\x0a\x7a\xbb\xc7\xb1\x2f\x89\xc3\xf2\x19\xe7\x1a\xd0\xd1\xe3\xfb\xe1\xfd\xf4\xc2\x8f\x9c\x8c\x04\xb2\xab\xbd\xaf\x92\xdb\xff\xbf\xb3\xbe\x7c\xf9\xf8\xfb\x0b\xfa\x4a\xbb\xfd\x90\x81\xef\xe5\x3f\x7d\xe0\x07\x42\xb4\x06\xfe\xc2\x6a\x30\x66\xc8\x8d\x7e\x5d\xd3\xe2\xf2\xe5\xb3\xff\x99\xe1\x12\x3a\x71\xcf\xe0\x1f\xde\xf9\xd9\x47\xd3\x31\xf4\xb8\x2c\x27\x8e\xbd\xf6\x1a\x3f\xf4\x47\x86\x2e\x2a\x61\xcf\x58\x4d\x2a\x6f\x32\x19\x3d\x58\x81\xbf\x28\xc1\xcb\xe7\xa6\xc1\xf8\xb6\xce\x36\xfe\xd0\x66\x60\xbd\xfc\xfe\x5e\x02\xf9\x1a\xb2\xde\xfa\x4f\xdb\xbe\x37\xe7\x0b\x61\x3f\xd0\x6d\x6f\x4f\xae\x6b\xe6\x7c\x45\xf2\x75\xc6\x9f\xc2\x89\x4e\x9b\x7d\xfb\xba\x85\xf4\xbe\x2f\x10\x14\xab\x68\xb9\x94\x21\xcb\xd4\xa4\x89\xd2\x66\x62\xe8\xf1\x64\xe0\xbc\x6c\x1a\x17\x9b\xd5\x4a\x71\x7f\x0c\x97\xa9\x12\xc1\x5f\x9a\xeb\xac\xd0\x41\x1f\xcc\xfb\x6c\x6a\xad\x42\xf8\xb0\x95\x74\xfe\x46\xef\x69\xbe\x9e\x27\xcd\xf3\xf9\x45\x7c\xfa\x70\xd5\xc2\xed\xaa\xf3\x34\x72\xd5\x16\xae\xe8\xab\xf7\x0d\xc3\x7d\xd5\xfd\xd5\x31\x17\x42\xf3\xc0\x6f\x93\x20\x0f\x26\xba\x36\xbf\xec\xb6\xa1\xe5\x40\xda\xfe\xe8\xae\xbb\x20\xf7\xb8\x66\x2a\x06\xa8\x39\x6c\x1a\x3a\x0d\xb4\xaf\x0f\xd0\xa6\x8a\xb4\x8e\xa8\xcc\xe6\x2e\x3a\x69\xea\xc5\x19\x08\xf3\xa5\x2a\x4e\x08\xf3\xda\xb3\xaf\x36\xa7\xdd\xf9\x9a\x4d\xf5\x4c\xe9\x63\xc2\xe6\xb8\x50\xaa\x67\x46\x16\x67\xe6\xa4\xf0\x3a\x1a\xb8\xed\x99\x9e\x6b\x82\xc5\x0d\xca\xb8\x5a\xfd\x76\xb6\xeb\xdb\x40\x88\x70\x22\x66\x3c\x2a\x5c\x14\xd0\xce\xa9\xe2\xd5\x0d\xfa\xa5\x7a\x1a\x74\x73\x5b\x7b\x6d\xbf\xc1\x62\x49\xcb\xc3\xe6\x46\xe0\xa2\xc7\x40\xe3\xa8\x65\x24\x55\x02\x97\x52\x5b\xde\xa0\x1c\x57\x54\x61\xfd\x44\xe7\x63\x98\x39\xba\xf6\x93\x16\xa5\x83\x05\x29\x0e\x4e\x3f\xbf\x8d\x53\xb6\x25\xa6\x57\xde\x3b\x67\x0c\x70\x5b\xc8\xfe\x0b\x00\x00\xff\xff\xbc\x8a\x63\xc5\x1a\x17\x00\x00")

func staticx_partials_index_ft_new_html_bytes() ([]byte, error) {
	return bindata_read(
		_staticx_partials_index_ft_new_html,
		"staticx/partials/index/ft/new.html",
	)
}

func staticx_partials_index_ft_new_html() (*asset, error) {
	bytes, err := staticx_partials_index_ft_new_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "staticx/partials/index/ft/new.html", size: 5914, mode: os.FileMode(420), modTime: time.Unix(1447051018, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticx_partials_index_start_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x8f\x41\x4f\x03\x21\x10\x46\xef\xfc\x8a\x2f\x3d\xdb\xd6\x7a\x54\xe4\xee\xc5\x78\xf3\x0c\xec\x20\x24\x2c\x18\x18\xda\x6d\x8c\xff\x5d\x68\x76\x13\x7b\x22\xbc\xc9\x7b\x0c\x72\x0a\x67\xd8\xa8\x6b\x7d\xdd\x85\x34\xd1\xf2\x49\xd1\xe6\x99\x76\x4a\x00\xd2\x9f\xd4\x7a\x07\x67\x58\xe3\x58\x1e\x3b\x1b\xa3\xee\xa9\x01\x10\x2a\x34\x5c\x8b\x71\xcf\xb4\x30\x2a\x95\x33\x15\xb8\x5c\x60\x73\xb3\xde\xe8\x4a\x98\x34\xeb\x83\x3c\x0e\x67\x73\x3f\x22\xdd\x26\xe4\x42\x22\x5c\x73\xeb\x4e\x28\xb5\xf7\xc6\x16\xb8\x04\xf6\x60\x4f\x78\xa7\x0b\xde\x6e\xc8\x34\xe6\x9c\xb6\xcc\x7a\x08\x59\xf9\x1a\x49\x89\xc3\xff\xed\xe1\x4f\x0f\xb8\x27\xe3\x9f\x3f\xfd\xf1\x59\x97\xaf\x90\xf6\x26\xf7\xd8\xfc\x8c\xa7\xc7\xef\xe5\x45\xfc\xf6\xdc\xda\xf9\x0b\x00\x00\xff\xff\x3c\xde\xdc\xcd\x11\x01\x00\x00")

func staticx_partials_index_start_html_bytes() ([]byte, error) {
	return bindata_read(
		_staticx_partials_index_start_html,
		"staticx/partials/index/start.html",
	)
}

func staticx_partials_index_start_html() (*asset, error) {
	bytes, err := staticx_partials_index_start_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "staticx/partials/index/start.html", size: 273, mode: os.FileMode(420), modTime: time.Unix(1447042892, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"staticx/css/cbft.css":                staticx_css_cbft_css,
	"staticx/index-ft.html":               staticx_index_ft_html,
	"staticx/index.html":                  staticx_index_html,
	"staticx/js/debug.js":                 staticx_js_debug_js,
	"staticx/partials/debug-rows.html":    staticx_partials_debug_rows_html,
	"staticx/partials/debug.html":         staticx_partials_debug_html,
	"staticx/partials/index/ft/list.html": staticx_partials_index_ft_list_html,
	"staticx/partials/index/ft/new.html":  staticx_partials_index_ft_new_html,
	"staticx/partials/index/start.html":   staticx_partials_index_start_html,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func     func() (*asset, error)
	Children map[string]*_bintree_t
}

var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"staticx": &_bintree_t{nil, map[string]*_bintree_t{
		"css": &_bintree_t{nil, map[string]*_bintree_t{
			"cbft.css": &_bintree_t{staticx_css_cbft_css, map[string]*_bintree_t{}},
		}},
		"index-ft.html": &_bintree_t{staticx_index_ft_html, map[string]*_bintree_t{}},
		"index.html":    &_bintree_t{staticx_index_html, map[string]*_bintree_t{}},
		"js": &_bintree_t{nil, map[string]*_bintree_t{
			"debug.js": &_bintree_t{staticx_js_debug_js, map[string]*_bintree_t{}},
		}},
		"partials": &_bintree_t{nil, map[string]*_bintree_t{
			"debug-rows.html": &_bintree_t{staticx_partials_debug_rows_html, map[string]*_bintree_t{}},
			"debug.html":      &_bintree_t{staticx_partials_debug_html, map[string]*_bintree_t{}},
			"index": &_bintree_t{nil, map[string]*_bintree_t{
				"ft": &_bintree_t{nil, map[string]*_bintree_t{
					"list.html": &_bintree_t{staticx_partials_index_ft_list_html, map[string]*_bintree_t{}},
					"new.html":  &_bintree_t{staticx_partials_index_ft_new_html, map[string]*_bintree_t{}},
				}},
				"start.html": &_bintree_t{staticx_partials_index_start_html, map[string]*_bintree_t{}},
			}},
		}},
	}},
}}

// Restore an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, path.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// Restore assets under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	if err != nil { // File
		return RestoreAsset(dir, name)
	} else { // Dir
		for _, child := range children {
			err = RestoreAssets(dir, path.Join(name, child))
			if err != nil {
				return err
			}
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

func assetFS() *assetfs.AssetFS {
	for k := range _bintree.Children {
		return &assetfs.AssetFS{Asset: Asset, AssetDir: AssetDir, Prefix: k}
	}
	panic("unreachable")
}
