package cbft

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"github.com/elazarl/go-bindata-assetfs"
	"io"
	"io/ioutil"
	"os"
	"path"
	"path/filepath"
	"strings"
	"time"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindata_file_info struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindata_file_info) Name() string {
	return fi.name
}
func (fi bindata_file_info) Size() int64 {
	return fi.size
}
func (fi bindata_file_info) Mode() os.FileMode {
	return fi.mode
}
func (fi bindata_file_info) ModTime() time.Time {
	return fi.modTime
}
func (fi bindata_file_info) IsDir() bool {
	return false
}
func (fi bindata_file_info) Sys() interface{} {
	return nil
}

var _staticx_css_cbft_css = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x56\xcb\x6e\xdb\x3a\x10\xdd\xfb\x2b\x78\x91\xdd\x45\x64\x38\x7e\xc5\x96\x71\x03\xdc\x1a\x28\xb2\x09\xba\xe8\xb2\xe8\x82\x12\x87\xd6\xc0\x14\x49\x50\xf4\x2b\x45\xff\xbd\x94\x48\xdb\xb2\xfc\x88\xdc\x76\x65\x91\xf4\x9c\x39\x33\x73\x66\xc8\x6e\x22\x60\x0d\x6f\x8a\x51\x41\xba\x79\xf9\x13\x25\x8a\xed\x48\x97\x2b\x93\x47\x0b\xa3\x56\x9a\xfc\xe8\x10\xa2\x29\x63\x28\x17\xee\xd0\x5a\x95\xc7\xe4\xa9\xa7\xb7\xb3\xce\xcf\x4e\xa7\x8b\x92\xc1\xf6\x8d\x6a\xed\x8e\x49\x97\xca\xc5\x4a\x50\x13\xad\x30\xb2\x06\x20\xca\xa8\x64\x02\x2a\x08\x42\x12\x9a\x2e\x4b\x48\xc9\x62\xf2\xc0\x27\x9c\x72\x3e\xf3\x07\xca\x30\x30\x0e\x55\x6f\x49\xa1\x04\x32\xf2\xc0\x28\xf4\x81\xfa\xe3\x54\x09\xe5\x4e\x1f\x9e\xd3\x29\x24\x7d\xbf\x17\x08\x79\x26\x77\xd2\x89\x33\xb5\x06\x13\x48\xed\xc1\x87\x83\x09\x24\xd3\xd9\x05\xa2\x43\x3e\xe6\xcf\x75\xa2\xd1\xde\x86\xa5\x8e\xe4\xa4\x8d\x63\x2d\x68\x0a\x99\x12\xec\xe0\xf7\xd4\x47\x8f\x4f\x9b\xc9\xe8\xbb\xb8\x18\x2d\x32\x70\xd9\x48\x80\xf5\x59\xe2\xcf\xa3\x0d\x24\x4b\xb4\xae\x14\xdb\xa8\xc0\xf7\x2a\x09\x81\x97\xdb\x0a\xff\xc9\xd5\xfb\xcd\x3f\x5c\x3b\x3b\x8f\xa4\x5a\xcd\xa9\x4c\x41\xcc\x0d\x50\xeb\x8b\x99\x53\xb3\x40\x19\x59\xa5\x1d\xd1\x2a\xf9\x87\xbd\xbd\x44\x06\x57\x6a\x52\x40\x6a\x51\xc9\xc3\xc7\x2b\xd0\x7d\x56\xea\xa8\xd7\x4a\xda\x34\xff\x54\xca\xf5\xcc\x78\x74\x17\xa5\x7c\xff\x91\x58\x59\xc7\x32\xb8\xc8\xec\x75\x2a\x75\x33\x57\x66\x57\xab\x0b\xc6\xfd\x51\x5b\xe3\x9a\x2c\xf7\x02\xe3\x5e\x14\x47\xad\x1c\xa5\x37\x1d\x0d\x86\xfe\xb0\xa1\xc9\xe1\x80\x0f\xe8\x2d\x8f\x82\x26\x20\x2a\x37\x5c\x49\xeb\xe4\xe4\x89\x4a\xd7\xf1\x54\xd4\xb2\x26\x80\xb7\x09\x9e\x5a\x6b\x8a\x5b\x70\xd5\xb6\x13\x1b\xc4\x64\xaa\xed\x4d\xac\xf0\xf1\xea\xa7\x46\x05\x3d\x77\xd6\x46\x09\xef\x61\x8d\x05\x26\x28\xd0\xee\x62\x92\x21\x63\x20\xdb\xc3\x85\xf4\x9e\x80\x3e\x5e\x31\xed\x02\x43\x7b\x37\x23\x94\x19\x18\xbc\x1d\x21\x47\x10\x2c\xfc\xfc\xad\x30\xcf\x31\xef\x89\x35\x18\x1e\x43\x6e\xcf\xad\x4d\xc0\x8d\x04\x96\x5e\xfe\x77\x73\xe4\xe4\x56\xf1\x4a\xfb\xb0\x3b\x7d\x9c\x5e\xbe\x2f\xa4\xd0\xd4\x37\x2b\xc3\xc2\x8d\xd7\x8a\x8e\x40\x09\x51\x22\x54\xba\x2c\x85\x67\x61\x6b\x23\x2a\x70\x21\x63\x52\x75\x63\x25\x6e\xa7\xec\x0d\x32\x9b\xc5\x64\x02\x79\x5b\x7f\x31\x47\x53\xd8\x28\xcd\xd0\xed\xa0\xd4\x2b\xfb\xcd\xee\x34\xfc\x97\x66\x90\x2e\xdd\xe4\xfc\x5e\xef\x7c\x1f\xce\xf4\x26\xfa\x21\xdd\x2f\xe4\xdf\xc7\x66\x09\xdc\x5e\x85\x77\xf1\x1e\xba\x4e\xb8\xc6\xab\x0c\xdd\x73\x0a\xb1\xf6\x7b\x1f\x04\xab\x95\x5e\xe9\xb2\xd2\xd4\xe5\xd0\x4f\x21\xad\x0a\x2c\x47\xac\xcb\x1e\x08\x6a\x71\x0d\xb3\x7a\xba\x8f\x79\x2e\x47\x6e\xb8\x04\x7c\xec\x61\x51\x8a\x90\x0b\xb5\x89\xbd\x6a\x04\x7c\xcc\xa0\xe1\x98\x26\xee\x3d\xb0\xb2\xb7\x1c\x3f\x75\x47\x65\x68\x84\x84\x81\x1b\xf5\xfd\xf2\xc2\xa3\x62\x3c\x1e\xcf\x1a\x69\xdd\x64\xe8\xd1\x0f\x0f\x8a\x51\x78\x4f\x1c\x3e\x66\xd7\x47\x5b\x65\x1d\x39\x25\xa6\x50\x6e\x6f\x0c\xd5\xe5\xf6\x7b\x54\x85\x58\x0e\xcf\xde\xa5\x90\xd7\x08\x9b\x2f\x52\xec\x7c\x3b\xd0\x24\xbc\x90\xce\xdb\x9e\xfc\x83\xb9\x56\xc6\x52\x79\xb1\xc9\x0e\x38\xc9\xca\x5d\x70\xf2\xf7\x40\xb4\x51\x1a\x8c\x45\x28\xbe\x86\xab\xb5\x7d\x6b\xee\xbb\xf9\xb3\x9f\x40\x27\xcb\x79\x68\x0d\x28\x6a\x37\x4e\xb3\x86\x7f\x08\x79\x57\x27\xfe\x0a\x00\x00\xff\xff\x6d\x6a\xf3\x97\xec\x0a\x00\x00")

func staticx_css_cbft_css_bytes() ([]byte, error) {
	return bindata_read(
		_staticx_css_cbft_css,
		"staticx/css/cbft.css",
	)
}

func staticx_css_cbft_css() (*asset, error) {
	bytes, err := staticx_css_cbft_css_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "staticx/css/cbft.css", size: 2796, mode: os.FileMode(420), modTime: time.Unix(1446874443, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticx_index_ft_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x5a\x7b\x6f\xe3\xb8\x11\xff\x3f\x9f\x82\x2b\x2c\xce\x36\x36\x96\x6e\xef\x8a\xa2\x88\xed\x00\x7b\x9b\x5e\x9b\xb6\xb7\x1b\xf4\xb2\x2d\x8a\x20\x08\x68\x89\xb2\xb9\x4b\x3d\x96\xa4\xec\xf8\xee\xf2\xdd\x3b\x24\xf5\xa2\x44\x25\x72\x10\xa0\x3d\x2f\x10\x4b\xe4\xcc\x6f\x86\xf3\xe2\x4c\x36\xcb\x57\x17\x1f\xdf\x5f\xff\xe7\xea\xcf\x68\x2b\x13\x76\x7e\xb2\x54\x5f\x88\xe1\x74\xb3\xf2\x48\xea\xa9\x05\x82\xa3\xf3\x13\x84\x96\x09\x91\x18\x85\x5b\xcc\x05\x91\x2b\xaf\x90\xf1\xfc\x4f\x9e\xde\x58\x63\x41\xd0\x96\x93\x78\xe5\x05\xb0\xa2\x96\x24\x95\x8c\x9c\x87\xeb\x58\xa2\x00\xd1\x34\x22\xf7\xdf\x2d\x03\xb3\xa8\xf7\x19\x4d\xbf\x54\x2c\x42\x62\x49\xc3\x20\x14\x22\xc0\x79\xee\xc3\xb7\x87\x38\x61\x2b\x4f\xc8\x03\x23\x62\x4b\x88\xf4\x82\xf3\x47\xb8\x72\x4e\x45\xf2\x0c\xbe\x75\x96\x49\x21\x39\x7e\x8e\xcc\x08\x8b\xed\x3a\xc3\x3c\x7a\x06\x2f\xa7\xe1\x17\xb1\xc5\x7b\x3f\xa1\xe9\x20\xfb\x00\x3f\xa3\xeb\x00\x9c\x53\x30\xcc\xe7\x05\x9d\x4b\x4e\x48\x10\x51\x21\xbb\x8b\xe3\xb0\xbb\x7b\xb6\xb0\x7b\xad\xad\x72\xa2\x46\xea\x33\x6e\x33\x2e\xc3\x42\x22\x1a\x66\x69\x87\x37\x88\xf1\x4e\x2d\xfb\xf0\x43\x71\x2e\x03\x13\x47\xcb\x75\x16\x1d\x50\xba\x99\x83\xab\x57\x5e\xb8\xde\xc8\x77\x79\x6e\xc2\x28\xa2\x3b\x14\x32\x2c\x04\xac\x67\xa9\xc4\x34\x25\x5c\xef\xd8\x7b\x3c\xdb\x97\xab\x5d\x1e\x36\x17\xc9\xfc\xed\xb7\xa8\x7c\xca\xe2\x18\x22\x75\xfe\x16\x25\x00\x55\xb3\x94\x4c\xa0\xc1\x8e\x92\xfd\xf9\x12\xac\xb7\xab\xe1\x9a\x97\xfa\xb1\x7c\x58\x06\x4a\x71\x63\x01\x11\x72\x9a\x4b\x24\x78\x68\xfb\xe5\xf3\xd7\x82\xf0\x43\xf9\x35\xff\xce\x7f\x0b\xff\x3e\x0b\x0f\x64\x18\x8e\xf3\xf1\xcc\x05\xd5\x0e\x1c\xcd\x1d\x7d\xef\xef\xbe\x1f\x4f\x6e\x45\xe0\x68\xae\x6d\x91\xe0\x94\xfe\x42\x8e\xe3\xaa\xb3\xac\x95\x6f\xa3\x99\xcb\xa8\xae\xbe\x8f\x66\x9c\x37\xd2\x21\x31\x1a\x05\x8e\x3a\xc1\xe3\x58\x73\x99\x33\xf1\x3c\x40\x9e\x15\x92\xd8\x6f\xcf\x03\x7a\xb2\x12\x8c\x0f\x43\x91\xa5\x79\x46\x53\x49\x8e\x30\xb6\x29\xc0\x36\xf9\x10\xfd\x67\x11\x90\xfb\x7c\x37\xd6\x97\x40\xae\xaf\x8f\xd1\xd4\x69\x16\x91\xd1\xc4\x49\x96\x52\x99\x8d\x57\x05\xe2\x1f\x6f\xc6\xc3\xb3\x6c\x23\x46\x13\xeb\xc4\x1f\x4d\xbd\xfe\xe3\x1f\xc6\x1b\x3c\xa6\x0c\xfc\x39\x5e\x15\x41\x38\x14\x6f\x32\x9e\x21\xa2\x9c\x84\x92\xee\x7a\x2c\x03\x3c\xf3\x35\x23\x3b\x32\x4f\xe0\x12\xa0\xe9\xc6\x58\xd6\x3c\x6a\x67\x57\x1b\xa3\xe4\x0f\x63\xc9\x43\x4e\x06\xa0\x8e\xc6\x02\xc7\xb3\x83\xa0\xe3\x4c\xf2\x34\xcc\x5c\x3f\xfc\x32\x32\xc9\x46\xe0\xed\x33\x1e\x31\xc8\xfe\x97\xc2\x53\x7d\x9e\x09\x9b\x97\x42\x94\xd9\x17\xa2\x6e\x8f\x97\x05\x74\xea\x38\x80\x79\xaf\x43\x95\xac\x8b\x91\xd1\xa0\xc8\x55\x47\x3a\x36\x0b\x54\xd7\xc2\x33\xc6\xfa\xa9\x76\xb2\xac\x9e\xe2\x22\x85\x44\xc9\x52\xa4\xcf\xf7\x81\xec\x2f\x55\xc0\xff\x64\xce\x36\x9d\xa1\x5f\x75\xf7\xc1\x89\x2c\x78\x5a\xbe\xa8\x8f\xa7\x62\x59\x78\x67\xe8\xd7\x87\xd3\x66\x31\x22\x31\x2e\x98\xbc\x2b\x4d\xa3\xb6\xeb\x4d\x4d\x40\x52\x0c\x72\x22\xd8\x90\xbc\x20\xa7\xf6\x66\x74\x48\x71\x42\xc3\x72\xb3\xde\x6b\x0b\x50\x52\xef\x62\x4a\x98\x82\xf0\xee\xd4\xab\xe7\x90\xaf\xd7\x15\x41\xb9\xe0\xa2\xa9\x02\x5e\xd1\x81\xc9\xd2\x08\x7a\x67\x17\x5d\x84\x25\x91\x34\x21\x77\xb9\x1a\x34\x34\xb9\x5a\xba\x86\xa5\x8f\xb9\xb2\x1c\x66\x2e\xb6\x46\x49\xcc\x2c\x82\xf5\x41\x92\x3b\xcc\x39\x3e\xdc\x81\x7f\x76\x84\x4b\x03\xaa\x2e\xba\x36\x5d\x15\x56\x7d\x23\x56\x9a\x77\xcd\xaf\x37\x55\x9e\xdc\x95\xf5\xd5\xb5\x5f\x47\xfd\xf0\xee\x93\xec\xca\xbf\x66\xb7\x71\xd2\x89\xf9\xf9\xb0\x38\xe9\x84\xd4\x95\x0e\xa8\x4b\xb8\xd7\xde\xd7\xe1\x38\xa5\xf0\xfa\x77\x28\xad\xa7\x66\x16\xbb\xc2\x1c\x27\xa2\x7c\xf9\x74\x69\x64\xbe\x16\x61\x96\x93\x53\xf4\x7a\x2b\x65\x0e\x5f\xba\x1d\xa9\xbe\x2b\x8e\xd7\x2c\x0b\xb1\x12\xa6\x1f\x37\xa7\x8a\x4b\x11\x15\x74\xfd\x53\x16\x61\x56\x05\x30\x8d\x51\x2d\x14\xad\x56\xc8\x53\xcd\xb6\x37\x6b\x99\xd6\x88\xf3\xd5\xfa\xc7\x94\x1d\xd0\x4a\x47\xe1\xa2\x3c\x57\x4b\x23\x5f\x6b\x79\x4d\x92\x9c\x41\x1c\x08\x20\x74\xaf\xff\xf6\x1b\x18\x68\x31\xcc\x78\xe3\xc5\x05\x03\x43\xdf\xcb\xb9\xde\xf0\x6e\xd1\xaa\x71\xbf\xbb\xec\x40\x0c\x4a\x8a\xd9\xd0\xf5\xa4\x66\x65\x6f\x61\x94\x85\x8e\x06\x95\xeb\xa0\xa2\x3b\xbb\x17\x2d\xdb\xd4\x6e\x40\xdf\x7c\x53\xab\xd1\x5a\xf6\x4b\xb0\xb6\xcd\x1a\x7c\x07\xa1\x65\x3a\xa5\x0d\x4d\x42\x4d\x49\xe5\x0f\x4a\x9b\xb6\x2a\xad\xd0\xe8\x38\xa4\xf1\xbf\x71\x6f\xe5\xd8\xd3\x4a\x78\x13\xa0\x76\x9a\x54\x59\xf2\x01\x27\x44\x9c\xa1\x14\x6c\x6d\xc7\xb2\xce\x62\x28\x14\x57\x3a\xaf\x07\xc9\x54\xbe\xbe\x53\xe9\xfa\xbe\xca\x56\x27\xe9\xc3\x6c\x61\x05\xc9\xba\x7b\x44\x38\x7a\x95\x18\xd3\xb6\x0d\xcb\xd2\x0a\xc6\x31\xf1\xd1\x71\x0e\xa4\x94\x3b\xa3\x2e\xb2\x94\xb4\xcc\x16\xc1\xeb\xff\x20\xa3\x6a\x51\xed\x23\x39\x82\xa1\xc9\x92\x9e\x61\xac\x93\x56\x73\x55\x92\x45\x05\x23\xd3\x49\x39\x90\x4f\x66\xbe\xa6\x69\x6e\xb4\xe9\x44\x07\xd1\xbb\xd2\xcb\x5a\xb5\xf7\x92\xb3\xc9\x29\x72\x6f\x0c\x21\xbc\x87\x82\xf9\xa3\x2e\x78\x3d\x0c\xc7\xd6\x10\xca\x75\x55\x56\x7b\x20\xfd\x9d\x47\x31\x06\x54\x71\xed\x0d\xe1\xfc\x1b\x5a\xaf\x7f\x40\xeb\xd5\x03\xe9\x6d\xa8\x98\x7d\xda\xe2\x31\xdd\x4c\x6f\x26\x65\x94\xf0\x6c\x47\x23\xc2\x27\x4d\xe4\xd7\x51\x6d\x53\xcc\x3a\xf9\x68\xef\xfa\xfb\x2d\x49\xa7\x13\xd3\xfd\x04\x13\x3b\xe5\x74\x32\xcb\xb2\x4e\x7e\xe2\xec\x0c\x4d\xea\x8e\xa9\xae\x80\xa6\x6f\x52\x15\xcf\xc1\xdd\x32\x0a\x30\x5f\x28\x52\x6d\x88\x87\x32\xd6\x74\xbc\xdd\xc2\x4b\xbb\x25\x7a\x35\x9f\xa3\xf9\x4b\x7c\x00\xa5\xdd\x62\x1d\x11\xd3\x3a\x2f\x88\x50\xba\xfe\x78\x0d\x6e\xb3\xde\x87\xe8\xa1\xac\xdb\x0c\xf5\x82\xf2\x6f\x10\x1c\x79\xa8\x56\xb9\xb1\xc4\x4f\x9d\xe5\xa3\x2c\x1b\x7d\x0f\x94\x5e\x6f\x97\x90\xaa\xb2\x54\xa1\x51\x56\x04\x41\x30\x0f\xb7\x3f\x60\xfe\xcf\x22\x6d\x57\x49\x5d\x46\x54\xb1\x3d\x45\x5f\xad\x9b\xba\xc2\xf1\x73\x2c\xb7\x53\xcf\x5c\x82\x44\x04\x1e\x7a\x83\x6a\x26\x78\xf6\xcc\x0c\xeb\xcd\x4a\x11\x53\xef\xab\xa7\xb0\xac\x9b\xa9\xac\xbf\xad\xa3\xbe\xe0\x41\x17\x56\xf5\xb6\x9d\xe3\x16\xe3\x12\x37\xb6\x24\xb7\xdb\x8c\x0b\x12\xab\xd6\x44\x5d\x52\xd5\xc5\xa4\xc4\xf8\x1b\x22\x21\xed\x70\x4e\x8d\xd5\xaa\x20\x14\x45\x08\xf3\xb5\x98\xd6\xc6\x87\xdb\x11\xb7\x8d\xae\x2f\xf0\x16\x70\x5f\x56\xf7\x72\xc5\xd0\x48\xe8\xef\x16\x51\x6f\xa5\x79\x2a\xb5\xac\x64\x65\x9c\x6e\x2e\xcb\xbd\xaa\xbf\xa8\x20\xea\x97\x9b\xb6\xad\xfc\xda\xf5\xb7\x1d\x2c\x2a\xde\x31\x8a\xbb\x2a\x4e\xfb\xcc\xaa\x1d\x50\xdd\xe1\xa4\xee\xcc\xb0\x62\x9c\xcc\xa0\x99\xb3\x79\x2d\xf5\x40\xa5\xf6\xbb\x2f\x87\x60\x9a\xe2\xa3\x6f\x4f\xa3\x56\xb7\x50\x42\xc2\x5e\x6f\x09\xd2\x2c\xd7\x98\x83\xc3\x04\xda\x53\xc6\xd0\x9a\x20\x09\x1b\x45\xaa\x62\x29\x8b\x51\x58\x70\x4e\x52\x09\xbd\x2a\xde\x61\xca\xd4\x64\xd5\x05\x2a\x33\x03\x4d\x61\xbe\x31\x88\x04\xe4\xa9\x17\x85\x44\xee\xe1\x32\x50\x97\xb3\x2c\xc5\x00\xa8\xac\x44\xfb\x5d\xac\x0f\x99\x54\x0a\x60\xd9\xe7\x4b\xf0\x01\x6d\xf1\x8e\x80\x8a\x24\x45\x11\x61\x44\x12\xe8\x44\xd6\x85\x44\xfb\x9e\x4e\x7b\x62\x8e\x03\x10\xf0\x33\x8b\x63\xc2\x95\xd4\x04\x81\x87\x32\x3d\x51\x75\x64\x97\xa1\x66\x19\x64\x85\x6e\x6e\x17\x16\x55\x9c\x71\x34\xad\xa3\x54\x57\x00\x9a\x36\xa1\xd2\xb5\xf2\x00\xb0\x9f\x17\x62\xdb\x54\x9e\x99\x2d\xe3\xe1\xc4\xa5\x98\x80\xf3\x86\x70\x60\x03\x51\x16\x12\x87\x86\xca\xe7\xed\x38\x71\xa9\x54\x85\x7e\x73\xce\xe9\xdf\x7e\xfe\xf8\xc1\xd7\xc3\xa7\xc5\xad\x96\x74\xdf\xa5\xe7\x8c\x99\x5f\xfa\x62\xd1\x83\xac\x0d\xd3\xe0\x2a\xcb\xb4\xa4\xb8\x14\xa9\x14\x7e\xd5\x24\x5b\xc3\x71\x3b\xc4\xf1\xa8\x55\x1b\xfe\x59\x5f\x4b\x87\x79\xc7\x98\x79\x04\xf2\xc3\x08\x17\xe6\x85\x01\x74\xd5\x09\x6d\xc3\xaa\x2c\xa6\xe5\x08\xa5\xaf\xa5\x41\x13\xa0\x8a\x4c\x15\x94\xd3\xfa\xed\x89\x2b\x44\xb3\xfd\x9c\x15\x3c\x24\x35\x9f\x79\x7d\x5a\x9a\xa1\xfb\xf4\xe9\xf2\xa2\xc5\x36\x46\xde\x15\xc3\x69\xd5\xfa\xe7\x9c\xec\xb4\xa2\x1a\x67\x98\xcd\xe9\x89\xa1\x90\x50\x91\xd7\x49\x5d\x35\x16\x3b\x69\x9b\x1c\x06\xaa\x6f\x17\xf0\xb5\x74\x0b\xf3\x19\x49\x37\x72\x0b\x14\x6f\xde\x3c\x16\x8b\x0a\xcb\x01\x00\xe8\x4e\xd8\x1b\x7a\x3b\xa0\x99\xfa\xb4\x4f\x71\xe3\xe0\xbf\x7d\xec\x68\x95\x36\xb2\xa1\x37\x37\x5b\xf7\x22\x75\x22\xbb\xf3\x45\x7d\x54\x8e\xda\x98\x8f\xd9\x63\xd4\x31\x8c\x2e\x2a\x06\x1c\x99\xd0\xfd\xd8\xb2\xfd\xa2\xa0\xd1\xb0\xb2\x0f\xc7\xa4\xbd\x9d\x35\xad\xdf\x96\xe8\x03\x78\xda\xda\x83\x92\xbc\xb2\x1c\x7a\x67\x48\xd7\x4f\x21\x39\x5c\x58\x34\x3e\x4c\xdb\xc7\x9f\xb9\xf5\x19\x70\x61\xa7\x56\x8c\xad\x05\x8e\x23\x1d\x59\x16\x6c\x84\xe7\x54\x08\x17\xc2\xb1\xc5\xc2\xc6\x18\xac\x1b\xae\x0a\xdc\x1a\xba\x1a\xd3\xb6\xbb\xe1\xf1\xbd\x70\xef\xf3\x64\x73\x5c\x76\xfb\xa6\x17\x7f\x6c\x16\x1b\x1c\x75\xd1\xa4\x16\xd2\x9e\x7f\x07\x06\xdf\x56\xff\x6f\xcf\xc2\xee\x09\xb8\x1a\x5e\x5c\x53\xac\xfe\x3c\x39\x09\x6b\x84\x20\x96\x81\xfe\xff\x96\xa1\x89\xd8\x7c\xac\xb9\xd8\x9e\x36\xcd\x6c\xfc\xb8\x92\x77\xe0\xf9\x17\x50\x14\x50\x8e\xd6\xb3\x99\x72\xc7\x28\x7a\x56\xb7\x70\xc1\x1d\x89\xa8\xfc\xdd\x29\x1d\xb2\x2c\x25\xff\x17\x5a\xf7\x7e\x4f\xa2\xff\x3e\xe7\xfc\xc4\x87\xdb\x3a\xf9\x0b\x1c\x28\xaf\x6b\x9a\x0e\xf3\x88\x0a\x50\xed\x70\x86\x52\x38\x81\x4e\xba\x86\xb2\xa9\x5d\x83\xa4\xd6\xef\xc4\x91\xf5\x3b\x51\x04\x3d\xa0\x99\xa4\xab\x87\xbf\x12\x0c\x76\x44\x30\xfb\x10\xa6\x11\x61\x26\x12\x19\x1c\xa4\xfc\x93\x01\x83\xa9\x31\xfe\x45\xc9\x1e\x4c\x3e\x12\xbf\xf3\x37\x0b\xf3\x2d\xcc\x4c\x8c\x58\x22\x70\x21\x33\x85\x0f\xa6\x31\x06\x59\x06\xe6\x4f\xd6\xfe\x1b\x00\x00\xff\xff\xbb\x9b\x86\xd9\xc3\x26\x00\x00")

func staticx_index_ft_html_bytes() ([]byte, error) {
	return bindata_read(
		_staticx_index_ft_html,
		"staticx/index-ft.html",
	)
}

func staticx_index_ft_html() (*asset, error) {
	bytes, err := staticx_index_ft_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "staticx/index-ft.html", size: 9923, mode: os.FileMode(420), modTime: time.Unix(1447479019, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticx_index_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x19\x69\x6f\xdb\x38\xf6\x7b\x7e\x05\x57\x5b\xd4\x09\x60\x59\xdb\xed\x62\x31\x48\xec\x00\x99\x64\x8e\x62\x7a\xe4\x43\x8a\xc1\xa0\x28\x02\x4a\xa4\x64\xb6\x14\xa9\x21\x29\x27\x6e\x9b\xff\x3e\x8f\xd4\x61\x9d\x89\x9c\x69\x30\x2e\x10\x51\x7c\x27\xdf\x4d\x75\xf9\xaf\x8b\x77\xe7\x57\x7f\x5c\xfe\x84\xd6\x26\xe5\xa7\x07\x4b\xfb\x40\x1c\x8b\x64\xe5\x51\xe1\xd9\x0d\x8a\xc9\xe9\x01\x42\xcb\x94\x1a\x8c\xa2\x35\x56\x9a\x9a\x95\x97\x9b\xd8\xff\xc1\x73\x80\x10\x6b\x8a\xd6\x8a\xc6\x2b\x2f\x80\x1d\xbb\x65\x98\xe1\xf4\x34\x0a\x63\xb3\x0c\x8a\xb5\xdb\xe6\x4c\x7c\xae\x30\xb5\xc1\x86\x45\x41\xa4\x75\x80\xb3\x6c\x01\x4f\x0f\x29\xca\x57\x9e\x36\x5b\x4e\xf5\x9a\x52\xe3\x05\xa7\xf7\x50\x65\x8a\xe9\xf4\x11\x74\xa1\x94\x46\x1b\x85\x1f\x23\x93\x60\xbd\x0e\x25\x56\xe4\x11\xb4\x8a\x45\x9f\xf5\x1a\xdf\x2c\x52\x26\x46\xc9\x47\xe8\x39\x0b\x03\xf0\x49\xce\xb1\xf2\x73\xe6\x1b\x45\x69\x40\x98\x36\xdd\xcd\x69\xbc\xbb\xb0\xb6\xb0\x5b\xa7\xad\xf5\x9d\xe3\xd4\x27\x5c\x4b\x65\xa2\xdc\x20\x16\x49\xd1\xa1\x0d\x62\xbc\xb1\xdb\x0b\xf8\x63\x29\x97\x41\x11\x3e\xcb\x50\x92\x2d\x12\x89\x0f\xae\x5e\x79\x51\x98\x98\xb3\x2c\x2b\xa2\x87\xb0\x0d\x8a\x38\xd6\x1a\xf6\xa5\x30\x98\x09\xaa\x1c\xa4\x0d\x13\x78\x13\x62\x85\x8a\x87\xcf\xc4\x86\x42\x1c\x56\xaf\x31\xbb\xa5\xc4\x37\x32\x83\x73\x4b\x4e\x1d\x36\x4b\x40\x21\x29\x4a\x56\xf7\x0b\x1a\x16\xe6\x5b\xdd\x5b\x38\x80\x85\x2b\x1c\x09\x1a\x30\x42\xfd\x50\x61\x41\xbc\x46\xfc\xa3\xc6\x6f\xc9\xd2\xa4\x22\xe0\x32\x91\x1e\xd2\x2a\xda\x59\x0b\xa0\x60\xe8\x45\x26\x92\x22\x74\x6a\xb2\x00\x37\x14\x03\x4f\x6f\x1a\xaf\x39\x6f\xa8\x59\x59\x00\x1e\x6d\x3d\x39\x3b\x05\x5d\x4b\xad\x98\x20\xf4\x96\x6a\xd0\xee\x55\xb1\xb2\x02\x96\x10\x55\x4d\x29\x39\xff\x7b\x42\x84\x24\x4e\xc4\x5b\xfb\x7c\x0a\x01\xa9\x14\xcc\x48\x05\x22\xde\x14\xab\x27\x11\x82\x05\x4e\xa8\x95\xe1\x16\x4f\x21\x02\x02\xc1\xda\xe9\x35\x3c\x1e\xcd\xbe\x5a\x2a\x96\xac\x4d\x57\x56\x45\x42\x94\xcc\x88\xbc\x11\xdd\xa0\xc4\x5d\x04\x48\x9d\x24\xe1\xd4\x43\x04\x1b\x5c\xbe\x34\xc8\x5b\xd4\xf0\x2b\xce\xf1\xef\x2a\xd9\xc2\xdc\x18\x5b\x09\xb0\x62\xd8\xa7\xb7\x19\xe4\x03\x25\x2b\x2f\xc6\x5c\xd3\x8e\x68\xf8\xfd\x4a\x79\x86\x96\x1a\xb0\xea\x6c\xc4\x0a\x8a\x10\xd8\xc1\x6e\x76\x54\x6d\x26\x42\xc7\x20\xb5\xf2\x29\x15\x79\xa5\x8b\x5b\x77\x65\xb6\xcc\xbf\x36\x26\x3b\x0e\x02\x8e\x43\xbd\x88\x64\x1e\xad\x6d\xfb\x82\x55\xea\x4a\x5e\x37\x81\xeb\xdf\x2f\xd4\x18\x26\x12\x04\x99\xab\x0c\x25\x3d\xc5\xac\xae\x4d\x3f\xee\x2f\x99\xd0\x8d\x9f\xe4\x50\x52\x02\x5b\x5a\x36\x8c\xde\x8c\xe9\x72\x41\x37\x94\xcb\x8c\xaa\x99\x46\x8e\xe2\x09\xb4\xc1\x04\x5a\xc9\x44\x7d\xce\x2c\x2e\xb3\x3d\x15\x92\x72\x7f\x9d\x6a\x87\xb2\x0d\x73\xf5\x76\xaa\xee\xb1\x54\x79\xda\xd5\x7e\x4c\xc9\xf3\x0a\x0b\x01\x56\x9a\x43\x01\xd9\xa2\x82\xc1\x24\x4d\xdb\x79\xd9\xc5\x68\x42\x1b\xf5\xba\x5c\xf6\x9a\x99\x92\x37\x23\x7d\x89\xfb\x3a\xf5\x5f\xfc\x07\x95\x2b\x19\xc7\x30\x6d\xf9\x2f\x50\x0a\xed\xaa\xdb\xac\xa0\x9d\x5a\xaf\x9c\xb6\x1a\x44\x5f\x7a\xbd\x58\x06\xb6\x0b\x17\xed\x5c\x47\x8a\x65\xa6\xdd\x8d\xec\x90\xf1\xe9\xcf\x9c\xaa\x6d\xf9\xf0\xff\xbb\x78\x01\xff\x3e\x69\x97\x9c\x8e\xe2\x74\x3a\x71\xce\xdc\x34\x32\x99\x9a\xbc\x5c\x6c\x5e\x4e\x47\x6f\x8d\x53\x93\xa9\xd6\x39\x14\x78\xf6\x85\xee\x47\x55\x8f\x8c\x8d\xe1\x71\x32\x71\x39\xa2\x55\xcf\xbd\x09\xfd\x9d\x74\x98\xf2\x76\x0a\xec\x75\x82\xfb\x79\xf9\x26\xe3\xfa\x71\x0c\x95\xcc\x0d\x6d\xbf\x3d\x8e\xd1\x83\x63\xed\xf4\x30\xd4\x52\x64\x92\x09\x43\xf7\x30\x76\x71\x9b\x68\xa3\x8f\xe1\x7f\xd2\x01\xb4\xb9\xcd\x54\x5f\x02\xba\x1b\xc0\x26\x63\xdb\x49\x6a\x32\x72\x39\x15\x4d\xc7\x77\x73\xcd\x64\x74\x3b\xac\x4c\x46\x76\x89\x3f\x19\x3b\xfc\xff\xff\xa6\x1b\x3c\x66\x1c\xfc\x39\x5d\x15\x6d\x5b\x56\x44\xa7\x13\x10\xa6\x68\x64\xd8\xa6\x47\x32\x42\xe3\x87\x1c\xda\xb0\x9f\xc2\x8d\x06\xe6\x82\xc2\xb2\xc5\xd2\x39\xbb\x02\x4c\x92\x3f\xce\xcb\x6c\x33\x3a\xc2\x6a\x6f\x5e\xe0\x78\xbe\xd5\x6c\x9a\x49\x1e\x66\xe3\xbb\xc5\x97\x89\x49\x36\x81\xdf\x8d\x54\x84\x43\xf6\x7f\x2f\x7e\xf6\x5b\x45\x11\x36\xdf\x8b\xa3\x91\x9f\xa9\xed\x1e\xdf\x97\xe1\xa0\x8e\x23\x3c\x6f\x5d\xa8\xd2\x30\x9f\x18\x0d\x16\xdd\x7e\x5e\x99\x9a\x05\xf6\x66\x0c\x93\x34\xef\xa7\xda\xc1\xb2\x5a\xc5\xb9\x88\xec\xd5\x1a\xb9\xf3\xbd\xa5\x37\xee\x52\xf9\xa6\x38\xdb\xe1\x11\xfa\xea\xa6\x0f\x98\xe9\x73\x25\xca\x17\xfb\xf3\x6c\x2c\x6b\xef\x18\x7d\xbd\x9b\xef\x36\x09\x8d\x71\xce\xcd\x75\x69\x1a\x0b\x6e\xcd\x5d\x1e\x15\x18\xe4\x10\x00\x18\x95\xd3\x79\x1b\x48\xb6\x02\xa7\x2c\x2a\x81\x35\xac\x29\xc0\x4a\xbd\x8e\x19\xe5\x96\x85\x77\x6d\x5f\xbd\x01\xf9\x6e\xdf\x22\x94\x1b\x43\x38\x55\xc0\x5b\x3c\x30\x99\x20\x58\x91\x21\x3c\xb8\x45\x51\xc3\x52\x7a\x9d\xd9\x8f\x65\x0e\xdd\x6e\x5d\xc1\xd6\xbb\xcc\x5a\x0e\xf3\x21\xb2\x9d\x92\x98\xb7\x10\xc2\xad\xa1\xd7\x58\x29\xbc\xbd\x06\xff\xc0\x30\x6e\x0a\xa6\xb6\xd1\x35\xf1\xaa\xb0\xea\x1b\xb1\xd2\xbc\x6b\x7e\x07\xb4\x79\x72\x5d\xd6\xd7\x21\x78\x1d\xf5\xe3\xd0\x07\xc9\xad\x7f\x0b\xe8\xce\x49\x07\xc5\xdf\xbb\x93\x83\x4e\x48\x5d\xba\x80\x7a\x05\x7d\xed\xbc\x0e\xc7\x43\xb8\x61\x98\xdf\xa0\xb4\xce\x91\xab\xaf\x97\x58\xe1\x54\x97\x2f\xef\x5f\x15\x32\x9f\xe9\x08\xae\x45\x73\xf4\xcc\x5e\x10\xe0\xe1\xc6\x91\xea\x59\x51\x3c\xe3\x32\x72\x9f\x86\xdc\x32\x99\x5b\x2a\x8b\x94\xb3\xf0\x8d\x24\x98\x57\x01\xcc\x62\x54\x0b\x45\xab\x15\xf2\xdc\x15\xe8\xa8\x61\xda\x42\xdc\xc2\xee\xbf\x13\x7c\x8b\x56\x2e\x0a\x4f\xca\x73\x35\x34\x5a\x38\x2d\xaf\x68\x9a\x71\x88\x03\x0d\x88\xc3\xfb\xdf\xbe\x81\x81\x4e\xc6\x09\x3f\x78\x71\xce\xc1\xd0\xb7\xc6\x77\x00\xef\x23\x5a\xed\xdc\x3f\x5c\x76\x20\x06\x0d\x83\xab\xf8\x48\x7b\xb2\xdf\x7b\xbd\x93\x42\x59\x98\x68\x50\xb9\x0f\x2a\x0e\x67\xf7\x49\xc3\x36\xb5\x1b\xd0\xf3\xe7\xb5\x1a\x8d\xed\x45\xc9\xac\x69\xb3\x1d\xff\x01\xc4\x96\xe9\xac\x36\x2c\x8d\x1c\x26\x33\x3f\x5a\x6d\x9a\xaa\x34\x42\xa3\xe3\x90\x9d\xff\x0b\xf7\x56\x8e\x9d\x57\xc2\x77\x01\xda\x4e\x93\x2a\x4b\xde\xe2\x94\xea\x63\x24\xc0\xd6\xed\x58\x76\x59\x0c\x85\xe2\xd2\xe5\xf5\x28\x9a\xcd\xd7\x33\x9b\xae\xe7\x55\xb6\x0e\xa2\xde\x1d\x9d\xb4\x82\x24\xec\x1e\x11\x8e\x5e\x25\xc6\x61\xd3\x86\x65\x69\x05\xe3\x14\xf1\xd1\x71\x0e\xa4\xd4\x70\x46\x5d\x48\x41\x1b\x66\x23\xf0\xfa\x0f\x64\x54\x2d\xaa\x79\xa4\x81\x60\xd8\x65\x49\xcf\x30\xad\x93\x56\xf7\xaa\x54\x92\x9c\xd3\xc3\x59\xf9\x75\x79\x76\xb4\x70\x38\xbb\x8e\x76\x38\x73\x41\x74\x56\x7a\xd9\xa9\x76\x6e\x14\x9f\xcd\xd1\x30\x60\x8c\xc3\x39\x14\xcc\x9f\x5d\xc1\xeb\xf1\x18\x00\x8d\x71\xb9\xaa\xca\x6a\x8f\x49\x1f\x72\x2f\x8f\x11\x55\x86\x60\x63\x7c\x7e\x87\xd1\xeb\x35\x8c\x5e\x3d\x26\x3d\x80\x8d\xd9\x87\x2d\x1e\xb3\xe4\xf0\xc3\xac\x8c\x12\x25\xdd\x77\x9d\xd9\x2e\xf2\xeb\xa8\x6e\x63\x1c\x75\xf2\xb1\x0d\x5d\xdc\xac\xa9\x38\x9c\x15\xd3\x4f\x30\x9b\xf7\x3e\xf3\x7c\x35\x65\x9d\x7c\xaf\xf8\x31\x9a\xd5\x13\x53\x5d\x01\x8b\xb9\xc9\x56\xbc\x01\xea\x86\x51\x80\xf8\xc2\xa2\x3a\x43\xdc\x95\xb1\xe6\xe2\xed\x23\xbc\xec\x46\xa2\x65\x50\xfc\xa7\xd9\x5f\x01\x00\x00\xff\xff\x30\xc2\x82\x33\x45\x1b\x00\x00")

func staticx_index_html_bytes() ([]byte, error) {
	return bindata_read(
		_staticx_index_html,
		"staticx/index.html",
	)
}

func staticx_index_html() (*asset, error) {
	bytes, err := staticx_index_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "staticx/index.html", size: 6981, mode: os.FileMode(420), modTime: time.Unix(1447362458, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticx_js_debug_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x54\x4d\x6f\x9c\x30\x10\xbd\xe7\x57\x58\x51\x24\x58\x25\x85\x1e\xaa\x5e\xa2\x56\xaa\xb2\xaa\x14\xf5\x43\x55\xd4\xee\xa5\xea\xc1\x0b\xb3\xc4\x8a\xb1\x91\x6d\x48\xa2\x8a\xff\xde\x01\x37\x8b\xed\x65\x81\xee\xa1\xb9\x64\x61\xde\xcc\xbc\xf7\x66\x86\x5d\x2d\x32\xc3\xa4\x20\x6b\xd8\xd6\xc5\x8d\x51\x3c\xbe\xd0\x99\xac\xe0\x8a\x5c\xdc\x1b\x53\xe1\x3f\x25\x6b\x03\xdf\xa8\xa2\xa5\xc6\x27\x2e\x8b\x15\xf9\x7d\x46\xf0\xcf\x02\x93\x8a\x89\x1c\x9e\xbe\xd2\x12\xc8\x3b\x72\x7e\x7e\xed\xc6\x72\x99\xdd\xe6\xa3\xaf\xef\x40\xd7\xdc\x68\x8c\x89\x9a\xf3\x30\xda\xb3\x99\x80\xec\x18\xf0\x5c\x4f\x00\x40\x29\xa9\xbe\x80\xd6\xb4\x80\xb1\x78\x49\x9f\x3e\x7d\x06\x81\xa1\xd7\xe1\xfb\xcd\xfe\xbd\x1b\x28\xc0\x7c\xec\x9b\x62\xe8\xc5\xb4\xf8\xc5\x89\x45\xcc\xe6\xd8\x0d\xa0\xce\xf8\xae\x61\x1c\xa5\xb4\x62\xa9\x35\xf8\xd5\x96\x43\x03\x69\x74\x79\x60\xfb\x65\x94\xda\xae\x69\xb4\x4a\xf6\x55\x74\x9d\x65\xd8\x21\xde\x93\xcd\xa9\xa1\x2e\xe1\x09\xd2\x1d\x74\x20\xdd\x3a\x55\x7b\xe6\x7e\xcd\x2b\x92\xc9\x1c\x8e\x54\x0e\x94\x86\x85\xed\xef\xd6\x73\x3a\xef\x66\xbf\x96\xd9\x8c\xd1\x47\x76\x68\xe1\x1e\x2d\x59\x95\xa9\x75\x99\x5c\x99\x13\x87\x88\x7c\x31\xe2\xb9\xf8\xd7\x74\xd1\x39\xfc\xe3\xee\xf6\x46\x96\x95\x14\x20\x4c\xec\xde\xd7\xea\xc4\xa9\x7b\x0e\xda\xc9\xf8\xb0\x93\x24\xf4\x96\x8f\xeb\xf8\x47\x2d\x8b\xf5\x38\x9a\x2a\x25\x3b\xfc\xda\x1f\xbd\xcd\xba\xf6\x92\xda\xa0\xd3\xe2\xcd\x76\xba\x4d\x6e\xb7\x6d\xf2\x3f\xcf\xc8\xff\x62\x8d\x5b\xe1\x5e\x55\xe8\xe5\xd1\xbb\x09\x96\x63\x87\xdc\x1b\xaa\x08\x23\x4c\x1c\x49\x0a\x75\x74\x70\x25\x1f\xb1\xd6\x38\xfe\x27\xfb\xe5\x3b\x87\xe0\xe4\x01\xe1\xd4\xc8\x6d\xdc\x3f\xc0\xf3\x2a\xd1\x15\x67\xb8\x8e\x51\x30\x4b\xb6\x23\x16\x93\x70\x10\x85\xb9\x27\xef\x83\xc3\x9d\x98\xe1\x70\xda\x6e\x85\x60\x8c\x87\xd4\x18\x26\x6c\xa9\x86\xb7\x6f\xd6\x90\x7d\x97\x1f\x94\xda\xb3\x3c\x14\xd2\xb8\x42\x1a\xca\x67\x85\x34\x63\x42\x36\xb3\x42\x36\x83\x90\x66\x46\x48\x7b\x16\x8e\xfd\x01\x13\x0c\x2b\xa1\xff\x50\xc2\x23\x41\x49\xf4\x39\x0e\x7c\x3c\xf8\xfa\x35\x33\x59\x9b\x21\x0b\xf7\xb3\xfd\x13\x00\x00\xff\xff\xe6\xe2\x76\x3a\x70\x08\x00\x00")

func staticx_js_debug_js_bytes() ([]byte, error) {
	return bindata_read(
		_staticx_js_debug_js,
		"staticx/js/debug.js",
	)
}

func staticx_js_debug_js() (*asset, error) {
	bytes, err := staticx_js_debug_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "staticx/js/debug.js", size: 2160, mode: os.FileMode(420), modTime: time.Unix(1446874443, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticx_partials_debug_rows_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x90\xb1\x6e\x83\x30\x10\x86\xf7\x3c\xc5\xf5\xd4\x95\x92\xaa\xea\x06\x4c\xdd\xd2\x29\x43\x96\xaa\x83\xc1\xa7\x60\xe1\xd8\xc8\x36\x82\x08\xf9\xdd\x6b\x83\xa9\x50\xbb\x74\xe9\xe4\xff\xe4\x4f\xf7\xdd\x5d\xd1\xbe\x54\x67\x3d\xda\x22\x0f\xe1\x70\x28\x1c\xab\x25\x41\xad\x0d\x27\x53\xe2\x11\xa1\x91\xcc\xda\x12\x39\xd5\xc3\x15\xab\x03\x40\xe1\x4c\x7c\x62\x68\xa1\xd1\xd2\xf6\x4c\x95\x38\xcf\x37\x36\x9d\xde\x49\x79\x8f\xd5\x89\xee\x45\xee\xda\x84\x3d\x64\xd9\x6f\xf4\x92\xd0\x0b\x93\x03\x2d\x70\x96\x2d\xdd\xf3\xb5\x7d\xb0\x80\xba\x66\x86\x7a\x62\xae\x44\xa3\x47\x10\x0a\xb8\x6e\xde\xe2\x20\x67\xb2\x83\x74\x16\xb7\x41\xf8\x1a\x00\xe6\x39\x90\xde\xa7\xea\xc7\x36\xcf\xb8\x61\xbb\x2d\xb6\x92\xc3\x28\xb8\x6b\x4b\x7c\x3d\xf6\x13\xee\xdd\x4d\x1b\xd5\x9d\x24\xe5\xc4\x8d\x2c\x38\xc3\x9a\x0e\xea\x3b\x3c\x0a\xc5\x69\xc2\x6a\x91\x3e\x75\x1f\x6b\xfd\xe9\x7d\x58\x82\xef\x54\xf9\xde\xf5\x0f\x62\xf1\x17\x73\xc8\xf1\x18\xe9\x62\x09\x5b\x81\xef\xaf\xaf\x00\x00\x00\xff\xff\x63\x5f\x1c\x85\x0d\x02\x00\x00")

func staticx_partials_debug_rows_html_bytes() ([]byte, error) {
	return bindata_read(
		_staticx_partials_debug_rows_html,
		"staticx/partials/debug-rows.html",
	)
}

func staticx_partials_debug_rows_html() (*asset, error) {
	bytes, err := staticx_partials_debug_rows_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "staticx/partials/debug-rows.html", size: 525, mode: os.FileMode(420), modTime: time.Unix(1446874443, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticx_partials_debug_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x94\xcf\x8e\xd3\x30\x10\xc6\xef\x7d\x0a\xcb\x97\xdd\x3d\x04\x53\xb8\x70\x48\x72\xaa\x40\x3d\x80\x10\x6f\xe0\xd8\xd3\xc4\x5a\x27\x8e\x6c\x67\xb7\x4b\xd5\x77\x67\xfc\x27\xa4\xe9\x22\x01\x85\x4a\x8d\x1c\xcf\xcc\xef\x1b\x7f\xd6\xa4\xec\xb6\x44\x68\xee\x5c\x45\x47\xde\x42\xd1\x01\x97\x60\x69\xbd\x83\x66\x6a\x4b\xd6\x6d\xeb\xcd\xa6\x94\xea\x89\x0c\x6d\xe1\x3a\xf3\x5c\x51\xb0\xd6\xd8\xcf\xe0\x1c\xa6\xd3\xb9\x96\x6b\xb0\x9e\xc4\x67\x21\xf9\xd0\x82\x0d\x05\x42\x1b\xfe\x48\x89\x35\x1a\x72\x0a\xad\x37\x84\x9c\x4e\x97\x8c\xf3\x79\x53\x32\x54\x08\x42\x07\x63\xfb\x19\x19\xd6\x45\x67\xac\xfa\x6e\x06\xcf\xf5\x8c\x09\xdb\x91\x12\xbb\xba\xcc\x6d\xad\x99\xc6\x18\xc2\xa0\xe6\x0d\x68\x82\xfb\x15\x55\xc3\x38\xf9\xaf\xfb\x41\xc2\xf1\x0b\xef\x97\x9e\x85\xd1\x85\xeb\x8b\x77\x44\xa0\x00\xc2\x8b\x58\x93\x01\x84\xa4\x0a\x12\x4a\x12\x92\xc5\x78\xe6\x5f\x88\x67\xce\x87\x9f\x95\x65\x54\x0c\x06\xf4\x46\x82\x46\x67\xd5\x22\xee\x5f\x46\x3c\x85\x87\xa3\xa7\xab\xee\x73\x13\x34\x33\xf2\x4f\xc9\x5f\xf4\x3f\x6a\x2e\xa0\x33\x1a\x2f\xaa\xa2\xf7\x8d\x86\x27\x20\x49\x82\x0c\x98\xf0\x30\x7b\x90\x5c\xbd\x5c\xfc\x95\x65\x3b\x23\xfe\xd4\x2b\x4c\x25\xfb\xdd\xbf\xda\x24\x8d\xd8\xcb\x9b\x1d\x8a\xed\xae\xad\x41\x20\xc6\x6f\xf5\xe3\x75\xef\xe6\x70\x70\xe0\xa3\x0b\xf1\x7d\xfb\x76\x39\x4c\x33\x79\x6f\x86\xdc\xbc\x9b\x9a\x5e\x2d\xed\x37\x7e\x20\xf8\x2f\x46\xab\x7a\x6e\x5f\xae\x4e\x90\x26\x45\x89\x47\x74\x20\x4c\x1d\x1e\xe4\xfe\x21\x4f\x60\x70\xb6\x64\x89\xfd\x7f\xa5\x5a\xf0\x1f\x15\x68\xe9\x82\xd6\x27\xf0\x24\xbd\xad\xc5\xae\x2d\x2b\x59\xb0\xe9\xd5\x27\xe1\x10\x4b\xbf\x81\x9b\xb4\x77\x69\x38\xbb\xf7\xf5\x0c\xc4\x65\xd8\x19\x2d\xd4\xa7\xd3\x2a\xf5\x7c\x2e\x59\xd8\x5e\x3e\x00\x2b\x2c\x5e\xdf\x35\x33\xda\xb1\x02\x2e\x49\xbf\xa7\x45\x4b\x67\x64\x88\xa8\x41\xe8\x49\xa6\xf9\x26\xce\x8a\x8a\xde\x31\xe7\xb9\x57\xe2\xc8\x46\x6e\xbd\xe2\xda\xb1\x78\x29\x85\x35\xcf\xee\x4d\xe7\x7b\x7d\x47\x19\xb2\x7f\x04\x00\x00\xff\xff\xd5\x2e\xf4\xc1\x38\x05\x00\x00")

func staticx_partials_debug_html_bytes() ([]byte, error) {
	return bindata_read(
		_staticx_partials_debug_html,
		"staticx/partials/debug.html",
	)
}

func staticx_partials_debug_html() (*asset, error) {
	bytes, err := staticx_partials_debug_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "staticx/partials/debug.html", size: 1336, mode: os.FileMode(420), modTime: time.Unix(1446874443, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticx_partials_index_ft_list_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x57\x6d\x6f\xdb\x36\x10\xfe\xee\x5f\x71\xd1\xb6\xb6\x01\x22\x6b\xc3\x86\x01\xed\x62\x0f\x2b\x86\x01\xfb\xb0\x0e\x18\xf2\x7d\xa0\x44\xda\xe2\x42\x8b\x04\x49\xc5\x09\x5c\xff\xf7\x1d\x49\x89\xa2\x14\x39\x09\x8a\x20\xeb\x80\x1a\x48\x2c\x91\xf7\xf2\xdc\xc3\x7b\x31\x2f\x29\xbf\x81\x66\x9b\x9b\x5a\xee\x57\x19\xd3\x5a\xea\x3f\x98\x31\x64\xcb\x32\xa8\x04\x31\x66\x95\x11\xc1\xb4\x05\xff\x3f\xa7\xa4\xd9\x32\xed\x14\x2a\x21\xc9\x75\x06\x5a\x0a\xd6\x89\x64\xeb\x05\xc0\xe1\x90\xda\x38\x1e\x17\x97\x05\x7a\x58\x2f\x16\xde\x51\x67\xd1\x30\xa2\xab\xfa\x3d\xd1\xa8\xbe\xf7\x6a\xe9\x6e\x25\x45\x6e\x76\xf9\x8f\x7e\x03\xb7\x0c\x13\xac\xb2\xce\x27\xe5\x86\x94\x82\xd1\x55\x76\xc6\x1b\xca\x6e\x3f\x90\x1d\x33\x99\x97\xea\x3f\x28\xb5\x93\x94\x89\xc4\xc9\xef\x4e\xf4\x9e\x94\x54\x96\xcb\x06\xdd\x59\xd8\x48\x0d\x16\x78\x03\xa7\x8c\x76\xc0\x50\x6e\x97\x57\xb2\xb1\x18\x74\x07\x0e\xe1\x05\x43\x70\x43\x44\x8b\x4c\x64\xeb\x3c\x0f\x76\xc0\x4a\x08\x18\x20\xcf\x2f\x8b\x20\xd6\x85\x54\x84\x98\x7c\xe4\x81\x9f\x87\x28\x48\x77\x78\xa3\x5a\x9b\x6f\xb5\x6c\x55\xcf\x8f\x5f\x3a\x49\x0f\x7c\xfc\x08\x67\x0f\x70\x31\x4b\x18\x1a\x1c\x09\xd9\x3b\x85\xb1\x59\x76\x3b\x5e\x9e\xe3\x25\xdd\x57\x82\x54\xac\x96\x82\x32\xdd\x9b\x77\x64\x2f\x97\xcb\xac\xe8\xc0\xcf\x87\x96\x97\xb6\x19\x18\x2e\x5b\x6b\x91\xe1\x4e\x0c\xb7\x00\xff\x72\xa5\xf9\x8e\xe8\xbb\xac\x03\x67\xda\x72\xc7\xc7\xf0\x42\x74\x9f\xc4\x4a\x50\xad\x04\xaf\xae\x13\x62\xfe\x6a\x9b\x37\x63\xa5\x0b\x18\xb3\x76\x1e\x51\xbb\x83\xe9\x21\x6f\xc5\x9d\xaa\x39\x32\x04\xf1\x29\x0f\x7a\xd9\xfa\xb2\xe0\x31\xd0\x22\x44\xda\x27\x49\x97\x18\x49\x8a\x84\x87\xb4\xa4\x70\x39\xe5\x50\x70\x63\x3d\x30\x4c\xe1\x69\x52\xf5\xb5\x86\xab\x04\x6a\xcd\x36\xab\xac\xe0\x41\xb6\xf8\xbb\x61\xfb\x9f\xfd\xcb\x95\x63\x73\xd3\x0a\xe1\x4e\x3b\xf7\x4b\xaf\x8c\x6c\x75\xc5\xfc\x4e\x25\xdb\xaa\x2e\x89\x61\x91\xae\xce\xba\x42\x95\x5c\xf3\x6d\x6d\x1f\x3b\x38\xca\x36\xa4\x15\xd6\x3f\x9b\x1d\x24\x8a\xe3\xa3\x7c\x2a\x93\x4a\xb4\x26\xf0\x08\x1f\xd8\x1e\x7e\x43\x7b\x70\x85\xe0\xc1\x13\x71\x82\x5b\xd2\x37\x17\x45\x22\xc0\x86\xdc\x94\x44\xe7\x3e\xcd\xd7\x13\x33\xcc\x60\xd1\xa2\x6c\x72\x0c\xee\xc9\xba\xd4\xea\xf5\xc3\x8b\xff\x9f\x1b\xab\xb9\x62\xb4\x27\xdc\xea\x24\x1a\x5b\x43\x23\xf7\x9a\xa8\xa9\x13\x70\xb9\x79\x59\xd8\x7a\x4e\x18\xf6\x9c\xda\x7a\x95\xbd\x7d\xfb\x4d\xb6\x7e\xdf\x56\xd7\xcc\x9e\x12\x5d\x0f\x1b\xf8\xa4\x23\x06\x97\xd3\x9a\x29\x46\xec\x2a\x7b\x13\x8b\xe1\x22\xf4\xab\x5f\xd9\xe6\x3c\x36\x41\x7c\x49\x7a\x20\xaa\xf1\x8d\x2b\xd0\xb0\xb3\x74\xc7\x04\x67\x2b\x78\x1d\xf3\x84\x08\x4e\xcc\xeb\xf4\xc8\x2c\x8d\x60\xee\x65\xdb\xe1\x10\x9d\x1f\x8f\xd9\x7a\xf4\xea\x8e\x06\x41\xd3\x59\x53\x49\x89\x86\x93\x9b\x22\x1b\x32\xd5\xe3\x8b\xd9\x9a\x42\x73\x9f\xce\xe5\x58\x05\xa7\x55\x2a\xf3\xaa\x29\x8d\xfa\xa9\x08\x5f\xa9\xe7\x98\x08\x27\xad\x85\x50\x86\x08\x9e\x10\xcf\x50\x2e\x43\xe3\x61\x94\x87\x6a\x1e\x0e\xeb\x7c\xda\xa6\xc2\x27\x14\x4e\x30\x90\x3d\x5c\x70\x13\x26\x06\x2e\x1f\x28\x31\x07\xc4\x95\x98\x0f\x1c\xdc\xdb\x18\xf9\xa8\xb8\x4e\xc7\x83\xbf\x19\x1a\xf6\x59\x04\xe4\x7a\x46\x6e\xf8\xb6\x19\xa2\xf2\xe0\x3e\x29\x2c\x9c\x9e\xcc\x7e\x1e\x71\x59\x4d\x4c\x1d\x63\x7a\x24\x9a\x21\x2d\xfb\x2e\x81\xdf\xae\x7b\xb9\xa1\xd2\xf7\xb8\xd9\xe9\xf2\x8b\x2b\xf7\x67\x1a\x31\xbe\x75\xa4\x23\xa6\xe1\xe2\xff\x32\x5c\xc0\x13\xf1\x4c\x23\x06\x3a\x56\x5f\x62\xd0\x78\x57\x4f\x1f\x37\x57\x44\x6f\x99\x9d\x46\xef\xa0\xfe\x87\x03\x68\xf5\x82\x03\x68\x76\xf2\xc4\x48\xac\xa7\x27\x84\x12\x9e\xff\x2c\xff\x19\xc5\xb2\x54\x44\x93\x9d\xc1\xe5\x65\x10\x30\x93\xea\x9e\xc3\x38\x98\x75\x20\x27\xcd\x60\xbc\xed\x41\xf7\xb8\xc2\x5d\xee\xec\x6b\x4c\x16\xcc\xb2\x8b\x99\x81\x35\x5d\xf9\x32\xa0\xbe\x0c\xa8\x97\x89\xeb\xb9\x07\x54\xbc\x0b\x19\x7b\xe7\xd6\x97\xf1\x3e\x76\x01\xcb\xe4\x36\x04\x07\xd4\x56\x84\x52\x8e\xb4\x94\x12\xfd\xec\xde\xc1\xf7\xdf\xaa\x5b\xf7\xcb\xae\x94\x1a\xaf\xa8\x71\xf9\x3b\x75\x0b\x46\x0a\x4e\xe1\x2b\x4a\xa9\x13\xc0\x8b\xe6\x96\x37\x51\xe0\x07\xaf\x77\x5c\x2c\x46\x1e\xd6\xb0\xc4\xf9\x97\xba\xed\x1a\x7a\xb7\xe3\x21\x74\x96\xfc\x48\x42\x4f\xb3\x86\x7c\x88\x73\x76\x42\xdf\x3f\x44\xc4\xf7\xa1\xce\x9a\x02\x6c\xbc\x96\x8e\xf9\x18\x9b\x0c\x02\xa7\x54\xeb\xc7\x54\x6b\x8f\x69\x5f\x73\x8b\xf3\x48\xe1\x9d\xff\x5d\xd7\x3f\x1c\x20\x3c\xea\x70\x34\xff\x06\x00\x00\xff\xff\x68\xa0\xa7\xf8\x6b\x12\x00\x00")

func staticx_partials_index_ft_list_html_bytes() ([]byte, error) {
	return bindata_read(
		_staticx_partials_index_ft_list_html,
		"staticx/partials/index/ft/list.html",
	)
}

func staticx_partials_index_ft_list_html() (*asset, error) {
	bytes, err := staticx_partials_index_ft_list_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "staticx/partials/index/ft/list.html", size: 4715, mode: os.FileMode(420), modTime: time.Unix(1447479579, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticx_partials_index_ft_new_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x59\xdb\x6e\xdb\x38\x13\xbe\xcf\x53\x30\xba\xa8\x13\xc0\x8a\xfb\xf7\xbf\xd8\x45\xd6\x36\xd0\xed\x1e\x50\x60\xb7\x28\x90\xe6\x2a\xe8\x05\x2d\x31\x36\x61\x5a\x14\x48\x2a\x87\xba\x7e\xf7\x1d\x1e\x44\x51\x12\x6d\xcb\x41\xb6\x58\x03\xad\x65\x69\x4e\x9c\x6f\xf8\xcd\x88\x99\xe6\xf4\x01\x15\xcb\x94\xde\xcf\x92\x0d\x51\x38\x99\x9f\x9d\x4d\x39\x43\x19\xc3\x52\xce\x92\x85\x20\x38\xcf\x44\xb5\x59\xc0\x03\x84\xa6\x8c\xce\xa7\xb2\xc4\x45\xfd\x7c\xc9\x9e\xcb\x15\xcd\x78\x81\xfc\x55\xba\xe0\x7c\x9d\xcc\xa7\x13\x90\x75\x2a\xf0\x05\x17\x18\xad\x04\x01\x37\x13\x5a\xe4\xe4\x89\xc8\xc4\xde\x47\xe8\xa3\xfd\x6d\xa5\x26\xd8\x68\x35\xda\x3a\x3a\xb9\xe2\x8f\xb3\x84\xca\xdf\x73\xaa\x92\xf9\x76\x5b\x90\x47\xa3\xf4\x09\x6f\xc8\x6e\x17\x15\x3e\xaf\xa5\x8d\xd9\x4f\xe4\xd1\xba\xb1\x4e\xcc\x12\xdc\xaa\x6b\x5b\x5f\x9e\x4b\x82\xde\xbc\x41\xad\xdf\xb3\x19\x1a\xdd\x57\x8c\x29\xf2\xa4\x52\xcc\x28\x96\xa3\x64\xfe\x5e\x7f\x4f\x27\xda\x48\x13\xeb\x74\xc2\x99\xce\x9d\xcb\xa7\x0d\x82\x08\xc1\xc5\xdf\x44\x4a\xbc\x24\x49\x9d\x33\xcc\x88\x50\xc8\xfc\x9f\xe6\xb8\x58\x12\xa1\x15\x32\xc6\xf1\x3a\x41\x82\x33\xe2\x44\x4c\xe8\xdb\x6d\x68\x63\xb7\x03\x3f\xe0\x41\x3b\xba\xe7\x62\x53\x9b\x34\xd7\xfa\xbf\x74\xc5\x05\xfd\xc6\x0b\x85\x59\x6d\x4b\xdf\xb6\xe0\xe9\xd0\x02\x85\x74\x29\x78\x55\x1a\xb5\x3f\xf5\x95\xcf\xa8\xcb\xd9\x94\xe1\x05\x61\xfa\x39\xa4\xbe\x28\x2b\xd5\x08\x38\xe0\xcc\xc7\x59\xcc\x38\x4b\xe5\x26\x7d\x87\xa0\x04\x14\x78\x4e\x8d\x76\x1b\x63\x77\xfd\xba\xe9\x37\xf0\x42\x50\xae\x7c\x8c\x5b\xb7\x80\x60\xc1\x2e\xbc\xff\xbd\x0d\x62\x37\x59\x37\x4f\xb7\xa3\x15\x96\xa9\xc9\xf4\xe8\x1a\x99\xef\x3f\x28\x61\xb9\xbc\xa2\xbe\xcc\xfc\x52\xda\x10\xbb\x32\x8b\x64\x84\x36\xf9\xec\x57\xac\x01\xd1\xd9\x33\xc9\xed\x57\xae\xbe\xb3\xe1\x39\x61\x4d\x92\x7a\xc9\x47\x48\x41\x9e\x66\x89\x4e\x50\xd2\x02\xd7\xc1\xd0\x91\xa6\x79\x0f\x4b\x54\x32\x9c\x91\x15\x67\x39\x01\xa0\x4b\x46\xb0\x24\x88\x14\x0a\xca\x12\xa3\x42\x4b\x4c\x5c\x3a\xeb\xa0\x9b\x8b\x21\x15\xa5\x81\x3c\x58\x51\x46\xe0\x84\x8a\x32\x4a\x48\x6b\x0d\x40\xdb\x27\x59\x12\x46\x32\x15\xc9\x69\xdb\x3d\x3c\xe7\xa5\xa2\xbc\x00\x2b\xca\xa2\x6f\x2a\x11\x4b\xa4\xae\x6c\xf8\x76\x91\x8b\x67\xb8\x91\x61\x45\x96\x5c\x3c\xeb\x25\x21\x85\x68\x81\xbc\x86\x7c\x2f\x84\xf7\x0e\xfe\xad\x55\xf4\x80\x59\x05\x78\x25\xf3\x34\x45\xd9\x8a\x73\xc8\xb5\x51\x31\x38\xa2\x34\x05\x1a\x31\x82\x3e\xee\x89\x0d\xfc\xa5\x10\xdc\xf0\x4a\x64\xe4\x10\x06\x81\xc4\x09\x20\x58\xad\x57\x41\x21\x16\x40\x1b\x06\xe9\x25\x06\xe3\xd0\xa8\x0c\x07\xc2\xea\xfc\xbb\x48\xb4\x76\xb0\xdf\xf2\xad\x2c\x38\x16\x0c\x6e\x9c\x03\x0d\x16\x94\x8d\x0e\x43\x78\x2a\x33\xff\x5a\x65\x6b\xa2\x0c\x77\x9e\x02\xa1\x67\xab\x2e\x82\x2f\x20\xa7\x86\x8f\xf6\x9a\x68\xb1\xd3\xc2\x84\x9c\x0e\x60\xa5\x3d\xdd\xc5\x6e\x4f\xb2\x01\xab\x8a\xc8\xfe\x9d\xbb\x50\xe1\xab\x0f\x65\x08\xc7\xd5\x36\xda\x20\x1d\xc1\xe0\x58\xe2\x7f\x6e\x77\x9d\xb0\xb3\xe8\x1e\x01\xd5\xde\xb4\x16\x1d\xc4\x6e\x17\x96\x7a\x9d\x88\x22\x63\x55\x4e\x9c\xde\xbe\xb5\x4e\x9a\x42\xf7\xcd\x69\x7f\x72\x7d\xdd\xee\x6f\xde\xba\x6a\x17\x80\xde\x1a\xd0\x23\xa3\xe8\xe3\x4e\x6f\xd7\x32\x17\xe7\x1d\x8c\xbe\x7f\x47\xe7\x87\x02\xbf\x0c\xb7\x93\x20\x25\xc1\x6a\x96\x5c\x78\x1e\x1e\xa3\xf2\x52\x13\x42\xad\xf3\x19\x0b\xbc\xa9\x67\xcf\x41\x0d\xcc\x69\xb4\xe6\x06\xef\x67\x3d\x46\x0f\xc6\x7e\xd9\x16\x88\xe4\x07\x86\x19\x1a\x26\xeb\x02\xe7\x0f\xb8\xc8\x48\x6e\x96\x58\xff\xb0\x73\xc7\xdd\x3a\x58\xd7\x09\x93\x8a\x8d\xf5\xce\xfb\xf9\x0a\x86\x82\xc9\x65\x40\x4d\xa2\xc6\x8e\x9e\x5b\xcc\x3d\xfa\x8d\x5c\xac\x2f\xcd\xa0\xdd\x54\xeb\x31\xa2\x80\xe7\x1a\x5a\x0c\x6f\x10\x91\xae\x1b\x0b\xb4\xb3\xf3\xcd\x47\xf0\x47\xbd\xea\x6d\xa9\xe5\x3f\x55\x9b\xbf\x68\x41\x74\x76\xa0\xd0\x23\xd2\x31\x8e\x81\x3d\x56\xc7\x31\xbc\xc2\x0f\xd4\xc4\x17\x2c\x96\x44\xb9\x77\x96\x28\x95\x9f\x34\xcf\x6a\x19\x73\x65\xed\xca\x7d\x1c\x1f\x77\x1b\x2c\x7a\x1f\xc5\x58\xc5\xfa\x25\xeb\x05\xcd\xda\x73\xf4\xfe\x10\xe0\xb3\xa9\x98\xa2\xa5\x7e\xe1\x50\xa2\xea\x92\xf8\x80\xc9\x34\xa8\x11\xeb\x97\xe4\x07\xfd\x85\x13\x82\x9f\xb4\x4d\xff\x6f\x7e\xc1\xb6\x8c\xa4\xf6\xb5\x5a\x79\x87\x17\x4e\x6d\xe6\x06\x78\xb7\xe9\x0f\x37\xf6\x1e\x01\x0d\x9d\xce\xac\xe2\xa9\xef\x44\x9e\xdb\x9a\x19\x2a\x20\xd1\x3d\x21\x0d\x61\x28\x19\xa8\xde\x35\xc6\x43\x82\x8a\x33\xc6\xcd\x1e\xc5\x3e\x05\xc4\xe9\x22\xf4\x15\xe1\x8d\x01\xc5\xb9\x17\x5e\xd8\xd1\x32\x18\xb1\xbb\x5c\xf3\xd2\xda\xba\xbd\xfd\xf8\xdb\x0f\xa8\xac\x96\x9b\xe1\x75\xa5\xd5\x5e\x65\x64\xec\xf9\x3f\x7d\x64\x8c\x98\x68\x8d\x8c\x17\x96\x25\x30\x43\x6e\x78\xac\x2a\x9a\x5f\xbe\xfc\x9d\xf6\x33\xc3\xc5\x81\x9d\x7f\x78\x1c\x8a\x71\xff\x11\xa0\x22\xfe\x06\x00\xa5\xb5\x86\x6f\xff\x23\xdb\x2f\x08\x61\xcf\x06\x1b\x95\x5e\x64\x34\x78\x8b\x35\x48\x06\x0e\x5e\xbe\x83\xea\x64\xdf\x54\x8b\x8d\x3f\xf7\x8b\xac\x97\xdf\xdf\x4b\x28\x03\x9d\xb2\xde\xfa\x4f\x1b\x6e\x7b\x27\x53\xcd\xe4\xd3\xad\x78\x8f\xb2\xab\xef\x6c\x45\xb2\xf5\x82\x3f\x35\x87\x82\xed\x32\xb0\x9f\x1b\x88\xc3\x17\x08\x82\xa8\x15\x2d\x96\xb2\xf1\x32\x31\x6e\x02\xb7\x0b\x11\x9b\xe2\x23\x67\xaf\x93\x30\xd8\x45\xa5\x14\xf7\x47\xba\x0b\x55\x20\xf8\x97\x66\xda\x2b\x94\xd2\x07\xf3\x3d\x9d\x58\xa9\xc6\x7c\x33\x4d\x39\xfd\x21\x07\x7a\xb1\xb4\xf5\x1b\x7b\xc6\x68\xb6\x9e\x25\xf5\x01\xd1\x45\x78\xfc\x35\x6e\x19\x1c\x77\xe6\xfa\x71\x9b\x12\x83\x9f\x5e\xb7\xa1\x8d\x71\xb7\x9f\x99\x1b\x4d\x31\x42\xd7\x13\xe4\xc1\x58\xd7\xe2\x97\xdd\x48\x2d\x94\xd2\xd6\x5b\x37\x7d\x39\xb9\xc7\x30\x12\x85\x79\xae\x8f\x3d\x63\x07\xd4\xf6\xf3\x01\xca\x5e\x91\xd6\x61\xa9\x99\x56\x82\xa3\xce\x9e\x9d\x88\x99\xdb\x32\x3f\x66\xa6\x87\xe7\x09\x20\xc6\x4e\x65\x8f\x82\x68\x4e\x6d\xff\x23\x48\x8e\x51\x74\xc4\xfc\xc1\x00\x23\x93\x92\x57\x82\xf9\xa0\xb1\x36\xd8\x5d\x46\x9d\x4e\x34\x8b\xea\x3f\x29\xd4\x7f\x5a\x90\xea\x99\x91\xf9\x99\xf9\xab\xc2\x55\x40\xb1\xdb\x33\xcd\xe4\x04\x8b\x6b\xb4\xe0\x6a\xf5\xcb\xd9\xae\x2f\x03\x26\x9a\x43\x73\xa3\x51\xe2\x3c\x07\xde\x4a\x15\x2f\xaf\xd1\x4f\xe5\x53\x54\xcd\xbd\x6b\x68\xf9\x0d\x60\x42\x8b\xc3\xe2\xa6\xa5\x05\xaf\xbc\x46\xd1\xd4\xa3\x12\xb8\x90\x5a\xf2\x1a\x65\xb8\xa4\x0a\xeb\xb7\x57\x6f\xc3\x10\xe6\x95\xa7\xd4\xc0\x1d\x2c\x48\x71\x50\xfa\xff\xdb\xd0\x65\xbb\xa9\xf4\xc2\x7b\xe7\x84\x21\xdd\x36\x65\xff\x04\x00\x00\xff\xff\xe4\x71\xd0\xdc\x4f\x1b\x00\x00")

func staticx_partials_index_ft_new_html_bytes() ([]byte, error) {
	return bindata_read(
		_staticx_partials_index_ft_new_html,
		"staticx/partials/index/ft/new.html",
	)
}

func staticx_partials_index_ft_new_html() (*asset, error) {
	bytes, err := staticx_partials_index_ft_new_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "staticx/partials/index/ft/new.html", size: 6991, mode: os.FileMode(420), modTime: time.Unix(1447392976, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticx_partials_index_start_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x8f\x41\x4f\x03\x21\x10\x46\xef\xfc\x8a\x2f\x3d\xdb\xd6\x7a\x54\xe4\xee\xc5\x78\xf3\x0c\xec\x20\x24\x2c\x18\x18\xda\x6d\x8c\xff\x5d\x68\x76\x13\x7b\x22\xbc\xc9\x7b\x0c\x72\x0a\x67\xd8\xa8\x6b\x7d\xdd\x85\x34\xd1\xf2\x49\xd1\xe6\x99\x76\x4a\x00\xd2\x9f\xd4\x7a\x07\x67\x58\xe3\x58\x1e\x3b\x1b\xa3\xee\xa9\x01\x10\x2a\x34\x5c\x8b\x71\xcf\xb4\x30\x2a\x95\x33\x15\xb8\x5c\x60\x73\xb3\xde\xe8\x4a\x98\x34\xeb\x83\x3c\x0e\x67\x73\x3f\x22\xdd\x26\xe4\x42\x22\x5c\x73\xeb\x4e\x28\xb5\xf7\xc6\x16\xb8\x04\xf6\x60\x4f\x78\xa7\x0b\xde\x6e\xc8\x34\xe6\x9c\xb6\xcc\x7a\x08\x59\xf9\x1a\x49\x89\xc3\xff\xed\xe1\x4f\x0f\xb8\x27\xe3\x9f\x3f\xfd\xf1\x59\x97\xaf\x90\xf6\x26\xf7\xd8\xfc\x8c\xa7\xc7\xef\xe5\x45\xfc\xf6\xdc\xda\xf9\x0b\x00\x00\xff\xff\x3c\xde\xdc\xcd\x11\x01\x00\x00")

func staticx_partials_index_start_html_bytes() ([]byte, error) {
	return bindata_read(
		_staticx_partials_index_start_html,
		"staticx/partials/index/start.html",
	)
}

func staticx_partials_index_start_html() (*asset, error) {
	bytes, err := staticx_partials_index_start_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "staticx/partials/index/start.html", size: 273, mode: os.FileMode(420), modTime: time.Unix(1447042892, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"staticx/css/cbft.css":                staticx_css_cbft_css,
	"staticx/index-ft.html":               staticx_index_ft_html,
	"staticx/index.html":                  staticx_index_html,
	"staticx/js/debug.js":                 staticx_js_debug_js,
	"staticx/partials/debug-rows.html":    staticx_partials_debug_rows_html,
	"staticx/partials/debug.html":         staticx_partials_debug_html,
	"staticx/partials/index/ft/list.html": staticx_partials_index_ft_list_html,
	"staticx/partials/index/ft/new.html":  staticx_partials_index_ft_new_html,
	"staticx/partials/index/start.html":   staticx_partials_index_start_html,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func     func() (*asset, error)
	Children map[string]*_bintree_t
}

var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"staticx": &_bintree_t{nil, map[string]*_bintree_t{
		"css": &_bintree_t{nil, map[string]*_bintree_t{
			"cbft.css": &_bintree_t{staticx_css_cbft_css, map[string]*_bintree_t{}},
		}},
		"index-ft.html": &_bintree_t{staticx_index_ft_html, map[string]*_bintree_t{}},
		"index.html":    &_bintree_t{staticx_index_html, map[string]*_bintree_t{}},
		"js": &_bintree_t{nil, map[string]*_bintree_t{
			"debug.js": &_bintree_t{staticx_js_debug_js, map[string]*_bintree_t{}},
		}},
		"partials": &_bintree_t{nil, map[string]*_bintree_t{
			"debug-rows.html": &_bintree_t{staticx_partials_debug_rows_html, map[string]*_bintree_t{}},
			"debug.html":      &_bintree_t{staticx_partials_debug_html, map[string]*_bintree_t{}},
			"index": &_bintree_t{nil, map[string]*_bintree_t{
				"ft": &_bintree_t{nil, map[string]*_bintree_t{
					"list.html": &_bintree_t{staticx_partials_index_ft_list_html, map[string]*_bintree_t{}},
					"new.html":  &_bintree_t{staticx_partials_index_ft_new_html, map[string]*_bintree_t{}},
				}},
				"start.html": &_bintree_t{staticx_partials_index_start_html, map[string]*_bintree_t{}},
			}},
		}},
	}},
}}

// Restore an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, path.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// Restore assets under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	if err != nil { // File
		return RestoreAsset(dir, name)
	} else { // Dir
		for _, child := range children {
			err = RestoreAssets(dir, path.Join(name, child))
			if err != nil {
				return err
			}
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

func assetFS() *assetfs.AssetFS {
	for k := range _bintree.Children {
		return &assetfs.AssetFS{Asset: Asset, AssetDir: AssetDir, Prefix: k}
	}
	panic("unreachable")
}
