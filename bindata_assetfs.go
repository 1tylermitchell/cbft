// Code generated by go-bindata.
// sources:
// staticx/css/cbft.css
// staticx/index-ft.html
// staticx/index.html
// staticx/js/debug.js
// staticx/partials/debug-rows.html
// staticx/partials/debug.html
// staticx/partials/index/ft/list.html
// staticx/partials/index/ft/new.html
// staticx/partials/index/start.html
// DO NOT EDIT!

package cbft

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"github.com/elazarl/go-bindata-assetfs"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _staticxCssCbftCss = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x56\x4d\x6f\xe3\x36\x10\xbd\xe7\x57\xb0\xc8\x6d\xb1\x34\x12\xd9\xce\xc6\x32\x1a\xa0\x0d\x50\xec\x25\xe8\xa1\xc7\xa2\x87\xa1\x38\xb2\x06\xa1\x48\x82\xa4\x6d\x25\x45\xff\x7b\x21\x91\x76\x64\xf9\x23\x72\xbb\x27\xf1\x43\xf3\xe6\xbd\xe1\xcc\x90\x13\xa1\x70\x83\x2f\x46\x82\x62\x93\xba\xfd\x70\x61\xe4\x1b\x9b\x94\xc6\xd5\x7c\xe5\xcc\xda\xb2\xbf\x6f\x18\xb3\x20\x25\xe9\x15\x17\x26\x04\x53\xe7\xec\xfe\xce\x36\xcb\x9b\x7f\x6e\x6e\x26\xa4\x25\x36\x2f\x60\x2d\xe9\x15\x9b\x80\x5e\xad\x15\x38\xbe\x26\x1e\x1c\x22\xaf\x40\x4b\x85\x1d\x04\x63\x02\x8a\xd7\x16\x52\xcb\x9c\xdd\x96\x8f\x25\x94\xe5\x32\x6e\x18\x27\xd1\xe5\xec\xde\x36\xcc\x1b\x45\x92\xdd\x4a\xc0\x0c\x21\x6e\x17\x46\x19\x97\xb3\xdb\x6f\xc5\x02\x45\x16\xd7\x12\xa1\xc8\xe4\x4a\x3a\x79\x65\x36\xe8\x12\xa9\x1d\xf8\x6c\xfa\x88\x62\xb1\x3c\x41\x74\x56\x3e\x94\xdf\xfa\x44\xf9\xce\x46\x16\x98\xe1\xe3\x18\xc7\x56\x41\x81\x95\x51\x72\xef\xf7\xd0\xc7\x5d\xb9\x18\x06\x23\xb3\x0d\x93\xe0\x2b\x94\xec\x56\xa0\xcc\xa4\x88\xfb\x7c\x8b\xe2\x95\x02\x17\xa6\xe1\x9e\xde\xbb\x20\x24\x5e\xc2\x34\xe9\x9f\xda\xbc\x5f\xfc\xe1\xdc\xde\xb1\x92\x6e\xf6\x0c\xba\x40\xf5\xec\x10\x42\x3c\xcc\x1a\xdc\x8a\x34\x0f\xc6\xe6\x2c\xeb\x82\xbf\x5f\xdb\xa5\xc8\xf4\xcc\x99\x78\x2c\x02\x19\xbd\x1f\x7c\x47\xd8\x45\xa5\x8f\x7a\xee\x48\x87\xe6\xbf\xb6\xe9\x7a\x64\x3c\xbf\x8a\x52\xbd\x1b\x88\xa0\xfb\x58\x8e\x56\x55\x38\x4f\xa5\x6f\xc6\x83\x03\x5f\x9d\x30\xce\xe6\x63\x8d\x7b\x69\xb9\x4b\xb0\x32\x26\xc5\x47\xae\x7c\xa4\xde\x62\x3e\x9d\xc5\xcd\x41\x4e\xce\xa6\xe5\x14\x2e\x79\x54\x20\x50\x75\x6e\x4a\xa3\x03\xdf\x62\x24\xaa\x8d\xab\x41\xf5\xa2\xa6\xb0\x1c\x23\x1e\x42\x70\xfe\x12\x5c\xb7\xec\xe9\x1d\x73\xb6\xb0\xe1\x22\x56\x1a\x7c\x8f\x5d\xa3\x83\x7e\x36\x3a\x38\xa3\xa2\x87\x0d\x79\x12\xa4\x28\xbc\xe5\xac\x22\x29\x51\x8f\x87\x4b\xe1\x3d\x00\xfd\x7a\xc6\x74\x82\x92\xc2\xd5\x8c\x48\x57\xe8\xe8\xb2\xc2\x92\x50\xc9\xf4\xf9\x51\x32\x8f\x31\xaf\xd1\x9a\x0c\x3f\x24\x8f\xe7\x36\x46\xf0\x20\x80\xad\x97\x5f\x1c\xc2\xc1\xad\x12\x33\xed\xd3\xea\x8c\x3a\x63\xfa\x3e\x31\x6f\x21\x16\xab\x24\x6f\x15\x74\x74\x14\x69\xe4\x42\x99\xe2\xb5\x4d\xbc\x80\x4d\xe0\xa0\x68\xa5\x73\xd6\x55\x63\x97\xdc\xa4\xf9\x96\x64\xa8\x72\xf6\x88\xf5\x58\x7f\x79\x49\xce\x07\x5e\x54\xa4\x24\x23\x6d\xd7\xe1\xcf\xf0\x66\xf1\xe7\xa2\xc2\xe2\x55\x98\xe6\xaf\x7e\xe5\x47\x39\x8b\x8b\xe8\xfb\x70\x3f\xb1\x2f\x5f\x87\x47\xf0\xc4\xbe\x74\x78\x27\xef\xa1\xf3\x84\x7b\xbc\x5a\xe9\x91\x53\xd2\x7a\x3f\xfb\x44\xac\x35\x76\x6d\xdb\x93\x06\xd2\xa9\x0b\x59\xe3\xa9\x6d\xb1\x39\x73\xa8\x20\xd0\x06\x97\xfd\x70\x7f\xc4\xb9\x6d\xb9\xe9\x12\x88\xda\xd3\xa4\x4d\xc2\x52\x99\x6d\x1e\xb3\x46\xe1\xe7\x0c\x06\x8e\x41\x78\xa3\xd6\xe1\x92\xe3\xfb\xc9\xbc\x95\xc6\x58\x6a\xb8\x3c\x8b\xd3\x13\x8f\x8a\x87\x87\x87\xe5\x20\xac\xdb\x8a\x22\xfa\xfe\x41\x31\x4f\xef\x89\xfd\x60\x79\xbe\xb5\x75\xd6\xdc\x5b\x28\xb0\x5d\xde\x3a\xb0\xed\xf2\x3b\xef\x24\xb6\xcd\xf3\xee\x94\xe4\x0d\xe1\xf6\x77\xad\xde\x62\x39\x80\x48\x2f\xa4\xe3\xb2\x67\x3f\x51\x6d\x8d\x0b\xa0\x4f\x16\xd9\x1e\x47\xac\x43\x30\xfa\xbf\x81\x58\x67\x2c\xba\x40\xe8\xff\x48\x57\xeb\xf8\xd2\xdc\x55\xf3\x6f\xb1\x03\x1d\x4c\x9f\x53\x69\xa0\xef\xdd\x38\xc3\x33\xfc\x9f\x90\x57\x55\xe2\xbf\x01\x00\x00\xff\xff\x06\xc1\xb4\x5c\xec\x0a\x00\x00")

func staticxCssCbftCssBytes() ([]byte, error) {
	return bindataRead(
		_staticxCssCbftCss,
		"staticx/css/cbft.css",
	)
}

func staticxCssCbftCss() (*asset, error) {
	bytes, err := staticxCssCbftCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "staticx/css/cbft.css", size: 2796, mode: os.FileMode(420), modTime: time.Unix(1485286021, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticxIndexFtHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x5a\x6d\x6f\x1b\xb9\xf1\x7f\xaf\x4f\x31\x59\x04\x96\x84\x68\x77\x2f\x77\x7f\xfc\x51\x58\x92\x81\x5c\xd2\x6b\xd3\xf6\x92\xa0\xe7\xb4\x28\x0c\xc3\xa0\x76\x67\x25\x26\x5c\x72\x43\x72\x25\xeb\x12\x7f\xf7\x82\xdc\xe7\x27\x7b\xe5\x18\x68\xbb\x2f\xac\x25\x39\xf3\x9b\xe1\x70\x66\x38\x23\x6b\xf5\xec\xcd\xfb\xd7\x97\xff\xfa\xf0\x47\xd8\xe9\x98\x5d\x4c\x56\xe6\x03\x18\xe1\xdb\xb5\x83\xdc\x31\x13\x48\xc2\x8b\x09\xc0\x2a\x46\x4d\x20\xd8\x11\xa9\x50\xaf\x9d\x54\x47\xee\x1f\x1c\xbb\xb0\x21\x0a\x61\x27\x31\x5a\x3b\xbe\x73\x31\x31\x53\x9a\x6a\x86\x17\xc1\x26\xd2\xe0\x03\xe5\x21\xde\xfe\xb8\xf2\xb3\x49\xbb\xce\x28\xff\x5c\xb0\x28\x4d\x34\x0d\xfc\x40\x29\x9f\x24\x89\x17\x28\xe5\x80\x44\xb6\x76\x94\x3e\x32\x54\x3b\x44\xed\xf8\x17\xf7\x70\x25\x92\xaa\xf8\x11\x7c\x1b\x21\xb4\xd2\x92\x3c\x46\x66\x48\xd4\x6e\x23\x88\x0c\x1f\xc1\x2b\x69\xf0\x59\xed\xc8\xc1\x8b\x29\x1f\x64\x1f\xe0\x67\x74\xe3\x13\xbe\x4d\x19\x91\x6e\x4a\x5d\x2d\x11\xfd\x90\x2a\xdd\x9e\x1c\x87\xdd\x5e\x6b\x0a\xbb\xb5\xda\x9a\x43\xb4\x48\x5d\xc6\x9d\x90\x3a\x48\x35\xd0\x40\xf0\x16\xaf\x1f\x91\xbd\x99\xf6\x68\x20\x0c\xe7\xca\xcf\xfc\x68\xb5\x11\xe1\x11\xf8\xd6\x25\x49\xb2\x76\x82\xcd\x56\xbf\x4a\x92\xcc\x8d\x42\xba\x87\x80\x11\xa5\xd6\x4e\x20\xb8\x26\x94\xa3\xb4\x2b\xcd\x35\x29\x0e\xf9\x6c\x9b\x87\xb9\x2a\x76\x5f\xfe\x00\xf9\x9b\x88\x22\x85\xda\x7d\x09\x31\xa1\xbc\x64\xc9\x99\xf8\xd6\xdd\x53\x3c\x5c\xac\xfc\x90\xee\x4b\xb8\x6a\x50\xbe\xe6\x2f\x2b\xdf\x28\x9e\x59\x40\x05\x92\x26\x1a\x94\x0c\x9a\xe7\xf2\xe9\x4b\x8a\xf2\x98\x7f\xb8\x3f\x7a\x2f\xbd\x97\xde\x27\xe5\x5c\xac\xfc\x8c\xe3\x62\x3c\x73\x4a\xed\x01\x8e\xe6\x0e\x7f\xf2\xf6\x3f\x8d\x27\x6f\x78\xe0\x68\xae\x5d\x1a\x13\x4e\x7f\xc7\xd3\xb8\xca\x28\xab\xc5\xdb\x68\xe6\xdc\xab\x8b\xcf\x93\x19\xdd\x4a\x7a\x4a\xab\xc1\x69\x3b\xb8\x1f\xcb\xd5\x09\x53\x8f\x03\x94\x22\xd5\xd8\x1c\x3d\x0e\xe8\xc1\x4c\x30\xde\x0d\x95\xe0\x89\xa0\x5c\xe3\x09\xc6\xce\x12\x70\x93\x7c\x88\xfe\x93\xf2\xf1\x36\xd9\x8f\x3d\xcb\x4f\xca\xb7\xd7\xc7\x68\x6a\x2e\x42\x1c\x4d\x1c\x0b\x4e\xb5\x18\xaf\x4a\x4c\x38\xd9\x8e\x87\x67\x62\xab\x46\x13\xdb\xc0\x1f\x4d\xbd\xf9\xff\xff\x1b\x6f\xf0\x88\x32\x8d\x72\xbc\x2a\x0a\xe5\x9e\x06\x38\x9e\x21\xa4\x12\x03\x4d\xf7\x1d\x96\x01\x1e\x77\xc3\x70\x8f\x6e\x4c\x92\x84\xf2\x6d\x66\xd9\xec\xd5\x1e\x76\xb1\x30\x4a\xfe\x30\x96\x3e\x26\x38\x00\x75\x32\x16\xe1\x84\x1d\x15\x1d\x67\x92\x87\x61\x5c\xfb\xf2\xfb\xc8\x20\x1b\x81\x77\x10\x32\x64\x54\xe9\xa7\xc2\x33\x75\x5e\xe6\x36\x4f\x85\xa8\xc5\x67\x34\xb7\xc7\xd3\x02\xf6\xea\x38\x80\x79\x6b\x5d\x15\x37\xe9\x48\x6f\x30\xe4\xa6\x22\x1d\x1b\x05\xa6\x6a\x91\x82\xb1\x6e\xa8\x4d\x56\xc5\x5b\x94\xf2\x40\x53\xc1\xc1\xee\xef\x1d\x1e\xde\x1a\x87\xff\x35\xdb\xdb\x6c\x0e\x5f\x6d\xf5\x21\x51\xa7\x92\xe7\x03\xf3\x38\xc6\x97\x95\x73\x0e\x5f\xef\x16\xd5\x64\x88\x11\x49\x99\xbe\xc9\x4d\x63\x96\xcb\x45\x4b\x80\x9c\x6c\x18\x86\xce\x39\x68\x99\xe2\xa2\xb9\x18\x1e\x39\x89\x69\x90\x2f\x96\x6b\x75\x01\x46\xea\x4d\x44\x91\x19\x08\x3b\x72\x7a\xc4\xdb\xf9\x73\x70\x6e\xf2\x89\x3e\x9a\xc2\xdf\x0d\x9d\xd2\x84\x87\x44\x86\x7d\x74\x21\xd1\xa8\x69\x8c\x37\x89\xe9\x33\x2c\xb9\x99\xba\xa4\x31\xbe\x4f\x8c\xe1\x08\xeb\x63\x2b\x75\xbc\x21\xac\x41\x50\x78\x4b\xd7\x36\x85\x46\x6d\xab\xda\x45\xe3\xfe\x37\x79\xda\xec\x5b\x2f\x9d\x79\x78\xf5\x41\x76\x73\x6c\xd9\x6a\x65\xfb\x49\xf6\xf7\x6e\x39\x69\x79\xca\x07\xeb\x27\x6f\x39\xd5\xaf\x4b\x2f\x9b\x51\x4e\xf5\x5f\x29\x0f\x17\x59\x8b\xf5\x81\x48\x12\xab\x7c\xf0\xf1\x6d\x26\xf3\xb9\x0a\x44\x82\x0b\x78\xbe\xd3\x3a\x59\xc0\x73\x5b\x65\x14\x9f\x05\xc7\x73\x26\x02\x62\x84\xd9\xd7\xed\xc2\x70\x19\xa2\x94\x6e\x7e\x15\x21\x61\x85\x5f\xd2\x08\x4a\xa1\xb0\x5e\x83\x63\x6a\x68\x67\x5e\x33\x6d\x26\xce\x33\xf3\xef\x39\x3b\xc2\xda\x3a\xd7\x32\xdf\x57\x4d\x23\xcf\x6a\x79\x89\x71\xc2\x88\x46\x05\xeb\x81\xf9\x6f\xdf\xe0\xeb\xdd\x72\x98\xf1\xca\x89\x52\xc6\x34\xde\x6a\xd7\x2e\x38\xd7\xb0\xae\x8e\xbf\x3f\x9b\x24\x44\x6a\x4a\xd8\xd0\xad\x63\x5a\x60\x67\x99\x29\xbb\x27\x12\xf2\x79\x58\x0f\x04\xed\xb2\x66\x9b\xf2\x18\xe0\xec\xac\x54\xa3\x36\xed\xe5\x60\x75\x9b\x55\xf8\x3d\x84\x0d\xd3\x19\x6d\x68\x1c\x58\x4a\xaa\x7f\x36\xda\xd4\x55\xa9\xb9\x46\xeb\x40\xaa\xf3\xcf\x8e\xb7\x38\xd8\x45\x21\xbc\x72\xd0\x66\x98\x14\x51\xf2\x8e\xc4\xa8\xce\x81\xa7\x8c\x35\x7d\xd9\x46\xe7\x31\x31\xae\xa4\xee\x21\xdb\x1c\x35\xbe\x92\x92\x1c\x5f\x0b\xbe\x47\xa9\x07\x48\xef\xe6\xcb\x86\x93\x6c\xda\x5b\x84\x35\x14\x81\x31\xab\xdb\x30\xcf\x98\x34\x0e\x32\xff\x68\x1d\xce\xdd\xe4\xae\x3f\xa2\xde\x08\x8e\x35\xb3\x85\x82\xe3\x7f\x20\xa2\x4a\x51\xf5\x2d\xf5\x38\x43\x15\x25\x1d\xc3\x34\x76\x5a\xb4\x4b\xb1\x08\x53\x86\xb3\x69\xde\x67\x4f\xe7\x9e\xa5\xa9\x2e\xaa\xd9\xd4\x3a\xd1\xab\xfc\x94\xad\x6a\xaf\xb5\x64\xd3\x05\xf4\x2f\x0c\x21\xbc\xde\x11\xf9\x8b\x4d\x78\x1d\x8c\x9e\xa5\x21\x94\xcb\x22\xad\x76\x40\xba\x2b\xf7\x62\x0c\xa8\xd2\xb7\x36\x84\xf3\x4f\x21\xc3\xbf\x51\xa5\x3b\x20\x9d\x05\xe3\xb3\x0f\x5b\x3c\xa2\xdb\xd9\xd5\x34\xf7\x12\x29\xf6\x34\x44\x39\x5d\xc0\xb4\xf4\x94\xc6\xa4\xf1\xad\x6a\xa2\xf4\x89\xd2\xf7\x9b\x38\x35\x7f\xab\x4d\xd5\x31\xe6\xad\xb8\x6e\xf2\x7b\x87\x1d\xf2\xd9\x34\x2b\x8e\xfc\x69\x33\x74\x6d\x52\xd0\x79\xbe\xfd\x28\xd9\x39\x4c\xcb\x82\xaa\xcc\xa4\x59\x59\x65\x32\x67\x0f\x77\xcd\xb8\xe7\x30\x7d\x63\x48\xad\x41\xcb\x68\x2f\xb5\xaa\xab\xec\xe5\x97\xbb\xf2\x76\x48\x42\x53\x54\x05\x22\x8e\x05\xbf\x9a\x72\xe5\x9a\x16\x05\x4d\x8f\x3b\xbd\x86\x35\x4c\x8f\xa8\xa6\xcb\x2a\x8b\x5c\xcf\x97\x93\x7a\xf5\xf5\xcc\x75\xc1\x7d\x8a\x07\x5c\xb7\x5e\xcd\x9d\x10\x67\x36\x56\x51\x99\x7d\xff\x72\x39\x5d\x40\x63\x3c\x44\xff\x0e\x0f\x4d\x86\x72\xc2\x58\xce\xf7\x4f\xdc\x54\x2d\x05\x36\xc4\xcf\x7a\x53\x5a\x9e\xca\xba\xa7\x99\x9f\x55\x3d\xad\x15\xde\x57\xb8\x59\x9e\xa5\x14\x12\x19\xec\x7e\x26\xf2\xef\x29\xaf\x67\x6e\x9b\xda\xcc\x05\xb0\x80\x2f\x8d\xea\xa1\xc0\xf1\x12\xa2\x77\x33\x27\xbb\x98\x51\xf9\x0e\xbc\x80\x92\x09\x5e\x80\x93\xb5\xcb\xce\x3c\x17\x31\x73\xbe\x38\x06\xab\x71\x5b\xe6\x77\x42\x6d\xab\x4f\xb8\xd1\x65\xe3\x46\x69\x1e\x4e\xbf\x98\x3e\x71\x63\xaf\x89\x7a\xe9\xf3\x06\x23\x53\x2e\x99\x8b\xb3\xb8\x2c\x8d\x18\x6f\x8b\x7a\x36\xf5\x49\x42\x33\xab\x15\x4e\xa8\xd2\x20\x40\xa5\x66\xa5\xf1\x43\xa2\x49\xdd\xe8\xb6\xa8\xa8\x01\x77\x65\xb5\x2f\x7c\x02\x67\x67\xf6\xb3\x46\xd4\x99\xa9\xde\x6a\x41\x6e\x64\x09\x49\xb7\x6f\xf3\xb5\xa2\xe6\x29\x20\xca\xc1\x55\xdd\x56\x5e\x79\xf4\xd7\x2d\x2c\xaa\x5e\x31\x4a\xda\x2a\xce\xba\xcc\xa6\x44\x31\x15\xeb\xb4\xac\x16\x89\x61\x9c\xce\xe1\xdb\xb7\x26\x6f\x43\xbd\xb3\xb3\x86\xba\x9e\x1e\x82\xa9\x92\x8f\xbd\xd1\x33\xb5\xda\x49\xd7\xf7\xe1\x72\x87\x60\x59\x2e\x89\xdc\xa2\x56\x70\xa0\x8c\xc1\x06\x41\xef\x10\x52\x6e\x7c\x49\x44\x10\xa4\x52\x22\xd7\xec\x08\x64\x4f\x28\x33\x4d\x5c\x1b\x28\x8f\x0c\x98\x11\x1e\x66\x88\xa8\xe6\x60\x06\x06\x09\x6f\xa9\xd2\xa6\x60\xd0\xb9\x18\x11\xd9\x79\x4b\xe8\xb5\xb1\xde\x09\x6d\x14\x20\xba\xcb\x17\x93\x23\xec\xc8\x1e\x61\x83\xc8\x21\x44\x86\x1a\xc3\x05\x6c\x52\x0d\x87\x8e\x4e\x07\xcc\xb6\xa3\xb4\xf9\x2b\xa2\x08\xa5\x91\x1a\x03\x51\x20\x6c\xf7\xd6\x92\x9d\xbb\x5a\xc3\x20\x6b\xb8\xba\x5e\x36\xa8\x22\x21\x61\x56\x7a\xa9\xcd\x00\x94\x57\xae\xd2\xb6\xf2\x00\xb0\x97\xa4\x6a\x57\x65\x9e\x79\x53\xc6\xdd\xa4\x4f\x31\x85\x0c\x03\x8d\x61\x06\x91\x27\x92\x1e\x0d\xcd\x99\xd7\xfd\xa4\x4f\xa5\xc2\xf5\xab\x7d\xce\xfe\xf2\xdb\xfb\x77\x9e\x6d\x74\x1b\xdc\x66\xca\xd6\x82\xb6\xf7\x99\x7b\xf9\x59\x2c\x3b\x90\xa5\x61\x2a\x5c\x63\x99\x9a\x94\x3e\x45\x0a\x85\x9f\x55\xc1\x56\x71\x5c\x0f\x71\xdc\x6b\xd5\x8a\x7f\xde\xd5\xb2\xc7\xbc\x63\xcc\x3c\x02\xf9\x6e\xc4\x11\x26\x69\x06\xd8\x97\x27\xa0\x5e\x51\xf1\xbc\xad\xb3\xd7\xd2\xa0\x09\xa0\x20\x33\x09\x65\x51\x8e\x1e\xb8\x42\x2c\xdb\x6f\x22\x95\x01\x96\x7c\xd9\xf0\x61\x69\x19\xdd\xc7\x8f\x6f\xdf\xd4\xd8\xc6\xc8\xfb\xc0\x08\x2f\xda\x91\x44\xe2\xde\x2a\x6a\x71\x86\xd9\x7a\x4f\x62\xc8\x25\x8c\xe7\xb5\x42\xd7\xb4\xea\xbd\xb4\x55\x0c\xc3\x1a\x7e\x58\x02\x85\x55\xbf\x30\x8f\x21\xdf\xea\xdd\x12\xe8\x8b\x17\xf7\xf9\xa2\xc1\xea\x01\x80\x75\x3f\xec\x15\xbd\x1e\xd0\xcc\x3c\xf5\x5d\x5c\xf5\xf0\x5f\xdf\xb7\xb5\x42\x1b\x5d\xd1\x67\x37\x5b\xfb\x22\xed\x45\xee\x8f\x17\xc8\x63\xb4\x89\x79\x9f\x3d\x46\x6d\x23\xd3\xc5\xf8\x40\x4f\x24\xb4\x9f\xa6\x6c\x2f\x4d\x69\x38\xac\xec\xdd\x29\x61\xdf\x8c\x9a\xda\x37\x38\x76\x03\x8e\xb5\xf6\xa0\x24\x27\x4f\x87\xce\x39\xd8\xfc\xa9\xb4\xa4\x7c\x4b\xa3\xe3\xac\xbe\xfd\x79\xbf\x3e\x03\x47\xd8\xca\x15\x63\x73\x41\xcf\x96\x4e\x4c\x0b\x4d\x84\xc7\x64\x88\x3e\x84\x53\x93\x45\x13\x63\x30\x6f\xf4\x65\xe0\x5a\xd3\x55\x99\xb6\x5e\x0d\x8f\xaf\x85\x3b\xcf\x83\xc5\x71\x5e\xed\x67\xb5\xf8\x7d\xbd\xd8\x77\xb7\xdf\xdf\xd9\x77\xf7\x77\xdb\x45\x73\xd3\xd7\x31\xdb\xe7\xc1\xae\xdb\x22\xf8\x91\xf6\xed\xbf\x7e\x86\xba\xef\xec\x69\xf4\xe0\xcd\x6e\xf4\xce\x5a\xf2\x7e\x25\x6f\x38\x1e\x9e\x40\x51\x8e\x87\x93\xf5\xac\xba\xe0\x31\x8a\x9e\x97\x25\x9e\x7f\x83\x21\xd5\xff\x73\x4a\x07\x4c\x70\xfc\xaf\xd0\x7a\xf2\xdd\xdf\xc8\x74\xbe\x89\xb1\x3f\x36\xba\x98\x78\x91\x90\xf1\x9f\xa4\x48\x93\x32\x6b\xda\x40\x09\xa9\x4a\x18\x39\x9e\x03\x17\x1c\x6d\x58\x57\x94\x55\x76\x1c\x24\x6d\xfc\x27\x00\x1a\xdf\x04\x83\xa7\x30\xeb\xd5\x8b\x97\x3f\xdb\x3d\x00\x23\x1b\x64\x16\x31\x48\xa5\x12\xf2\x1c\xf2\xdf\x3f\x64\x98\x16\xe3\x1f\x14\x0f\x28\xc7\xe2\xb7\x7e\x80\xe1\xee\x08\x0f\x19\x36\x44\x90\x54\x0b\x83\xbf\xf2\x73\x83\xac\xfc\xec\xf7\x77\xff\x0e\x00\x00\xff\xff\x29\x43\x43\x79\x90\x27\x00\x00")

func staticxIndexFtHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticxIndexFtHtml,
		"staticx/index-ft.html",
	)
}

func staticxIndexFtHtml() (*asset, error) {
	bytes, err := staticxIndexFtHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "staticx/index-ft.html", size: 10128, mode: os.FileMode(420), modTime: time.Unix(1501622491, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticxIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x59\xeb\x6f\xdc\xb8\x11\xff\xee\xbf\x82\x55\x83\x5b\x1b\x58\x49\x4d\xaf\x28\x0a\x7b\x77\x81\xd4\xe9\x23\xe8\xe5\xf1\x21\x87\xa2\x08\x02\x63\x24\xce\x6a\x99\x50\xa4\x4a\x8e\x64\xef\xe5\xfc\xbf\x17\xa4\x1e\x2b\x69\x57\x8e\xec\x26\xb8\xfd\x60\x51\x9c\xd7\x4f\xc3\xdf\x90\x23\x79\xf5\xbb\x97\x6f\xaf\xdf\xff\xe7\xdd\xdf\xd8\x8e\x72\xb9\x39\x5b\xb9\x0b\x93\xa0\xb2\x75\x80\x2a\x70\x13\x08\x7c\x73\xc6\xd8\x2a\x47\x02\x96\xee\xc0\x58\xa4\x75\x50\xd2\x36\xfc\x4b\xe0\x05\x09\x58\x64\x3b\x83\xdb\x75\x10\x07\x9b\x33\x37\x45\x82\x24\x6e\xd2\x64\x4b\xab\xb8\x1e\xfb\x69\x29\xd4\xe7\x56\xd3\x12\x90\x48\xe3\xd4\xda\x18\x8a\x22\x4a\xad\x0d\x98\x41\xb9\x0e\x2c\xed\x25\xda\x1d\x22\x05\xf1\xe6\x01\xab\xc2\x08\x9b\x3f\xc1\x2e\xd1\x9a\x2c\x19\x78\x4a\x4c\x0e\x76\x97\x68\x30\xfc\x09\xb6\x46\xa4\x9f\xed\x0e\x6e\xa3\x5c\xa8\x49\xf3\x09\x7b\x29\x92\x18\x54\x56\x4a\x30\x61\x29\x42\x32\x88\x31\x17\x96\xc6\x93\xf3\x7c\x8f\x65\xc3\x60\x77\x1e\xad\x5b\x3b\xef\xe9\xd8\x70\xa7\x0d\xa5\x25\x31\x91\x6a\x35\xb2\x8d\xb7\x50\xb9\xe9\x48\xa4\xda\x59\xae\xe2\x9a\x3e\xab\x44\xf3\x3d\x53\x59\x08\x45\xb1\x0e\xd2\x24\xa3\x17\x45\x51\xb3\x87\x8b\x8a\xa5\x12\xac\x5d\x07\xa9\x56\x04\x42\xa1\xf1\x92\xa1\x4c\x41\x95\x80\x61\xf5\x25\x14\xaa\x42\x63\xb1\xbd\xdd\x8a\x3b\xe4\x21\xe9\x22\x60\x46\x4b\xf4\xda\x22\x03\x12\x5a\x35\xae\x1e\x0e\x74\x3a\x58\xe8\xb0\x0f\x74\x18\x5b\x41\xab\xa3\x2b\x34\x82\x63\x98\x18\x50\x3c\xe8\xf1\x9f\xf5\x7e\x2b\x91\x67\xad\x81\xd4\x99\x0e\x98\x35\xe9\x21\x5b\x22\xcf\xe2\x34\x89\x0a\x95\xd5\xd4\xe9\xcc\x62\xe8\x01\x8b\xb9\xa8\x7a\xb7\xa5\xec\xc1\x6c\x33\xa0\xa0\x1a\xe2\x94\x62\xb3\x82\x16\x95\x50\x1c\xef\xd0\xc6\xc1\xe6\x55\x3d\x72\x01\x56\xb1\x14\xfd\x28\xa5\xfc\xff\x82\x28\xcd\x7d\x88\x37\xee\xfa\x3d\x02\xe4\x5a\x09\xd2\x26\x0e\x36\xaf\xeb\xd1\x77\x09\x02\x0a\x32\x74\x31\xfc\xe0\x7b\x84\x90\x3a\x73\x79\xfa\x49\x67\x4f\x4f\x53\x3b\x34\x22\xdb\xd1\x38\x56\x6b\xc2\x8d\x2e\xb8\xbe\x55\x63\x52\xc2\x58\x21\x24\x9d\x65\x12\x03\xc6\x81\xa0\xb9\xe9\x99\x0f\xac\x19\x6b\x9e\xe3\xf7\x6d\xb1\x25\x25\x91\xdb\x09\xc0\x08\x08\xf1\xae\x00\xc5\x91\xaf\x83\x2d\x48\x8b\xa3\xd0\x8c\xb1\x7f\xa2\x2c\xd8\xca\x16\xa0\xba\x6a\x04\x83\x14\x6c\x56\xb1\x9b\x1c\x41\xed\x17\xc2\x28\x21\x1d\xf8\x1c\x55\xd9\x62\xf1\xe3\x71\xcc\x41\xfa\x77\x44\xc5\x65\x1c\x4b\x48\x6c\x94\xea\x32\xdd\xb9\xe3\x2b\x4a\x75\xee\xb7\xbc\x71\x01\x77\xbf\x7f\x20\x91\x50\x19\xb3\x04\x86\x90\x1f\x01\x73\x58\xfb\xeb\xf8\xf8\xc8\x1c\xab\x30\x2b\x05\xc7\xd8\x6d\x2d\x95\xc0\xdb\x29\x2c\x2f\xb1\x42\xa9\x0b\x34\x0b\xcb\xbc\xc5\x77\x40\x03\x3c\x17\x6a\x26\x9e\x17\x4e\x57\xb8\x33\x95\xf4\x13\x30\x75\x0b\x2a\x2a\xe1\xf7\xdb\xb9\xd8\xb7\xda\x94\xf9\x18\xfd\x14\xc8\xeb\x56\x8b\xa5\x3a\xcf\x4b\x25\x68\xcf\x6a\x07\xb3\x90\x0e\xeb\x72\xac\xd1\x97\xf6\xf6\xeb\x66\x78\x74\x98\x19\x7d\x3b\x71\x2e\xc9\xd0\xe6\xe1\xf3\x3f\xb0\x66\xa4\xb7\x5b\x8b\x14\x3e\x67\x39\x08\x35\x3e\xac\x54\x16\xba\x55\xd9\x0c\x0e\x88\xe3\xe8\xdd\x60\x15\xbb\x53\xb8\x3e\xce\x6d\x6a\x44\x41\xc3\xd3\xc8\x35\x19\x9f\xfe\x5b\xa2\xd9\x37\x97\xf0\x8f\xd1\xf3\xe8\x79\xf4\xc9\xfa\xe2\xf4\x16\x9b\xf9\xc6\xa5\xf0\xdd\xc8\x6c\x6b\xfe\x63\x54\xfd\x38\x5f\x7d\xd0\x4e\xcd\xb6\xda\x95\x39\x28\xf1\x0b\x3e\xce\xaa\x6b\x19\x7b\xcd\xe3\x6c\xe3\xa6\x45\x6b\xaf\x8f\x36\x0c\x0f\xd1\x4b\x71\xb8\x79\xdc\x13\x3c\xec\x2b\xa4\x42\xda\xa7\x39\x34\xba\x24\x1c\xde\x3d\xcd\xd1\x57\xdb\xda\xf9\x34\xb4\x5a\x15\x5a\x28\xc2\x47\x24\xbb\x7e\x9b\x18\xaa\x4f\xe9\x7f\xb2\x31\xde\x15\xd5\xdc\xb5\xfc\x64\xeb\x06\x6c\xb6\xb6\xeb\xa4\x66\x2b\x37\x5d\xd1\x7c\x7d\xdf\xd7\xcc\x56\x77\xcd\xca\x6c\x65\x5f\xf8\xb3\xb5\x93\x3f\xff\x69\x7e\xc2\xb7\x42\x12\x9a\xf9\x50\xac\x3b\xb2\x52\x9c\x6f\xc0\x85\xc1\x94\x44\x75\x64\x32\x61\x13\x26\x12\x2b\x0c\x73\x28\x0a\xa1\xb2\x3a\xb3\xf5\xd0\x2f\x76\x2b\x98\x15\x7f\xda\x17\xed\x0b\x9c\x70\xf5\x68\x5f\xa0\x40\xee\xad\x98\x97\x92\xaf\xbb\x09\xfd\xe0\x97\x99\x45\x36\xc3\xdf\xad\x36\x5c\x0a\x4b\xdf\xca\x5f\xba\x03\x53\xd3\xe6\x5b\x79\x24\xfd\x19\xdd\xe9\xf1\x6d\x1d\x9e\xc4\x38\xe1\xf3\xce\x53\x15\x93\x72\x26\x1b\x9c\x3a\x14\x33\x4f\xab\x4f\x36\x76\x6f\xc6\x46\x4b\x79\x5c\x6a\x67\xab\x76\xb4\x2d\x55\xea\x5e\xad\x99\x7f\xbe\x37\x78\xeb\x5f\x2a\x5f\xd7\xcf\x76\x7e\xc1\xbe\xf8\xee\xc3\x20\x95\x46\x35\x37\xee\x17\x38\x2e\xdb\xe0\x92\x7d\xb9\x5f\x1e\x26\x39\x6e\xa1\x94\x74\xd3\xa4\xc6\x89\x07\x7d\x57\x80\x0a\x12\x89\x3c\xb8\x64\x64\x4a\x5c\x0e\x85\x7c\xaf\x20\x17\x69\x23\xec\x64\xfd\x00\x2e\xea\xcd\x56\xa0\x74\x2e\xfc\x5d\x70\x22\xbc\x9f\xbf\x64\xc1\x4d\x33\x71\x4a\xa7\xe5\xbb\xd3\xb3\x04\x8a\x83\xe1\xa7\xf4\x38\x10\x92\xc8\xf1\xa6\x00\x63\x6b\x75\x37\xf5\x5e\xe4\xf8\xb6\x70\x89\x03\x79\xca\xac\xc3\x78\x03\x72\xa0\xd0\xb2\xe5\x38\x37\x2d\xa2\x71\x56\xbd\xd0\xd1\xff\xa6\xd9\x36\x4f\xc9\x3b\x32\x4f\x4b\xbf\x6a\xee\x96\xad\x96\x1e\x72\x7f\x56\xff\xbd\xbf\x3a\x1b\x31\xe5\x9d\xe7\xc9\x2b\x25\xe8\xba\x63\xd9\xb9\x50\x82\xfe\x25\x14\x5f\x32\xbf\x6d\xbe\x03\x03\xb9\x6d\x6e\x7e\x7e\x55\xc7\x7c\x66\x53\x5d\xe0\x92\x3d\x73\x7d\xff\x92\x3d\xf3\x5d\x46\x7b\x6d\x2d\x9e\x49\x9d\xfa\x2f\x3e\x7e\x98\x2d\x9d\x95\x53\x2a\x45\xf2\x5a\x73\x90\x2d\x2f\xc5\x96\x75\x41\xd9\x7a\xcd\x02\xff\x66\x73\xd1\x4b\x6d\x1d\x2e\x72\xf3\x6f\x95\xdc\xb3\xb5\x27\xd7\x55\xf3\x5c\x3d\x44\x91\x47\xf9\x1e\xf3\x42\x02\xa1\x65\xeb\x89\xf9\x5f\x7f\x65\x5f\xee\xaf\xa6\x0d\x3f\x04\xdb\x52\x4a\xc2\x3b\x0a\xbd\x20\xf8\xc8\xd6\x87\xe5\x3f\xbd\x9b\x14\x60\x48\x80\x9c\x3a\x75\x76\x94\xcb\xe0\xaa\x06\x5b\x81\x61\xcd\x3c\x5b\x4f\x14\xed\x55\x2f\x37\xdd\x32\xb0\x1f\x7e\xe8\x60\xf4\xa6\xa3\xc6\x59\x3f\x67\x07\xff\x27\x14\x07\xa9\x73\x68\x44\x9e\x7a\x4d\x41\x7f\x75\x68\xfa\x50\x7a\xd4\x18\x2d\xc8\x61\xfd\xeb\xe5\x6d\x17\x76\xd9\x06\x3f\x10\x74\x58\x26\x6d\x95\xbc\x81\x1c\xed\x25\x53\xa5\x94\x43\x2e\xfb\xea\xdc\x17\x8e\x4a\xf6\x01\xb5\x64\x4f\xf8\xc2\x18\xd8\x5f\x6b\x55\xa1\xa1\x09\xd5\xfb\x8b\xab\x01\x49\x92\xf1\x23\xb2\x35\x6b\x0b\xe3\xbc\x9f\xc3\x66\xc7\x14\x79\x5a\xf3\x63\xb4\x38\xf7\x67\xf7\xa7\x2b\xea\xa5\x56\xd8\x4b\x1b\xd7\x0a\x7f\x83\x8a\xea\x42\xf5\x1f\xe9\x04\x19\x0e\x55\x72\x94\x98\xc1\x93\xb6\xaf\x4b\xb9\xe6\xa5\xc4\xf3\x45\xf3\xd1\x78\x71\x11\x79\x9d\xc3\x41\x75\xbe\xf0\x24\x7a\xd1\xac\xb2\x87\x76\x4d\x46\x2e\x96\xec\xb4\x60\xca\xc3\xf5\x0e\xcc\xdf\xfd\x86\x77\xe4\xe3\x84\x68\xca\xcb\xfb\x76\x5b\x3d\x72\x72\x2c\x79\xd0\xc7\x04\x94\x53\xb2\x29\x3f\xff\xd6\x86\xff\x24\x2c\x1d\x39\x39\x12\x38\xce\x7e\x3d\xe3\x5b\x91\x9d\x7f\x58\x34\x2c\x31\xda\x7f\xae\x59\x2c\xd9\xa2\x63\xca\x60\xd2\x71\xeb\x30\xd1\x71\xa2\xe3\xfe\xd0\x4f\x8f\x6f\xbd\xa9\xbe\x8f\x8b\x51\x5d\x0f\xed\xa3\xdb\x1d\xaa\xf3\x45\xdd\x1c\xc5\x8b\xe5\xd1\x57\xa0\x2f\xd4\xec\xb7\x3f\x1b\x79\xc9\x16\x5d\x43\xd5\xed\xa4\x75\x5b\xe5\x76\xce\x13\xd6\xbd\xe4\x5e\xb2\xc5\x4b\xa7\xea\x13\xda\x55\x7b\x87\xaa\x0f\x39\x6a\x0e\x77\x1b\xd5\xff\x4b\xb0\x51\xaa\xf3\x5c\xab\x0f\x0b\x65\x43\xf7\x8a\x82\xee\x1d\x77\xf1\x91\xad\xd9\x62\x8f\x76\x71\x75\xd8\x45\x3e\x5e\x5c\x9d\x1d\xba\xaf\x55\x5c\xff\x7f\xee\x7f\x01\x00\x00\xff\xff\x03\xa7\x1b\xbd\xb0\x1b\x00\x00")

func staticxIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticxIndexHtml,
		"staticx/index.html",
	)
}

func staticxIndexHtml() (*asset, error) {
	bytes, err := staticxIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "staticx/index.html", size: 7088, mode: os.FileMode(420), modTime: time.Unix(1501784608, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticxJsDebugJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x54\x5f\x8b\xa3\x3e\x14\x7d\xef\xa7\xb8\x0c\x05\x23\xed\x4f\x7f\x0f\xcb\xbe\x14\x17\x86\x29\x0b\xc3\xfe\x61\x19\x76\xfb\xb2\xec\x43\xaa\xb7\x6d\x98\x98\x48\x12\xed\x0c\x8b\xdf\x7d\x51\x69\x6b\xa2\x55\xb7\xec\xf8\xa4\xc9\xb9\xe6\x9c\x73\xcf\xcd\x2e\x17\xb1\x61\x52\xc0\x1a\xb7\xf9\xfe\xc1\x28\x4e\xe6\x3a\x96\x19\x2e\x61\x7e\x30\x26\x5b\xc2\x5c\xc9\xdc\xe0\x37\xaa\x68\xaa\x97\x30\xe7\x72\xef\xc3\xef\x19\x00\x40\x03\x0c\x32\x26\x12\x7c\xf9\x4a\x53\x84\x08\xee\xee\x56\xed\xbd\x44\xc6\x8f\x49\xef\xf2\x13\xea\x9c\x1b\x0d\x11\x88\x9c\x73\x77\xb7\x66\x33\x00\xd9\x31\xe4\x89\x1e\x00\xa0\x52\x52\x7d\x41\xad\xe9\x1e\xfb\xf6\x53\xfa\xf2\xe9\x33\x0a\x88\xe0\x7f\x77\x7d\x73\x5e\x6f\x6f\xec\xd1\x7c\xac\x0f\x85\x08\x4e\xa6\x91\x93\x13\x93\x98\x8d\xb1\xbb\x80\x2a\xe3\xab\x03\x89\x17\xd2\x8c\x85\x8d\xc1\xff\x6d\x39\x16\x18\x7a\x8b\x8e\xed\x0b\x2f\x6c\x4e\x0d\x3d\x3f\x38\xff\xc5\x1c\x50\x90\x33\x53\x85\x3a\x93\x42\x63\x9b\x71\xf5\x14\x54\x41\x42\x0d\x85\x08\x4e\x90\xa0\xfa\x5e\x59\xa8\x2b\xda\x6c\x60\xb9\x84\x7f\x7b\x9c\xe3\x92\x73\x9a\xdf\xbc\x97\x56\x97\x92\x2a\x37\x6b\x19\x8f\x34\xe9\x4a\xfe\x26\x66\x70\x4a\xcc\x86\xa2\x36\x18\xb7\x1b\x03\x90\xc8\x38\xf4\x16\x96\x8b\xcd\x83\x22\x96\x09\xfe\x78\x7a\x7c\x90\x69\x26\x05\x0a\x43\xda\xb3\xe9\xbf\x6d\x62\x2c\xa3\x1b\x94\x0d\xbb\x49\x69\xdd\x99\x7e\xb9\x7f\x29\x79\xba\xec\xe9\xd2\x5b\xf2\x33\x25\x63\xd4\x7a\x6d\x87\x89\x54\x35\xbe\x5d\x34\x65\x78\x6e\xa2\x30\x38\x44\xd0\x1a\xa4\xa9\x2c\xde\x60\x84\xed\x9b\xb6\xdf\xb4\xf6\x44\xd7\xfe\xf5\x4e\xb5\x53\xe1\x24\x6e\x27\x15\xa9\xe8\x33\x60\xe2\x4a\x51\x9f\x5a\x25\x8f\x10\x5d\xc1\xff\x64\xbf\x6c\xe1\x4a\x1e\x83\x67\x88\x80\x1a\xb9\x25\xf5\x07\xbe\xfa\x81\xce\x38\x33\xc4\xf3\x9c\xae\xb3\x1d\x34\x98\x80\xa3\xd8\x9b\x03\x7c\x70\x2e\x8d\xbe\x08\x74\xae\x95\xf6\x1f\x9c\xde\x76\xa9\x31\x88\x60\x4b\x35\xbe\x7f\xb7\xc6\xf8\xbb\xbc\x57\xea\xcc\xb2\x2b\xa4\x68\x0b\x29\x28\x1f\x15\x52\xf4\x09\xd9\x8c\x0a\xd9\x5c\x84\x14\x23\x42\xca\x99\xdb\xf6\x67\x8e\xc2\xb0\x14\xeb\x4b\x1a\x8f\x70\xaf\x14\x7d\x25\x8e\x8f\x9d\x9b\xb7\x18\xa9\xda\x5c\xaa\xca\xd5\xac\xfc\x13\x00\x00\xff\xff\x54\x3d\x8e\x3e\x28\x09\x00\x00")

func staticxJsDebugJsBytes() ([]byte, error) {
	return bindataRead(
		_staticxJsDebugJs,
		"staticx/js/debug.js",
	)
}

func staticxJsDebugJs() (*asset, error) {
	bytes, err := staticxJsDebugJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "staticx/js/debug.js", size: 2344, mode: os.FileMode(420), modTime: time.Unix(1500601429, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticxPartialsDebugRowsHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x90\x31\x6f\x83\x30\x10\x85\x77\x7e\xc5\xf5\xd4\x95\x92\x2a\xea\x66\x98\xba\xa5\x53\x86\x2c\x55\x07\x83\x4f\xb1\x85\x63\x23\xdb\x08\x22\xe4\xff\x5e\x01\xa6\x89\xda\xa5\x4b\x26\xdf\x93\x3f\xdd\x7b\xef\x98\xdc\x57\x47\x3b\x78\x56\xc8\x7d\x95\x65\x2c\xf0\x5a\x13\xd4\xd6\x09\x72\x25\xee\x10\x1a\xcd\xbd\x2f\x51\x50\xdd\x9f\xb1\xca\x00\x58\x70\xf3\x33\x0f\x12\x1a\xab\x7d\xc7\x4d\x89\xd3\x74\xe1\xe3\xe1\x83\x4c\x8c\x58\x1d\xe8\xca\x8a\x20\x13\xf6\x94\xe7\x7f\xd1\x53\x42\x4f\x5c\xf7\xb4\xc0\x79\xbe\x6c\x2f\xd6\xf5\x2c\x38\x30\xe7\xdc\x51\x47\x3c\x94\xe8\xec\x00\xca\x80\xb0\xcd\xfb\x1c\xe4\x48\xbe\xd7\xc1\xe3\x16\x44\xac\x03\xc0\x34\x39\x3b\xc4\x98\xd4\xaf\x36\xaf\xb8\x61\x77\x2d\x36\x29\x60\x50\x22\xc8\x12\xdf\x76\xdd\x88\xf7\xde\x8d\x9c\xad\x5b\x4d\x26\xa8\x0b\x79\x08\x8e\x37\x2d\xd4\x57\x78\x56\x46\xd0\x88\xd5\x62\xfa\xd2\x7e\xae\xfa\x2b\x46\x56\xdc\x12\xdd\x2a\x3d\xcc\x58\xfd\xc7\x99\x15\xcb\x31\xd2\xc5\x12\xb6\x02\x3f\x5f\xdf\x01\x00\x00\xff\xff\x63\x5f\x1c\x85\x0d\x02\x00\x00")

func staticxPartialsDebugRowsHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticxPartialsDebugRowsHtml,
		"staticx/partials/debug-rows.html",
	)
}

func staticxPartialsDebugRowsHtml() (*asset, error) {
	bytes, err := staticxPartialsDebugRowsHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "staticx/partials/debug-rows.html", size: 525, mode: os.FileMode(420), modTime: time.Unix(1485286021, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticxPartialsDebugHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x94\xc1\x8e\x9b\x3e\x10\xc6\xef\x3c\xc5\xc8\x97\xdd\x3d\xf0\xf7\x3f\xdd\x4b\x0f\xc0\x29\x6a\x95\x43\xab\xaa\x6f\x60\xec\x01\xac\x35\x1e\x64\x9b\x6c\xb6\x51\xde\xbd\xb2\x81\x12\xb2\x95\xda\x6e\x9b\x43\x04\xf6\xcc\xef\xfb\xfc\xa1\x71\xd1\xed\x40\x1a\xe1\x7d\xc9\x06\xd1\x62\xde\xa1\x50\xe8\x58\xb5\xc7\x7a\x6c\x0b\xde\xed\xaa\x2c\x2b\x94\x3e\x82\x6d\x73\xdf\xd1\x73\xc9\xd0\x39\x72\x9f\xd0\x7b\xd1\x22\x5b\x7a\x85\x41\x17\x20\xfd\xe7\x4a\xd8\x16\x5d\x6c\x90\x86\xc4\x13\x03\x47\x06\xe7\x12\x56\x65\x00\xe7\xf3\x35\xe3\x72\xc9\x0a\xae\xf4\x31\x0a\x35\xe4\xfa\x05\x19\x9f\xf3\x8e\x9c\xfe\x46\x36\x08\xb3\x60\xe2\x72\xa2\x24\x57\xd7\xb5\xad\xa3\x71\x48\x5b\x00\x85\x11\x35\x1a\x68\xc8\x95\x4c\xdb\x61\x0c\x5f\x0e\x56\xe1\xe9\xb3\xe8\x57\xcf\x92\x4c\xee\xfb\xfc\x1d\x48\xb2\xc1\x91\xc9\x53\xcf\x0c\x00\x98\x3a\x20\xb6\x4c\x48\x9e\xf6\x67\xfe\x95\xf8\xcc\x79\xff\xa3\xb3\x48\x8a\x31\x80\x9e\x14\x9a\x92\x0d\x7a\x15\x0f\x2f\x03\x96\x2c\xe0\x29\xb0\x8d\xfb\xd9\x04\x9b\x19\xf3\x4f\xab\x9f\xf8\x1f\x8c\x90\xd8\x91\x51\xe8\x4a\x76\x5f\x1b\x3c\x22\x4c\x12\x60\x45\x8f\x0f\x4b\x06\x53\xaa\xd7\x0f\x7f\x14\xd9\x9e\xe4\xef\x66\xb5\x27\x09\x87\xfd\xdf\xc6\xa4\x48\x1e\xd4\x9b\x13\x4a\x76\xb7\xd1\x28\x92\xa0\xd5\x5b\xf3\x78\xed\x9d\x9a\xc6\x63\x48\x29\xa4\xf7\xdd\xff\xeb\x61\xea\x31\x04\xb2\xb3\x79\x3f\xd6\xbd\x5e\xed\xd7\xc1\x42\x1d\x6c\x3e\x38\xdd\x0b\xf7\x72\x73\x82\x69\x52\xb4\x7c\x2a\x99\x8a\x53\xb7\x27\x79\xff\x30\x4f\x60\x4c\xb6\xe0\x13\xfb\xdf\x4a\xb5\x18\x3e\x68\x34\xca\x47\xad\x8f\x18\x60\x7a\xdb\x8a\xdd\x46\x56\xf0\x18\xd3\xab\x2b\xa1\x49\xad\x5f\xd1\x8f\x26\xf8\x69\x38\xbb\xc7\x6a\x01\x76\x8f\x69\x65\x70\x58\x9d\xcf\x9b\xd2\xcb\xa5\xe0\x71\x79\xbd\x00\x36\x58\x45\xf2\x96\x99\xe2\xd8\x00\xd7\xa2\x5f\xd3\x52\xa4\x0b\x32\xee\x68\x2b\xcd\xa8\xa6\xf9\x06\xef\x64\xc9\xee\xb8\x0f\x22\x68\x79\xe2\x83\x70\x41\x0b\xe3\x79\xfa\x28\xb9\xa3\x67\xff\x5f\x17\x7a\x73\xc7\x78\x95\x65\xdf\x03\x00\x00\xff\xff\xd5\x2e\xf4\xc1\x38\x05\x00\x00")

func staticxPartialsDebugHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticxPartialsDebugHtml,
		"staticx/partials/debug.html",
	)
}

func staticxPartialsDebugHtml() (*asset, error) {
	bytes, err := staticxPartialsDebugHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "staticx/partials/debug.html", size: 1336, mode: os.FileMode(420), modTime: time.Unix(1485286021, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticxPartialsIndexFtListHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x57\x5b\x6f\xdb\x36\x14\x7e\xf7\xaf\x38\xe1\xb6\x5e\x80\xd0\x5a\xb1\x61\x40\x33\x49\xc3\x8a\x62\xc0\x1e\xd6\x02\x43\xde\x07\x4a\xa4\x25\x36\x34\x29\x90\x47\x71\x02\xd7\xff\x7d\x20\xa9\xab\x2d\x27\x45\x57\xb4\x1d\x50\x3d\x38\x92\x78\x78\xf8\x7d\xdf\xb9\x45\x29\x97\xb7\xa0\x2b\xea\x6a\xb3\xcb\x88\xb0\xd6\xd8\xbf\x84\x73\xac\x12\x04\x4a\xc5\x9c\xcb\x08\x53\xc2\x22\x84\x5f\xca\x99\xae\x84\xf5\x1b\x4a\x65\xd8\x0d\x01\x6b\x94\xe8\x4c\x48\xbe\x02\xd8\xef\xa7\x3e\x0e\x87\x55\x9a\x70\x79\x9b\xaf\x56\xe1\xa0\xce\xa3\x13\xcc\x96\xf5\x2b\x66\xc1\x9a\x5d\xd8\x36\x5d\x2d\x8d\xa2\x6e\x4b\x7f\x09\x0b\x00\xa9\x13\x4a\x94\xe8\xcf\xe4\xd2\xb1\x42\x09\x9e\x91\x0b\xa9\xb9\xb8\x7b\xc3\xb6\xc2\x91\x60\xd5\x5f\xba\xa2\x5b\xc3\x85\x9a\x1c\xf2\xa7\x37\x3d\xb1\x32\x0d\x4a\xa3\x5d\x46\x10\x36\xc6\x02\x82\xd4\x70\xce\x69\x07\x6c\x63\xec\x96\x96\x46\xa3\x35\xaa\x03\x07\x90\x46\x47\x70\xcb\x54\x2b\x32\x42\x72\x4a\xa1\xac\x8d\x71\x02\x36\xad\x52\x80\xe2\x0e\xa3\x63\x30\x16\x98\x92\xcc\x01\xa5\x69\x12\xb7\x75\x14\x93\xc8\x31\x28\x11\xf5\x7a\x48\x92\xe9\x8a\xd4\x4d\x8b\xb4\xb2\xa6\x6d\x7a\xbd\xc2\xab\xb3\x72\xc1\xfb\xf7\x70\xf1\x80\x36\x8b\x02\x36\x2d\xce\x8c\xf0\xbe\x11\x19\xf1\xd4\x66\xaf\x97\x74\x9a\xae\x37\x8a\x95\xa2\x36\x8a\x0b\xdb\xbb\xf7\xe2\xaf\xd7\x6b\x92\x74\xe0\x97\xa9\xd1\x02\xf5\xa8\x78\xd1\x22\x1a\xdd\x9b\x15\xa8\xa1\x40\x4d\x1b\x2b\xb7\xcc\xde\x93\x0e\x9c\x6b\x8b\xad\x9c\xc3\x8b\xec\x3e\x4a\x95\xb8\xb5\x54\xb2\xbc\x99\x08\xf3\x77\xab\x9f\xcd\x37\x5d\xc2\x5c\xb5\xe7\x03\x6a\x1f\x98\x1e\x72\xa5\xee\x9b\x5a\x96\x46\xc3\x70\x47\xe3\x3e\x92\xa7\x89\x1c\x88\x26\x91\x69\x9f\x24\x5d\x62\x4c\x52\x24\xde\x4c\x4b\x2c\x5f\xcd\x34\x54\xd2\x61\x00\x26\xdc\x49\x9d\xf5\xb5\x07\x90\x32\xa8\xad\xd8\x64\x24\x91\xd1\x36\xf9\x47\x8b\xdd\x6f\xe1\xe1\xda\xab\xe9\x33\xd9\x47\x9b\x86\x57\x4f\x9c\x69\x6d\x29\xc2\x4a\x69\xda\xb2\x2e\x98\x13\x83\x5c\x9d\xf7\xa6\x55\x8a\x5a\x59\xd5\xf8\x58\xe0\xb8\xd8\xb0\x56\x61\xb8\x77\x5b\x98\x6c\x9c\x87\xf2\x43\x95\x6c\x54\xeb\xa2\x8e\xf0\x46\xec\xe0\x0f\x5f\x85\xd7\xbe\x0a\x83\x10\x67\xb4\x65\x7d\xb3\x69\xd8\x00\x50\xb3\xdb\x82\x59\x1a\xd2\x3c\x3f\x72\x23\x5c\x9a\x78\xdb\x49\x18\xfc\x1d\xfa\xd4\xea\xf7\xc7\x87\xf0\x4b\x1d\x5a\xd9\x08\xde\x0b\x8e\x76\xc2\x06\x6b\xd0\x66\x67\x59\x93\xfb\x5c\x4c\x13\xac\x97\x16\x61\x27\x39\xd6\x19\x79\xf9\xf2\x07\x92\xbf\x6a\xcb\x1b\x81\xe7\x4c\xf3\x71\x21\x4d\xfa\xa3\x52\x0c\x7d\xdb\x8a\x46\x30\xcc\xc8\xb3\x21\xf9\x2f\x63\x7b\x7a\x2d\x36\xcf\x87\x26\xf8\x5a\x6c\x26\x3d\x50\x57\x54\x6e\x7c\x41\xc6\x95\xb5\x0f\x0b\x5c\x64\xf0\x74\xc8\x8b\xd0\xd7\x9e\x4e\x43\x84\x7c\x00\x73\x92\x5d\xfb\xfd\x70\xf8\xe1\x40\xf2\xd9\xa3\x0f\x45\x9a\x20\x5f\x74\x35\x29\xc9\x18\xa9\x63\x64\x63\x66\x06\x7c\x43\x76\x4e\xa1\xf9\xab\x3b\x72\xbe\xe5\x70\x98\xd9\x3c\xd1\x85\x6b\x7e\x4d\xe2\x9f\xe9\xc9\x43\xe0\xcf\x7a\x8b\x54\x46\x06\x1f\xc0\x67\x2c\x8f\xb1\xd1\x08\x2e\x63\xf5\x8e\xc1\x7a\x7e\xdc\x96\xe2\x15\x0b\x25\x3a\x20\x0f\x17\xd8\x91\x12\x27\x59\xbf\x54\x52\x1e\x88\x2f\xa9\x40\x1c\xfc\xd3\x1c\xf9\xac\x98\xce\xf3\x29\x95\xd1\xe2\xab\x20\xe4\x7b\x04\x75\xb2\xd2\x23\xab\x00\xee\xa3\x68\x71\xa1\x04\x7e\x1d\xbc\xd0\x32\x57\x0f\x9c\x1e\x61\x33\xa6\x65\xdf\x25\xd2\x24\x74\x2b\x3f\x44\xfa\x9e\xb6\x38\x4d\x7e\xf7\xe5\xfe\x89\x46\x4a\x68\x1d\xd3\x91\xa2\xa5\xfa\x1f\x0c\x93\x20\xc1\x7f\x1f\x26\x9d\x92\x5f\x74\x98\x5c\x33\x5b\x09\x3c\x1e\x94\x1e\xd4\x17\x1c\x2f\xd9\x67\x1c\x2f\x8b\x73\x65\x60\x82\x41\x9e\x48\x25\xde\xbf\x2d\xde\xcd\xb8\xac\x1b\x66\xd9\xd6\xbd\x2d\xde\xad\xa3\x81\x3b\xaa\xdd\x25\x8c\xa3\x5b\x0f\xf2\xa8\xd4\xe7\xcb\x01\x74\x8f\x2b\x7e\xa9\x5d\x7c\xaf\x98\x43\x92\x5f\x2e\x8c\xa3\xe3\x37\xdf\xc6\xcf\xb7\xf1\xf3\x79\x78\x7d\xea\xf1\x33\x7c\xd9\x38\xbc\xf7\xef\xd7\xc3\xd7\xd5\x25\xac\x27\xdf\x36\xb0\x5f\x01\x34\x8c\x73\xa9\x2b\x5a\x18\x44\xb3\xbd\x82\x9f\x7e\x6c\xee\xfc\xff\x6d\x85\xb1\x5c\xd8\xe1\xf5\x8b\xe6\x0e\x9c\x51\x92\xc3\x77\x9c\x73\x6f\xb0\x65\xb6\x92\x7a\x30\xf8\x39\xec\x3b\xac\x56\xb3\x13\x72\x58\x5b\xb3\x9b\x1e\xdb\xb5\xee\x6e\x25\x40\xe8\x3c\x85\x81\x73\x05\x2f\x16\x1d\x05\x8a\x4b\x7e\x62\x87\xdf\x0f\x88\x4f\xa1\x2e\xba\x02\xb4\x80\x7c\xae\xc7\xdc\x65\x34\x38\xb7\xb5\x7e\x6c\x6b\x1d\x30\xed\x6a\x89\x82\xba\x86\x95\xe2\xaa\xeb\x1f\x1e\x50\x9a\x74\xa1\xf9\x37\x00\x00\xff\xff\xe7\x3f\x9a\x5e\x49\x12\x00\x00")

func staticxPartialsIndexFtListHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticxPartialsIndexFtListHtml,
		"staticx/partials/index/ft/list.html",
	)
}

func staticxPartialsIndexFtListHtml() (*asset, error) {
	bytes, err := staticxPartialsIndexFtListHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "staticx/partials/index/ft/list.html", size: 4681, mode: os.FileMode(420), modTime: time.Unix(1485286021, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticxPartialsIndexFtNewHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x59\x5b\x6f\xdb\xb8\x12\x7e\xf7\xaf\x98\xe8\xa1\x4e\x00\x2b\xea\xe9\xcb\x39\xc8\x91\x0c\x74\xbb\x17\x14\xd8\x2d\x0a\xa4\x7d\x0a\xfa\x40\x49\x13\x9b\x30\x2d\x0a\x24\xe5\x24\x75\xfd\xdf\x17\x24\x75\xa1\x2e\xb6\x25\x23\x5b\xac\x1f\x62\x49\x9e\x1b\xe7\x1b\x7e\x33\x62\xc2\x94\xee\x20\x5b\xf9\xf4\x31\xf2\xb6\xa8\x88\xb7\x9c\xcd\x42\xce\x20\x61\x44\xca\xc8\x8b\x05\x92\x34\x11\xc5\x36\xf6\x96\x33\x80\x90\xd1\x65\x28\x73\x92\x55\xbf\xaf\xd8\x4b\xbe\xa6\x09\xcf\xa0\xbe\xf2\x63\xce\x37\xde\x32\x0c\x18\xad\x54\x66\x00\x00\x21\x81\xb5\xc0\xc7\xc8\x0b\x68\x96\xe2\x33\x4a\xcf\x3e\x07\xf8\x68\xef\xad\x54\x40\x8c\x56\xa3\xad\xa3\x93\x6b\xfe\x14\x79\x54\xfe\x96\x52\xe5\x2d\xf7\xfb\x0c\x9f\x8c\xd2\x27\xb2\xc5\xc3\x61\x50\xf8\xaa\x92\x36\x66\x3f\xe1\x93\x75\x63\x9d\x98\x25\x94\xab\xae\x6c\x7d\x79\xc9\x11\xde\xbc\x81\xd6\x7d\x14\xc1\xfc\xb1\x60\x4c\xe1\xb3\xf2\x09\xa3\x44\xce\xbd\xe5\x7b\xfd\x1d\x06\xda\x48\x13\x6b\x18\x70\xa6\x73\x57\xe6\xd3\x06\x81\x42\x70\xf1\x17\x4a\x49\x56\xe8\x55\x39\x23\x0c\x85\x02\xf3\xd7\x4f\x49\xb6\x42\xa1\x15\x12\xc6\xc9\xc6\x03\xc1\x19\x96\x22\x26\xf4\xfd\xde\xb5\x71\x38\xcc\xc2\x20\xa5\x3b\xed\xe8\x91\x8b\x6d\x65\xd2\x5c\xeb\x3f\xfe\x9a\x0b\xfa\x9d\x67\x8a\xb0\xca\x96\x7e\x6c\xc1\xd3\xa1\x39\x0a\xfe\x4a\xf0\x22\x37\x6a\x7f\xe8\xab\x3a\xa3\x65\xce\x42\x46\x62\x64\xfa\xf7\xc8\xa3\x59\x5e\xa8\x46\xa0\x04\xce\x7c\x4a\x8b\x09\x67\xbe\xdc\xfa\xef\x20\xe1\x99\x12\x9c\xf9\x46\xbb\x8d\x71\x79\xfd\xba\xe9\x37\xf0\x92\x2d\x96\xe5\x63\xdc\x96\x0b\x70\x16\x5c\x86\xf7\x9f\xb7\x4e\xec\x26\xeb\xe6\xd7\xfd\x7c\x4d\xa4\x6f\x32\x3d\xbf\x03\xf3\xfd\x3b\x45\x96\xca\x5b\x5a\x97\x59\xbd\x94\x36\xc4\x65\x99\x0d\x64\x84\x36\xf9\xec\x57\xac\x01\xb1\xb4\x67\x92\xdb\xaf\x5c\xfd\x64\xcb\x53\x64\x4d\x92\x7a\xc9\x07\x50\x2f\x39\x46\x9e\x4e\x90\xd7\x02\xb7\x84\xa1\x23\x4d\xd3\x1e\x96\x90\x33\x92\xe0\x9a\xb3\x14\x45\xe4\xe5\x0c\x89\x44\xc0\x4c\xa1\x00\x02\x99\x96\x08\xca\x74\x56\x41\x37\x17\x63\x2a\x4a\x03\x79\xb2\xa2\x8c\xc0\x84\x8a\x32\x4a\xa0\xb5\x46\xa0\x5d\x27\x59\x22\xc3\x44\x0d\xe4\xb4\xed\x3e\x5b\xf9\x3c\x57\x94\x67\x32\xf2\x94\x45\xdf\x54\x22\x91\xa0\x6e\x6d\xf8\x76\x91\xf1\x0b\xa8\xdb\x84\x28\x5c\x71\xf1\xa2\x97\x04\x0a\x68\x06\xb5\x86\x7c\x2f\x44\xed\x1d\x20\xb4\x56\x61\x47\x58\x81\x91\xe7\x2d\x7d\x1f\x92\x35\xe7\x12\xad\x8a\xc1\x11\x7c\x3f\x0c\xac\x60\x1d\x77\x60\x03\xbf\x14\x82\x7b\x5e\x88\x04\x4f\x61\xe0\x48\x4c\x00\xc1\x6a\xbd\x0a\x0a\x43\x01\xb4\x61\x90\xb5\xc4\x68\x1c\x1a\x95\xf1\x40\x58\x9d\x7f\x16\x89\xd6\x0e\xae\xb7\x7c\x2b\x0b\x25\x0b\x3a\x0f\xae\x22\x98\x67\x94\xcd\x4f\x43\x38\x95\x99\x7f\x29\x92\x0d\x2a\xc3\x9d\x53\x20\xac\xd9\xaa\x8b\xe0\x05\xe4\xd4\xf0\xd1\x51\x13\x2d\x76\x8a\x4d\xc8\xfe\x08\x56\x3a\xd2\x5d\xec\xf6\xc4\x6d\xce\x88\x42\xd9\x7f\xf2\xe0\x2a\x7c\xab\x43\x19\xc3\x71\x95\x8d\x36\x48\x67\x30\x38\x97\xf8\xff\xb5\xbb\x8e\xdb\x59\x74\x8f\xe0\x02\x9a\xd6\xa2\x83\x38\x1c\xdc\x52\xaf\x12\x91\x25\xac\x48\xb1\xd4\x3b\xb6\xd6\xa0\x29\xf4\xba\x39\x1d\x4f\x6e\x5d\xb7\xc7\x9b\xb7\xae\xda\x98\x91\x64\xb3\xe6\x0c\xe7\x83\x3f\x77\x7a\xbb\x96\xb9\xbe\xea\x60\xf4\xe3\x07\x5c\x9d\x0a\xfc\xc6\xdd\x4e\x02\x73\x24\x2a\xf2\xae\x6b\x1e\x5e\x40\x7e\xa3\x09\xa1\xd2\xf9\x4c\x04\xd9\x56\xb3\xe7\xa8\x06\x56\x6a\xb4\xe6\x86\xda\xcf\x66\x01\x3b\x63\x3f\x6f\x0b\x0c\xe4\x27\x8a\x9a\xee\x60\x56\x4a\xd2\x1d\xc9\x12\x4c\xcd\x12\xab\x1b\x3b\x77\x3c\x6c\x9c\x75\x4d\x98\x54\x6c\xac\x0f\xb5\x9f\x6f\x0f\x9b\x6f\xce\xe4\x32\xa2\x26\xa1\xb1\xa3\xe7\x16\xf3\x8c\x7e\xc7\xeb\xcd\x8d\x19\xb4\x9b\x6a\x3d\x47\x14\x00\xa1\x86\x96\x08\x24\x03\x5d\x77\x28\xd0\xce\xce\x37\x1f\xc1\x9f\xf4\xaa\xf7\xb9\x96\xff\x54\x6c\xff\xa4\x19\xea\xec\x1c\x0e\x43\xd2\x43\x1c\xb3\x0c\x83\x2a\x8e\xf1\x15\x7e\xa2\x26\xbe\x10\xb1\x42\x55\xbe\xb3\x0c\x52\xf9\xa4\x79\x56\xcb\x98\x2b\x6b\x57\x1e\xe3\xf8\x61\xb7\x23\x68\xde\x2a\x56\x2f\x59\x17\x34\xeb\x9a\xa3\x8f\x87\x00\x00\xdb\x82\x29\x9a\xeb\x17\x0e\x25\x8a\x2e\x89\x8f\x98\x4c\x9d\x1a\xb1\x7e\x31\x3d\xe9\xcf\x9d\x10\xea\x49\xdb\xf4\xff\xe6\x8e\x66\x43\xa9\xbd\xb4\x95\x0f\x70\x46\x99\x34\xfe\xf8\x28\x51\x99\xd4\xf7\x92\x38\x8d\x2f\x7b\x2f\x3b\xcd\x66\xea\xf6\xdd\x8a\x30\xbc\xb2\xcb\x26\x6b\x4c\x36\x31\x7f\x6e\xde\x33\x2b\x81\xa5\x93\xba\xfb\x35\x7f\x82\x9a\x78\x24\x2a\x45\xb3\x95\x6c\xbc\x04\xc6\x8d\xe3\x36\x16\x13\x1a\xc3\xd9\xf1\xa7\xc3\xa5\x53\x07\x20\xb3\x59\xda\xcb\x3a\x32\x0c\xf5\x48\x7b\xec\x44\x6b\x15\xa7\xbe\x47\xd6\xfd\xa0\x99\x3b\x9d\xc6\x73\x24\xa4\x31\xac\x2e\x1d\xd5\x87\xc6\xb8\x4b\xea\xc3\x2c\x7b\x7f\x44\xb1\x4f\x9b\xc3\x14\xeb\xfa\x1a\xe0\xda\x11\x1b\xfa\x28\xbc\x51\xe4\x8c\xe7\x7d\x7e\xbe\xb4\xb6\xbe\x7e\xfd\xf8\xeb\x4f\xa8\xac\x96\x9b\xf1\x75\xa5\xd5\x5e\x65\xcc\xee\xf9\x9f\x3e\x66\x0f\x98\x68\x8d\xd9\xd7\x96\x59\x09\x83\x72\xe0\x2e\x0a\x9a\xde\x5c\x7e\x0e\xf0\x99\x91\xec\xc4\xce\x9f\x44\x89\x63\x80\x1a\xf0\x37\x02\x28\xad\x35\x7e\xfb\x9f\xd9\x7e\x4e\x08\x47\x36\xd8\x3c\xaf\x45\xe6\xa3\xb7\x58\x83\xa4\xe3\xe0\xf2\x1d\x54\x25\xfb\xbe\x88\xb7\xf5\x59\xe9\xc4\x06\xd7\x3d\xd6\x0d\xdc\xa6\x15\x17\x4a\xf1\xfa\xb4\x38\x56\x19\xc4\x2a\xf3\x13\x8d\x1e\xf3\x96\x1f\xcc\x77\x18\x58\xa9\xa6\xcd\x34\x83\x5a\xa9\x3f\xe6\xac\x70\xa8\x7d\xf6\x67\x86\x84\xd1\x64\x13\x79\xd5\xd9\xd3\xb5\x7b\xb2\xb6\x68\x19\x5c\x74\x5e\x19\x16\x6d\xe6\x70\x6e\x6b\xdd\x66\x77\x2d\xba\xb4\x6f\x1e\x34\x98\x2d\x20\x17\xb8\x33\xd6\xb5\xf8\x4d\x37\x52\xbb\xa3\xa5\x85\xa5\x9b\xbe\x14\x1f\x49\xc1\x94\x9b\xe7\xea\x44\x75\xe8\xec\xdb\x7e\x3e\x08\x24\x0a\x5b\xe7\xb0\x66\x10\x72\x4e\x51\x7b\x76\x06\xcc\x7c\xcd\xd3\x73\x66\x7a\x78\x4e\x00\x71\xe8\xc0\xf7\x2c\x88\xe6\x40\xf8\x5f\x82\xe4\x02\x06\xa7\xd7\x9f\x0c\x30\x98\x94\xbc\x12\xcc\x27\x8d\xb5\xc1\xee\x12\x4f\x18\x68\xb2\x59\xce\x9a\xff\x5a\x48\xf5\xc2\x70\x39\x33\xff\xb0\xb8\x75\x98\x68\x3f\xd3\x84\x87\x44\xdc\x41\xcc\xd5\xfa\xff\xb3\x43\x5f\x26\xa5\xbb\xe6\x3c\xde\x68\xe4\x24\x4d\x69\xb6\xf2\x15\xcf\xef\xe0\xbf\xf9\xf3\xa0\x5a\xf9\x1a\xa3\xe5\xb7\x44\xac\x68\x76\x5a\xdc\x30\xbf\xf3\x36\x6d\x14\x4d\x3d\x2a\x41\x32\xa9\x25\xef\x20\x21\x39\x55\x44\xbf\x18\x37\x36\xda\x64\xda\xf3\xf7\xee\xad\x75\x18\x06\x65\x0e\xfe\x0e\x00\x00\xff\xff\xee\x2c\x3e\xca\x7b\x1b\x00\x00")

func staticxPartialsIndexFtNewHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticxPartialsIndexFtNewHtml,
		"staticx/partials/index/ft/new.html",
	)
}

func staticxPartialsIndexFtNewHtml() (*asset, error) {
	bytes, err := staticxPartialsIndexFtNewHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "staticx/partials/index/ft/new.html", size: 7035, mode: os.FileMode(420), modTime: time.Unix(1485286021, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticxPartialsIndexStartHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x8f\xb1\x4e\xc4\x30\x10\x44\x7b\x7f\xc5\xe8\x6a\xee\x42\x28\xc1\xa4\xa7\x41\x74\xd4\x8e\xb3\xc6\x2b\x39\x59\x64\x6f\x72\x39\x21\xfe\x1d\xc5\x4a\x24\xae\x5a\xed\x1b\xcd\x68\xc6\x0e\xbc\xc0\x27\x57\xca\xeb\x89\xa7\x81\xd6\x4f\x4a\x5e\x46\x3a\x75\x06\xb0\xb1\xed\xf6\x1f\x2a\xf0\x7d\x50\xdb\xc4\xb6\x4a\x03\x2f\xdd\x06\xc0\x05\x0e\x61\x4e\xe9\xac\xb4\x2a\x0a\xe5\x85\x32\x82\x64\x78\x99\x7d\xec\x5d\x21\x0c\x4e\xdd\xc5\x36\x9b\xe7\xf0\x7e\x24\xaa\x0a\x05\x9e\x08\x37\x99\x33\x02\xe7\xa2\xa8\x2d\x70\x65\x8d\xd0\x48\x78\xa7\x2b\xde\x2a\xea\x67\x55\x99\x8e\x98\xfd\x18\x5b\xf4\x96\xa8\x33\x97\xff\xed\x11\xdb\x07\xdc\x93\x6d\xe7\x8f\x01\x46\x97\xbf\x78\x3a\xf7\xa2\x2a\xe3\x33\x9e\x1e\xbf\xd7\x17\xf3\x6b\x6c\xb3\xe7\xfc\x05\x00\x00\xff\xff\x3c\xde\xdc\xcd\x11\x01\x00\x00")

func staticxPartialsIndexStartHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticxPartialsIndexStartHtml,
		"staticx/partials/index/start.html",
	)
}

func staticxPartialsIndexStartHtml() (*asset, error) {
	bytes, err := staticxPartialsIndexStartHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "staticx/partials/index/start.html", size: 273, mode: os.FileMode(420), modTime: time.Unix(1485286021, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"staticx/css/cbft.css":                staticxCssCbftCss,
	"staticx/index-ft.html":               staticxIndexFtHtml,
	"staticx/index.html":                  staticxIndexHtml,
	"staticx/js/debug.js":                 staticxJsDebugJs,
	"staticx/partials/debug-rows.html":    staticxPartialsDebugRowsHtml,
	"staticx/partials/debug.html":         staticxPartialsDebugHtml,
	"staticx/partials/index/ft/list.html": staticxPartialsIndexFtListHtml,
	"staticx/partials/index/ft/new.html":  staticxPartialsIndexFtNewHtml,
	"staticx/partials/index/start.html":   staticxPartialsIndexStartHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"staticx": {nil, map[string]*bintree{
		"css": {nil, map[string]*bintree{
			"cbft.css": {staticxCssCbftCss, map[string]*bintree{}},
		}},
		"index-ft.html": {staticxIndexFtHtml, map[string]*bintree{}},
		"index.html":    {staticxIndexHtml, map[string]*bintree{}},
		"js": {nil, map[string]*bintree{
			"debug.js": {staticxJsDebugJs, map[string]*bintree{}},
		}},
		"partials": {nil, map[string]*bintree{
			"debug-rows.html": {staticxPartialsDebugRowsHtml, map[string]*bintree{}},
			"debug.html":      {staticxPartialsDebugHtml, map[string]*bintree{}},
			"index": {nil, map[string]*bintree{
				"ft": {nil, map[string]*bintree{
					"list.html": {staticxPartialsIndexFtListHtml, map[string]*bintree{}},
					"new.html":  {staticxPartialsIndexFtNewHtml, map[string]*bintree{}},
				}},
				"start.html": {staticxPartialsIndexStartHtml, map[string]*bintree{}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

func assetFS() *assetfs.AssetFS {
	assetInfo := func(path string) (os.FileInfo, error) {
		return os.Stat(path)
	}
	for k := range _bintree.Children {
		return &assetfs.AssetFS{Asset: Asset, AssetDir: AssetDir, AssetInfo: assetInfo, Prefix: k}
	}
	panic("unreachable")
}
