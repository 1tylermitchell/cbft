package cbft

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"github.com/elazarl/go-bindata-assetfs"
	"io"
	"io/ioutil"
	"os"
	"path"
	"path/filepath"
	"strings"
	"time"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindata_file_info struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindata_file_info) Name() string {
	return fi.name
}
func (fi bindata_file_info) Size() int64 {
	return fi.size
}
func (fi bindata_file_info) Mode() os.FileMode {
	return fi.mode
}
func (fi bindata_file_info) ModTime() time.Time {
	return fi.modTime
}
func (fi bindata_file_info) IsDir() bool {
	return false
}
func (fi bindata_file_info) Sys() interface{} {
	return nil
}

var _staticx_dist_license_txt = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xdc\x5a\x5d\x73\xdb\xc6\xd5\xbe\xf7\xaf\xd8\x97\x33\xef\x54\x9a\x81\x69\x27\x4d\xda\xc6\xb9\x62\x2c\x39\x61\xeb\x50\x1e\x51\xaa\x9b\xc9\xe4\x62\x09\x2c\xc8\xad\x01\x2c\xb2\x0b\x88\x62\x7f\x7d\xcf\xc7\x7e\x81\xa4\x64\x77\x7a\x57\x4d\xa6\x35\x49\xec\xd9\xb3\xe7\xe3\x39\xcf\x39\x8b\x17\xe2\x73\x7f\x8b\x5e\x96\x3b\x25\xde\xeb\x52\x75\x4e\x3d\xf7\xfc\xdf\x95\x75\xda\x74\xe2\xeb\xf9\xeb\x42\xfc\x55\x76\xa3\xb4\x07\xf1\xf5\xeb\xd7\xdf\x3c\xb9\x68\x37\x0c\xfd\x9b\x57\xaf\xf6\xfb\xfd\x5c\xd2\x36\x73\x63\xb7\xaf\x1a\xde\xca\xbd\x7a\x81\x0b\xef\xae\x6f\x7f\x5e\x8b\xc5\xea\x4a\xbc\xbd\x59\x5d\x2d\xef\x96\x37\xab\xb5\x78\x77\x73\x2b\xee\xd7\xd7\x85\xb8\xbd\xfe\x70\x7b\x73\x75\xff\x16\xbf\x2e\xe8\xa9\xab\xe5\xfa\xee\x76\xf9\xc3\x3d\x7e\x43\x02\xbe\x9a\x8b\x2b\x55\xeb\x4e\x0f\xa0\x9c\x9b\xbf\xf0\xda\xcc\xfc\x89\x66\xc2\xed\x64\xd3\x88\x56\xc9\x4e\x0c\x70\xd2\x41\xd9\xd6\x09\xd9\x55\xa2\x34\x5d\xc5\xab\x44\x6d\xac\x18\x9d\x2a\x84\x55\xbd\x35\xd5\x58\xe2\xd7\x85\x17\x85\xcf\x56\xda\x0d\x56\x6f\x46\xfc\x5e\x48\x27\x2a\xdc\x52\x55\x62\x73\x10\x6b\x55\xb2\x90\xaf\x40\xbe\x35\xe3\x76\x27\xbe\x13\xa6\x86\x0f\x1a\x9e\x33\xe5\xd8\xaa\x6e\x38\xd6\xcb\xd8\x13\xc5\x4a\xd3\x1f\xac\xde\xee\x06\x61\xf6\x9d\xb2\x02\x54\x82\x85\x7a\x38\x08\x39\x0e\x3b\x63\xf5\xbf\x68\x3f\x2f\xe7\xdc\x8a\x61\x27\x07\x01\x9b\x6e\xad\x84\x85\xdd\x96\x1e\xf2\x76\xc8\x14\x50\x5b\xd9\x88\x6b\x12\x7d\xa2\xc4\xd8\xe1\x01\x49\x7b\x25\x64\x49\x52\x82\x16\x60\x06\x78\xd6\x8b\x31\xf0\x80\x57\x50\x2b\xc7\x5b\x83\x41\x07\x6b\x9a\x42\x48\xab\xc2\x87\x86\x94\x2e\xf0\x34\xf8\xed\xd8\x55\xb0\xac\x34\x6d\x6b\x3a\x2f\xc9\x3f\x28\xf6\x7a\xd8\xb1\x1c\xde\x70\x2e\xde\x19\x4b\x7a\xf4\xa3\xed\x0d\x44\x4c\xb2\x6a\x74\x78\xf0\xd1\xcc\x4b\x99\xd1\x51\x9c\xb8\xd0\x97\xbc\xd4\xec\x95\x2d\xc0\x7d\x16\xbc\x84\x4a\xe8\x8e\xff\x5d\x88\xc1\x88\x52\x82\xd3\xf1\x39\x2f\x85\x7f\x22\x0b\x58\xd1\xca\x4e\x6e\x15\x3a\x0f\xf7\x75\x63\xb9\xf3\x8a\x15\x62\xbf\x53\x74\x7c\xf0\x3e\xed\x2b\x49\x76\x6e\x99\xbd\xc6\x68\x02\x29\x17\x1a\x34\x21\xf7\xb8\x9d\xee\x51\x52\xad\x6b\xb0\x66\xaf\x6c\x89\xa2\x2f\xbe\x7d\xfd\xff\x97\xb4\x9d\x01\xf3\xb0\xe1\x83\xa0\x71\x70\x03\x58\x1d\x7d\x00\x6e\xb2\xca\x05\x89\x20\x72\xa3\x3a\x30\x42\xa9\xc1\x95\x13\xe9\x99\x9e\xc9\xe5\xbf\x98\x71\x26\x2e\x60\x2d\xfe\xcb\xce\x2e\x73\xaf\xc3\x7f\x68\x93\x07\x5d\x8d\x28\xcb\x8a\x3c\x3e\xbc\x00\xf5\x08\xda\x6a\x87\x8a\x80\xde\xad\x76\x8e\x02\x9e\xe2\x8c\x93\x80\xdc\x72\x12\x6a\x6b\xd8\xad\x84\x14\x84\xf4\x6a\x8f\x23\xad\xb7\xaa\x56\xd6\xc2\x72\xfa\xb5\x26\x8b\x7f\xc2\x2d\x5a\x53\x69\x38\x9a\xa4\xac\x0a\x0e\xd6\x5d\xd9\x8c\x64\x0a\x48\x42\xd1\x99\x41\x34\xba\xd5\xb8\x3b\xf8\xd1\x99\x7a\xd8\x63\x78\x39\xda\x10\x9c\x52\x81\xf5\x43\xee\x91\x20\x2f\x86\x1f\x28\x42\xfe\xd7\x7a\x3b\x5a\xfa\x1d\xdc\xd2\xa8\x0c\x3e\x6e\x36\xff\x84\x50\x38\x55\x5d\x76\x07\xfe\x0e\xdc\x31\x36\x94\x1f\xb5\x35\x2d\xfc\x58\xee\x64\x07\x5a\x87\x04\x81\xa8\xe8\x1c\x3e\x29\x43\x40\xd1\x37\x8d\xff\x58\x0b\x29\xd8\x3c\x24\xae\x98\x1e\xd0\xcb\x38\x3a\x26\xa4\x4d\xaf\x31\xa1\x0c\x29\xe7\x8f\xb9\x85\x48\x80\x33\xc0\xd7\x93\x03\xe7\xe8\x05\x27\x7d\x60\xf4\x76\x28\x87\x73\xb7\x55\x95\x96\x62\x38\xf4\xf9\xb1\x3f\x1a\xfb\xe9\x04\x14\xf6\xf0\x25\x69\x4c\x38\x84\x91\x96\x52\x40\x77\xe1\x18\x31\x01\xd8\x74\xfe\x58\xad\xac\x00\x48\x1e\xa4\x6e\xe4\xa6\x09\xf9\x9f\xe1\x52\x81\x68\x8a\x01\x58\x4a\x1f\x4a\x32\xe2\x42\x40\x37\x30\x03\x3c\x1c\xe1\x8d\x2d\x05\x0f\x6b\x32\xab\x1c\x06\xac\x2d\x64\xa1\xa0\xad\x17\x71\x01\x07\x50\x8f\xb2\xed\x61\x67\x58\x08\xd0\x0e\x61\xce\x0b\xf1\xc9\x45\xdf\x2b\xd8\xf9\x11\x92\xa9\x31\xfb\xcb\x64\x85\x2b\x65\xf5\x03\x58\xf1\x41\x09\x34\x88\x9b\x1d\x47\x00\xee\x71\xde\x06\xfe\xf4\x5e\x12\xdb\x20\x28\xbe\x91\x0e\x9d\xd7\x51\x2a\x56\xb8\x07\x46\x3f\x44\x0f\x63\x15\x6e\x45\xee\xc2\x5c\xd8\xef\x74\xb9\xcb\xc0\x00\x9c\x35\x40\x0d\x80\xcc\xb4\xea\x41\x93\x2b\x31\x8a\xc1\x34\x3e\x4f\x84\x02\x0b\x1b\x1b\x3e\x81\x08\xef\xe6\x3c\x9b\xbc\x30\xac\x72\xca\x41\xa4\x90\xf5\x25\x6c\x66\x1a\x4a\x0a\x58\xa6\xb7\xba\x83\x5d\x4e\x7d\x7e\x8a\xc7\x01\xa7\xea\x49\xfa\x17\xe2\xd8\x7c\xde\x7a\x18\xcd\xde\x77\x24\xde\x57\x0d\xab\x5a\xa9\x63\x7e\xaa\x5e\x5a\x8a\x14\xb4\x0b\x1d\xa3\x55\x56\x35\x07\xc8\x83\xee\x13\x19\x6e\x03\xd1\x82\x71\xd2\xc9\x56\x5d\x06\xa7\x6b\x00\x22\x5b\xcb\x92\x8a\x44\x91\xd5\xc8\x68\xd4\x13\xa5\xd0\x3a\xca\xd4\xc9\xeb\x6f\x11\xca\x7d\x8d\x3f\xeb\xf1\xe3\x1c\x88\x29\x9b\xed\x17\x0d\xe8\x13\x2e\xd4\xd2\xa8\x07\x0a\x9b\xf8\x84\x62\xb8\xf2\x4c\x24\x48\x32\x6c\x1b\x5a\x05\xbf\x3f\xa5\x7c\x91\x25\xc5\x80\xa8\x6f\x60\xeb\x26\xc0\xb6\x1b\x37\x80\x1d\x1e\x3c\x02\xef\xa0\xe8\x22\xcd\x49\x3d\x9f\x0a\xb4\x11\xe1\xf8\x09\xad\x08\x5e\xa6\x72\xf7\x6c\xb5\xc8\x89\x0a\xa2\x32\x6d\x8f\xf1\xbe\x51\x60\xcc\x1a\x4c\xf1\x34\x79\xf9\xb2\x6a\x2f\x66\xf1\x4c\x33\x2f\x8b\xeb\x7d\x84\x65\x58\xa4\x1a\x48\x40\x6b\x00\x8c\x0b\xf4\xc2\x46\x36\x14\x47\x7b\x8b\xeb\x3a\x22\x1f\x63\xe7\xad\x2f\x30\x0b\x72\xa3\xab\x64\x28\xb4\xd3\xe0\x52\xb2\x90\xfd\x5d\xf1\x6c\x29\x8a\xd8\x95\xef\x01\xff\x25\x9d\x00\x11\x75\x83\x8b\x1b\xa0\x94\x20\x2d\x2b\x59\x91\x0a\xb9\x83\x1b\x54\xeb\x72\x08\x87\x9a\x3b\x2a\x2c\x21\x25\xd5\x48\xff\x04\xbb\x1f\x2b\x1f\xb3\x95\xc8\xb5\x72\xa3\x17\x19\x8c\x4c\xa2\x20\xb3\x36\xda\x0d\x38\x6e\x39\x3a\xaa\xf2\xb4\x63\x4b\x78\xe9\x69\xe4\x47\x42\xbc\x54\x9a\xd4\x63\x30\xc2\xf4\xac\x21\x1e\xe1\x28\xae\xd7\xe5\x68\x46\x07\xc9\xdb\x4a\xfb\x09\xa1\xcf\x26\x76\x14\x28\x97\x72\x7a\xdb\x11\xf6\x43\x28\xa2\x8f\xc8\xb0\x67\x23\x11\xc1\x6a\xb6\x02\x7b\x4b\x91\xe7\xea\x7c\x76\x9a\xc2\x47\xfc\x3a\x1e\x3b\x64\xe0\x67\x29\x4f\x6e\x40\xc4\xc7\xf6\x68\x53\xb1\x03\x65\x36\x0a\xe2\x09\x28\xa3\x22\x24\x07\xa5\xf3\x7d\x52\x12\x3a\xf5\xfb\x08\xf1\xd3\xe0\xb6\xa5\x01\x7b\x73\xb9\x46\xc2\x9b\xa5\x1f\x03\xd1\xd7\x73\xf1\x23\xd2\x2a\xdc\xf6\x6d\x3c\x7e\x60\x56\x62\x3d\x72\x71\xf5\xb1\x7a\xb6\x99\xc9\xd2\x2c\x47\x65\x05\x55\x52\x64\x06\x12\x08\x21\xa0\x33\xb1\x38\xe2\x05\x40\x0e\xe1\x94\xc0\xf0\x7a\x35\x80\x65\x42\xf8\x01\xf4\x35\xd5\x5e\x23\xd7\xe8\x4c\xf7\x92\x3c\xef\xe0\xc4\xf8\xf1\x25\xb0\x1e\xbb\xc5\xc6\xc9\x1c\x64\x33\x1c\x5e\xd6\x56\xc1\x27\x0d\xc4\xee\xc1\x94\x08\xe4\x27\xd5\xdc\xf7\x7f\xb8\x61\xe8\xb6\x60\x05\xe4\x58\x8f\x71\x7c\x82\x74\x09\xce\xfb\x71\x03\x6b\xc1\x8a\x10\xa8\x7d\x23\x21\xd0\xe3\x37\xa0\x33\x97\x5a\x47\xdf\x78\x62\x91\xf7\x6d\x39\xcd\x8f\x58\x4c\x64\xf9\x64\xc7\x33\xe5\x9c\xb0\x85\x1d\xf4\xc7\xcc\x41\x1f\x24\x82\xee\xff\x80\x77\x2e\x60\x99\xea\x07\x4c\x30\x68\x39\x86\x40\x91\x40\x41\xc7\x0d\xd1\xa5\xe8\xf9\xac\x99\xf7\x80\xae\x83\xb0\x9d\x7c\x50\xc4\xf2\x82\x42\xd4\x47\x9b\xba\x46\x9e\x07\x45\x40\x35\x00\xbf\xfc\xbf\x80\x28\xc6\x0e\xec\x98\x88\x03\x9e\x28\x7b\x56\x48\x30\x13\x4e\x86\x26\x60\x1f\x85\x5d\x65\xdf\x37\xd8\x6e\x9a\x0e\x9c\x4e\x56\x46\xec\xf2\xaa\x95\x8d\xd4\x60\x6f\x7e\x36\x3b\x1c\x58\x91\x84\xe4\xd6\x8d\xb8\xd9\x41\xf6\x3a\x27\xad\xa6\xec\xac\x2d\xa0\x4f\xe8\x68\x94\x0e\xb5\x2f\x4f\xfc\x0b\x77\x09\x6d\xb0\xe9\x94\xaf\x88\x00\x7f\xc0\x48\x22\xab\xa7\x65\xc7\x0b\xc2\x81\xb8\xc3\xf5\xd5\x16\xd4\x67\x92\x37\x55\xce\x6f\xb1\x47\x57\x84\x5a\x37\x17\xcb\x1a\xfd\x1f\x7b\x21\x07\x48\x85\x31\x1d\x9d\x32\xe8\x2d\xab\x20\xb7\x12\x7f\x26\x90\xf3\x8d\xfb\x45\x2a\x58\x91\x5b\x5b\xe3\xdc\x4b\x32\x18\x1e\xa3\x34\x23\xf2\x27\xfe\x0c\x9e\x97\xa2\x91\x7b\x37\xea\x01\x8f\xda\xa8\x2d\x17\x01\xb0\x58\x50\x3e\x71\x82\x23\x54\x7c\x0e\xe0\xa8\x26\xb0\xe2\xce\xb7\xda\x49\x4e\x99\x9c\x73\x08\xc7\x0a\xfe\x68\x89\xa9\x82\x18\xa6\x62\xd3\x48\x0c\x94\x29\x34\xa3\x3e\x53\x42\xa3\x91\x72\xcc\x97\xbc\xc0\xaa\xb8\x3a\x60\x8a\xa2\xf7\x42\xac\x48\x17\x08\x5b\x05\x5f\x86\xe0\x8b\xd6\x05\x69\xd8\x27\x56\x0c\x05\xdf\xcc\xc5\xad\xca\x27\x43\x73\xda\xba\x95\x87\x84\x6c\xc7\x28\x04\x38\xa8\x03\xb7\x99\xe0\xd1\x33\x2c\x8f\x5c\x82\xb4\x11\x36\x1b\x01\xe4\x28\x8e\x90\xd1\xc0\xff\x9b\x58\x91\xa7\x6d\x33\x97\xf0\x27\x90\xac\x48\xad\x10\x19\x24\x85\x56\xab\x14\x7b\xb9\x36\x0d\xf4\x44\x5c\xdf\x03\x76\xbd\x79\x11\xfb\xaa\x4b\x3e\xe9\x08\x91\xb6\x45\x7d\x51\x3d\xee\x37\xc0\xad\x1a\x8e\x88\xa0\x95\x53\xdf\xd8\x1d\xe2\xdf\xc9\x41\x25\xd5\x87\xe3\x4e\xe2\x7b\x2a\xa3\x61\xcf\x4d\xb6\x27\x0f\x6e\x12\x95\xc6\x3e\x0a\xfb\x77\x1e\xea\x58\x0c\x21\x68\x1f\x74\x87\x71\xc2\xdd\xa3\xcb\xb6\x47\x88\x8b\x21\x8d\x32\xb1\x75\xdf\x92\x31\x14\xcb\x99\xee\x5c\x66\x3b\x5b\x35\x40\x82\x15\x81\x37\x67\x2d\x3c\x75\x07\xa0\xd1\xf1\xe1\xb2\x8d\xe3\x86\x29\x20\x0a\xcc\xb0\x54\x1d\x0b\x1f\xdd\x05\xc2\x62\xa5\x90\x37\x15\x19\x99\xa0\x10\x1d\x52\xba\xf9\xb3\xf1\x08\xe2\x8c\x3e\xc7\x90\x8a\x7f\x89\xb9\x31\x7a\x06\x19\xa4\x5c\x65\x88\xd0\x42\x95\xc1\x63\xa2\x39\x39\xe3\xec\x90\x0a\x17\x9f\xe4\xb4\x54\x4f\x8d\x56\x5d\x22\x68\x45\xff\xfb\xc6\x0f\x5d\x3d\x5b\xdd\xdc\x2d\xdf\x5e\xcf\x20\xf9\x1e\x07\xb2\x37\xa6\x9d\xdf\x03\x29\x77\xb6\x4f\x9e\x5d\x19\x04\x9c\xc9\x94\x13\xcb\x92\xbf\x32\x51\xa1\xf5\x94\xe0\x43\x59\x51\x8f\x99\x82\x4e\x9d\x35\x2b\x82\x92\xc4\x39\x6f\x26\xc6\x83\x1a\x21\x03\x1f\x84\x8e\x50\x7c\x89\x5d\x33\x31\xe7\x2d\x7c\xd6\xae\x14\x6c\x20\xa3\x51\xd2\x61\x3b\x95\x4f\xe9\xfd\x92\x94\xad\x40\x8c\x60\xd3\x37\x41\x4d\x19\x74\x4c\xb6\x4e\x16\x9a\x44\x95\x7b\x56\x87\xef\x73\x30\x9f\x04\x59\x9e\xd7\xd3\x01\x94\xd0\x75\xc2\x19\x2c\x99\xdb\x54\x01\x4f\xe5\x1b\x5b\x9c\x5a\x59\x06\xae\x97\x4d\xb9\x7c\x6f\x70\xc6\x4a\xf5\x51\xa6\x10\x81\x80\x0e\x90\x9d\x05\x02\x6d\xf5\x12\x0f\x79\x88\xbe\xe9\x70\x3e\x07\x0d\x33\x12\x0b\x25\xa1\x09\xbd\xdb\x71\x17\x86\xf8\x75\x6a\xe6\xcc\xdf\x44\x1e\xb8\x95\x8e\x43\x3e\xe8\x21\x52\xf3\x8a\x0c\x65\xaa\x8e\xcf\x2d\x42\xac\xc3\x64\x36\x1f\xcb\x86\xac\x2a\xfc\xb7\xc5\x7e\x27\x8f\xc8\x4c\x4a\x50\xdd\x5b\xe8\x4b\x32\xa1\x60\xeb\x3b\x70\x44\x7e\x26\xea\xa7\x70\xbc\x51\x55\xaa\xab\xc6\x36\xd0\xd6\x49\xc4\x04\x60\xe1\xfe\x2f\xb8\xf3\x18\xd3\xc8\xc0\x61\x88\x01\x66\x38\x9b\x4c\x34\xad\x82\x9e\x89\x79\x80\x1d\x8f\xe3\x8f\x0d\xf3\xd4\xbd\xc5\x59\x13\xa5\xae\x82\x68\x2b\x0d\xeb\x99\x00\x1c\x0d\xbe\x32\x57\xa0\x10\x7f\x8e\x5c\x65\x1c\xc9\x69\x64\xad\x13\x96\x7b\x86\xc1\xa7\xd1\xde\x99\x2b\x23\x16\x93\xdd\x15\x99\xfa\x8c\x36\x45\x4a\x9b\x9a\x9a\xc5\xc3\x13\xad\x48\x3e\x9d\x8b\xa9\x44\xf2\x70\xeb\x6c\x9a\x97\x14\x38\xb9\xad\x9a\x54\xe1\xc8\xba\x71\x96\x4c\x54\x1a\xe3\x68\x32\x96\x89\x9d\xca\x51\x27\x30\x71\xc8\xb7\xd4\xec\xf8\x9b\x00\xee\x55\x13\x0b\x74\x73\x71\xdf\x41\x15\x75\xe4\x34\xf5\x08\x1b\x95\x1a\xdb\x5f\x92\x98\x5d\x90\xc4\xf9\xc6\xe1\x98\x45\x66\xc3\xac\x6c\x8c\xf5\xe4\xe8\x2a\x31\x7d\xdc\xf1\x78\x90\xc3\x54\x6f\x93\x4f\x9f\xff\x93\xd6\xcc\xd3\x2c\x52\x33\x0b\x18\x16\xc1\xd4\xb5\x0a\xb7\x8f\xbc\x7e\x65\x06\x5c\x14\x6f\x6f\xa8\xbe\x6c\x0c\x37\x65\x98\xb6\x5b\x6a\xef\xb0\x8c\x90\x6a\x6e\x84\x72\xe0\x54\xa5\xf8\x22\x08\xd3\x20\x73\x89\xdf\x88\xd9\x05\x0f\x48\xc1\x8a\xb1\x25\xda\x42\x4f\x47\x81\x7f\xf0\x19\x42\x1d\x99\x7a\x54\x65\x06\xf1\x04\xbc\xd1\x20\x56\x6d\xa5\xe5\x7b\xa5\xe3\xde\xc3\xdf\x05\xfc\x09\xa0\x30\x10\x10\x87\xb0\x98\xf1\xe8\xca\x10\x72\x0e\x4c\xb9\xb3\x1b\x21\x34\xbc\xbf\x50\x63\xfa\x12\xae\x31\x64\x8b\x73\xb3\xc8\x68\x70\xea\xa5\xec\x03\xce\xf4\xfd\x47\xd0\xc9\xc7\x30\x3f\x1c\x82\x36\x68\x5c\xa4\xa9\x93\x6f\x53\xad\xfa\x7d\xd4\xfe\xf6\x08\x0b\xba\x03\x9f\x60\x49\x27\x97\x42\xe1\x37\x2d\x5e\x4f\xa3\x36\x60\x65\xe0\x1d\x25\x1c\xd0\xbb\x22\x36\x1d\x38\xa9\x3d\x99\xcf\x86\x6c\x0a\x7e\xf3\xd5\xe0\x4c\x09\x60\x4b\xfd\x79\x2e\xae\xb4\xa3\xd6\x09\x2f\x6d\x6b\xf1\x11\xf8\x27\xd8\xe5\x10\x93\x20\xaa\xba\x39\x70\x03\x4b\x9d\x37\xb6\x58\x09\x06\xc8\x8b\xd4\xbc\xa4\x29\x58\x91\x1c\xe6\x73\xdf\x25\x55\x2f\x50\x57\x1c\x1a\x1c\xb7\xa8\xf9\xd3\x38\xbe\x9c\x38\xf7\x12\xe7\x5a\x00\xf9\xb3\xc5\x5a\x2c\xd7\x33\xf1\xc3\x62\xbd\x5c\x07\xe3\x7e\x5c\xde\xfd\x74\x73\x7f\x27\x3e\x2e\x6e\x6f\x17\xab\xbb\xe5\xf5\x5a\xdc\xdc\xe6\xd7\xf2\x37\xef\xc4\x62\xf5\x8b\xf8\xdb\x72\x75\x05\x74\x47\xf3\x0d\xf0\x23\x4e\x47\x5d\x3a\x89\x26\x5c\xa9\xb2\x31\x69\xca\x20\x9a\x93\xca\x80\x53\x07\x68\x72\xc9\x54\xd4\x10\xd9\x53\x88\x05\x63\xde\x2d\xef\xde\x5f\x17\x60\xf5\xd5\xcb\xe5\xea\xdd\xed\x72\xf5\xe3\xf5\xcf\xd7\xab\xbb\x42\xfc\x7c\x7d\xfb\xf6\x27\xd0\x72\xf1\xc3\xf2\xfd\xf2\xee\x17\x0a\xa1\x77\xcb\xbb\xd5\xf5\x9a\x5f\x1f\x58\x78\x19\x1f\x16\xb7\xe0\xb0\xfb\xf7\x8b\x5b\xf1\xe1\xfe\xf6\xc3\xcd\xfa\x9a\xab\x2d\xdf\x16\x36\x78\xb3\x00\xfa\xf7\xb0\xa9\xa6\x5b\x07\xba\x99\xe1\xae\x70\x1a\x2e\xe0\x39\x6b\x7a\xab\x91\x9e\xd3\x81\x6b\x88\x2e\x7c\x84\xe2\x2f\x21\x6e\x36\x2f\xe5\x69\xa3\x73\xc0\x89\xf0\xb8\x01\xae\xb5\x23\x64\x77\xa6\xd4\xb1\x4d\x66\x50\xf7\xf7\xac\x34\x8d\xcd\x2f\x5a\x4f\x9b\x59\x8e\xbd\xbf\xcc\xe1\x73\x30\x29\x2e\x7a\xaf\xe5\x46\x37\x74\x79\xbe\xc4\xca\x2b\x80\xfe\x74\x03\xe9\xc1\x32\xe0\xab\x86\x86\x9d\xa0\x23\x74\xda\xd9\xa8\x25\xdc\x64\x41\x00\x0d\xf9\xc8\xa0\x53\xdb\x46\x03\xfb\x2a\xd5\x65\x11\x6f\xbb\x8b\xc9\x28\x37\x4e\x7e\x3e\x1b\xef\x17\x4c\x14\x70\xa6\xdf\xe8\x0d\x11\x3a\x52\x6e\x8b\xf3\x88\x78\x6f\x11\xb6\x1c\xf0\x0d\x04\x47\xb7\xe3\xe7\xf3\x83\xd1\x73\x52\x3e\x70\x28\x13\x5c\xd6\x68\xda\xd8\x4f\x04\xc8\xb5\xb2\x95\xdb\xe9\x0c\x1f\x57\x87\x57\x02\xd2\xcb\x01\xae\x57\x78\xb7\x9e\xdd\x3e\x43\x42\x01\xb1\xe5\xab\x04\x24\x30\x3c\xd3\xc5\x0b\x39\x2f\x34\x20\x34\xce\xdc\x40\x6f\x1c\x57\x5b\xbe\x33\xc7\x2a\x1e\x6b\x35\xde\x1a\x1f\x37\xba\x64\xcd\x31\x62\xcc\xc8\xdf\xe8\xce\x3b\x33\xc3\xd5\x7c\x62\x70\xf1\xec\x9d\x78\xd0\x0a\x8f\xdd\x18\x0e\xd8\xad\x31\xd5\x5e\x37\xf9\xec\xf0\x13\x14\x65\xd3\xf7\x12\xa7\x84\xc8\x09\x46\x54\xbc\x96\xba\x19\x2d\x57\x23\xd9\xd4\x63\x97\xc8\x0d\x15\xc1\x33\x6f\x82\xe0\x2d\x00\x06\x6f\x6e\x0f\xde\x58\x39\x08\x1c\x8c\x43\x24\xe8\xc7\x83\x38\x2f\x23\x0e\xd3\x65\xf5\xa0\xe9\x92\xb4\xf6\xaf\x6f\x40\x06\x78\x23\x84\x97\x1b\xbc\x78\xce\x80\xef\xe6\x62\x51\x62\x4d\x40\x2b\x04\xe4\xc5\x9d\x17\xa9\x50\x67\x49\xf1\x71\x87\xd4\x7d\x9a\xae\xc7\x97\x85\xcf\x5e\xb7\x05\x16\x5a\xee\x8c\xe1\x29\x28\x4d\x3a\x27\x97\xed\x34\x73\x05\xde\x56\x2b\xc2\x13\x80\x3a\xd2\x50\x76\xa5\xe2\x43\xf4\x3c\x06\xf5\xe8\x77\xa0\xb8\x53\x6d\x87\xaf\x96\xa4\x81\x18\x9b\xb5\x09\xba\x0b\xb3\x69\xfc\x14\x8a\x78\xcb\x2b\x84\x1d\x64\xbe\x7c\xd5\x02\xe7\xc1\x7c\xf1\xfd\x95\x76\x93\xeb\x1e\x68\x30\x7e\x32\x7b\xec\x84\xb8\x95\x8c\x06\x23\x7b\x66\x82\xd3\xf9\xe8\x8d\x96\xae\xc9\x6e\x43\x22\xe7\xf6\xd7\x22\x34\xc4\xf5\x5f\x23\x90\x26\x18\x25\x7d\x89\xe9\xa4\x5b\x94\x84\xe8\x69\x52\x94\x85\x81\x9f\x09\x63\xcf\xa4\x6b\xc6\x67\x4c\x78\xce\x77\xb2\x4d\x1d\x6d\x53\xa9\x1a\xda\x15\x5e\x01\xcc\xb8\x3a\x33\x3a\x97\xb6\x25\x24\x0a\xe4\x3a\x5a\x31\xa5\xf3\x68\x6d\xba\x2d\xf3\x93\x63\xc0\x64\xe8\xca\xb1\x59\xe5\x21\x6a\x71\x3a\x37\xde\x1c\x3c\xd9\x48\x07\x3a\xa0\x05\x92\x4d\x23\x99\xdf\x67\xd1\x98\xd1\xc6\xa8\x0b\x07\xf0\xf5\xea\x0a\xeb\xea\xb9\xd7\xe0\xe8\xf7\xc5\x87\x0f\xf0\xc8\xf2\x1f\x6f\xd0\x85\x34\x2d\x00\x44\x3d\xf8\xd7\x17\xf2\x57\xf7\xf0\x37\x52\x65\x1f\xef\x92\xe0\xef\xee\x0b\x17\x14\xfe\x35\x8a\xe9\x34\x21\xd0\x6a\x03\x59\x63\xa1\x0d\x1f\xc2\x54\xa3\x48\x9d\x7c\xad\x55\x53\x39\x01\x05\x02\x92\x9d\x41\x7f\x83\xb7\x94\x0a\x22\x73\xf6\xeb\x6f\xb3\xd4\xa4\xe0\x64\xc2\x57\xbb\x43\x08\x26\x42\x55\xdf\xf5\x65\x9d\xf4\x5c\x5c\x5c\x99\xee\x0f\xf1\x7d\x81\x2c\x47\x83\xf0\xff\xbb\x14\xd4\xad\x53\x9b\xea\x80\x5e\x40\x24\x00\xc5\x8f\x7a\xf8\xee\x20\x2b\xdb\xd9\xdd\x2c\xe6\x8a\x3b\x00\x9e\x3f\xc6\x8b\x50\x6a\xea\x59\x01\xc0\x09\x58\xd8\x38\xbc\xa0\xe2\xa7\xfd\x9c\x34\xa0\x38\x3d\xcb\x71\x03\x51\x86\x8c\x95\xdb\x2e\xa2\x99\x7d\x28\xc6\xe1\x6a\x75\xa3\xd2\x2b\x2b\x74\x43\x1a\x34\x71\xb8\x70\x06\xca\xd1\xe0\x1a\x31\x78\x86\xb5\x62\x7a\xf3\xe9\x5f\x7e\x41\x35\x21\xf0\x74\xbc\x8f\xf7\x96\x0b\xf7\xae\x71\x3c\x93\x86\x1c\xd2\x96\x3b\xbc\xb1\xe6\x60\x48\x97\x89\xbf\x1e\xe0\xef\x37\xf1\x2b\xe9\x0d\x7a\x1e\xdd\xb2\xfe\x46\x8f\xfb\x20\xa9\xb2\x9e\x69\x1a\x3e\x45\xfe\x42\xa8\xb8\xc0\x07\xe2\x3b\x97\x97\xdf\xa3\x88\xd0\x8f\x20\x10\x70\xf9\xf2\xe3\xf3\x40\xe3\x75\xe7\xdb\x50\x82\xc6\x18\x51\x91\xe2\x88\xd4\xf5\x9b\x0d\x4d\xcb\xe4\x64\x64\x17\x02\x59\x0e\x21\xdc\x3f\xf7\xca\xe9\x7b\xe0\xee\xab\xf5\xf5\x4b\x50\x99\x96\x7c\x09\x43\x7f\x8a\x7b\xf8\x77\xce\x50\x4c\x36\x52\x3b\x7d\xc3\x09\x2f\x0d\xf2\x07\x9e\x62\xe0\xff\x25\xfd\x0e\xc4\x9b\xcc\xb6\x56\x6a\xa2\x42\x08\x72\xa2\x35\x10\x33\x70\xb4\x6e\x3b\x42\xc0\x01\x25\x80\xb2\xd0\x1d\xbf\xd9\xe7\xa7\x25\x89\xaf\xbb\xd3\x73\xcd\xff\x1d\x00\x00\xff\xff\xfc\x10\x0c\x3e\x5d\x2c\x00\x00")

func staticx_dist_license_txt_bytes() ([]byte, error) {
	return bindata_read(
		_staticx_dist_license_txt,
		"staticx/dist/LICENSE.txt",
	)
}

func staticx_dist_license_txt() (*asset, error) {
	bytes, err := staticx_dist_license_txt_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "staticx/dist/LICENSE.txt", size: 11357, mode: os.FileMode(420), modTime: time.Unix(1442530162, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticx_dist_manifest_txt = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x59\xeb\x76\xea\x2c\x10\xfd\x7f\x9e\x22\x2f\xd0\xe6\xa6\x56\x9f\x26\x8b\xcb\x24\xa1\x12\xc8\x02\xe2\xe5\x3c\xfd\x37\x24\xd6\x9a\xf3\xd9\x1a\xd0\x1f\x5d\x46\xba\xf7\x16\x06\x98\xd9\xa3\x54\x38\x3a\xb0\x3d\xb8\x77\x6d\x9a\xd4\x01\x85\x3d\x49\xad\xd2\x47\x4a\xa4\x4c\x56\xeb\x82\x6f\x78\x59\xac\x38\x90\x3f\x8d\x70\xed\x40\xdf\x99\xee\x52\x2a\xe1\x00\x16\x88\x61\xed\xf4\x9c\x10\xbe\x2d\xe8\x8a\xfe\x0a\x4a\x89\x22\xf2\x6c\x85\x0d\x43\x4f\x0f\x7f\xc1\xd8\x94\x0d\xd6\xe9\xae\xfa\x1a\x88\xd6\xd9\xc3\xf9\xa8\x0d\x7f\x5e\xc8\x8a\xae\x97\xf0\x02\x1d\x47\x14\x27\xf1\x33\xa2\x67\x87\xb3\x30\x86\x9c\x2b\xa6\xd5\x01\x8c\xf3\xaa\xa2\x51\xda\x04\xee\xcd\x0f\x52\x9f\x56\xab\x97\x08\x59\x67\x84\x6a\x02\xa5\x58\x4b\x4c\x55\x0b\x39\x2a\xb4\xae\x93\xd5\xcd\xc8\x33\x5a\x06\x1a\x38\xf5\xaf\x52\xc3\x7d\xd3\xd5\x51\x70\xd7\x56\x4a\xab\xea\x53\x0b\x15\x2c\xc8\x89\x03\x27\x3a\xa8\x7a\x62\xac\x17\xbd\x0e\xe8\xde\x09\x8d\xb0\x67\x05\x6b\x09\x27\x81\xa0\xaa\xd1\x81\x52\x92\xa8\x66\x20\x0d\x8e\x84\xae\xea\xca\xa4\xa1\x5b\x7f\x65\x32\x12\xcd\xfc\xdc\x47\x53\xf7\x34\x9a\x1a\x9a\xe6\xae\x4c\x08\xdd\xe2\x6f\x66\xe8\x1d\xfd\x66\x0e\xb1\xcc\x3a\x7a\x5f\xea\xe8\x53\xd4\x44\x7f\x66\x13\x1d\xdb\x56\x44\x33\xcf\xb1\x4c\xc1\xa3\x99\xd1\x27\x41\xb8\x58\x66\x1f\xca\x74\x7a\x0f\xea\x9a\x3d\x49\xaf\xb1\x38\xe8\xbe\x85\xb8\x54\x3c\x57\x43\x70\xaf\x07\x15\x1a\xc0\xb9\x08\xf0\x06\x2a\xd5\x18\xd2\xbd\x62\x4a\x20\x85\xc5\x0c\xfe\x0a\xa9\x2f\x03\xd3\x11\xb3\x87\xc8\xd2\x35\x57\x94\xa0\x1a\xac\x5b\xaf\x50\xd2\x47\x9c\x12\x23\xf6\x25\xfb\xf8\xb2\xe8\xf7\xda\x3c\x2b\x61\x5b\xb4\x2e\x32\xd4\x50\xfd\xa3\xe1\x74\x5f\x8d\x43\xf6\x15\xab\x72\x66\x50\x0c\x2b\x7c\x75\x3b\xfc\x94\xe2\xa0\x04\xd3\x1c\x8f\xbd\x36\x1d\x91\xe2\x6f\xdc\x72\x3b\xd2\xc7\xf0\xc4\xe8\x86\xe1\xc4\x60\x34\x3b\xf1\x12\x17\x63\x77\x1d\x89\x57\xb2\xe3\x9e\x4f\x4a\xf1\x2a\x97\xa8\xc6\x0b\x1c\x5b\xe1\xc0\xf6\x84\x41\xe8\xa2\xd0\x7c\xd7\x62\xa1\xed\xe2\x9a\x0d\x1d\xa8\x85\x89\xbc\x75\x6e\xe1\x2e\x7b\x64\x8a\x67\xa2\x5f\xec\xfd\x85\xe2\x70\x0a\x80\xfa\x8b\xb5\xb4\xd7\xb9\x21\xa4\x54\x4b\xc7\x17\x9a\xbc\x5b\x5e\xa3\xfd\x90\x8c\xa2\x3a\x03\x4b\xaf\xc7\x2d\x4f\xa8\x0e\xba\x70\x5a\x07\xd8\x72\x2d\x75\xa3\x13\x71\xe8\xad\xc0\x14\xc0\xf5\x71\xe1\x91\x57\x78\x6a\xf0\x43\xaa\xc1\x89\x85\x06\x0b\x2f\xa8\xc0\x72\xbf\xd0\x1a\x4d\x6f\x42\xb0\x78\xec\xa5\x04\x86\x11\x58\xb8\xf2\xcb\x9b\x1a\x6f\x98\x0b\xa3\xb4\xa2\x69\x25\xfe\x2d\xbc\x35\xff\xb2\xd0\x07\x93\xc6\x5f\xba\xaa\xf6\x29\xd7\x4d\x66\x48\xd9\x85\x7e\x73\x91\x9c\xef\x99\x9f\x94\xfb\xfe\xba\x23\x52\xe8\xfa\xf4\xe4\xfa\x66\x3a\x4f\x2c\x6c\xa6\x13\xb1\x32\xcb\xf0\x76\x05\x9e\xae\xe9\x65\x29\xeb\x94\xe2\x16\x82\xf5\xf9\x69\x47\x8b\x1d\xa3\xe5\x03\xb8\x60\xc3\x42\xa4\x37\xed\x29\x27\x41\x68\x08\x41\x63\xb1\x0c\x41\xdb\x10\x74\x2d\x82\xd0\x26\x04\xdd\x06\x45\x10\x9b\xa5\x00\xb4\x92\x41\x68\x1d\x82\xee\x83\x66\x62\x82\xb4\x4d\x50\x4c\xec\x21\x04\xed\xda\x20\xf4\xe2\xbd\xbc\x14\xe7\x65\x68\xeb\xa0\xeb\xbe\xfb\xa8\x07\xa4\x46\xbf\x4d\xcd\xc4\x85\x96\x1c\xf2\xf7\xec\x3d\x7f\xdb\xbd\x35\x45\x49\x0a\xb6\x85\x9f\x98\x16\xc6\x54\x9a\xe4\xd9\xc7\x9a\xb3\x7c\x06\x1b\x7d\xc8\xf8\x92\x64\x65\xc9\x57\xc0\x6e\xff\xcd\xf4\xc0\x5a\x8a\x3d\x55\xca\x28\x19\x30\x68\x50\xd3\xf5\xfa\x83\xfe\x86\xb9\xbc\xf8\xcc\xb6\x08\x8e\x46\x81\xec\x0f\x8b\xa0\x06\x0e\xa6\x67\x0f\xa0\x52\x37\x09\x64\x75\xb9\xde\xe4\xf7\x11\x18\xc8\xeb\x9b\x64\xbb\xe3\xdb\x2d\x5d\x3f\x46\xe2\x1c\x38\x71\xc4\xea\xc1\xb0\x10\x5a\x2f\x89\xf3\x25\xf1\x11\xe5\x9a\x73\x4b\x4e\xb3\xcd\x4f\xdb\xd0\x68\x34\x63\x8c\x60\x32\xe7\x09\x25\x8c\x6d\x6b\x78\x08\xc4\x90\x08\xbf\xfd\xbf\xe1\x25\xa1\x16\xcf\x0c\x51\xb8\xb6\x62\x4b\x33\x9e\x6f\x7e\xc6\x31\xda\xb8\xe4\x90\xbd\x97\xef\xd9\xef\xa0\xd4\x2f\xe9\x0e\x92\x0f\xd6\x09\xe5\xe3\xe4\xbf\xe0\xef\xb5\xf0\x75\x3e\xf9\x58\xef\xca\x5d\xbd\xbe\x0b\x9c\x7e\x08\xa8\xf3\x0d\x64\xb3\x05\xe0\x67\xfd\x25\x46\x7a\x29\x8a\x26\x12\x37\xe8\x8d\x58\x0b\xae\xb6\x09\x5f\xe3\xf2\x57\xc5\x2d\x1a\xdd\xf3\x98\xb4\x8c\x76\x9a\x0e\xf5\xf4\x90\x6c\x79\xbd\x25\xbb\xf2\x0e\xd0\x2a\xec\x1d\xce\xc9\x47\x51\x32\x96\xc3\x1c\x60\x84\x94\xc4\x77\x39\x0e\x4e\x78\xb5\xd8\xb6\xa4\xe5\x5d\x48\x37\x9c\x92\xd5\x8e\x65\xc5\x7c\x2e\x9f\x5d\xab\x79\x03\xfe\x2b\x90\x83\x68\x74\x92\x73\x8e\xc5\x79\x16\x26\xc3\x8c\x3e\x4a\x38\xfb\xd5\x7d\xd9\xe9\x9c\xc1\xae\x84\x7a\x06\x3b\x5b\x8c\x01\x47\x94\xdd\x8b\x5e\xa2\xbf\x4d\xbf\x1e\x92\x82\xd7\x94\xc0\x2c\xa6\x98\x3e\x0e\x70\x06\xf5\xd5\x10\x64\x84\x42\x36\x5f\x9d\x3d\x2b\xee\xcc\x77\xb3\x71\xcd\x6b\x39\xd9\xf1\x4d\x51\x2f\xc1\xa6\xe3\xe1\x0b\x63\xe8\xae\x27\x68\x6e\x82\x48\x60\x8c\x37\xdb\x21\x94\x4b\xbe\x0d\xa1\x60\x17\x6c\x08\xba\xfa\x20\xd2\x27\xe6\x0a\xff\xcb\x49\x08\x07\x6f\x6d\x60\x9c\x35\xd6\xe0\x10\xbc\x6f\xcf\x48\x13\xb6\x33\x8e\x60\x3d\x09\x62\x8c\x2d\xd9\x1d\xc2\x11\xef\x44\x9d\x52\xe1\xf0\x92\x4e\x15\x2c\x7b\xcb\x7d\x09\xdb\x92\x55\xbe\xd9\xfe\x99\x6e\xde\xf8\xb3\xf0\x29\xf5\x57\x0b\x8b\x2f\xba\xf6\x31\x83\xae\x69\xb1\x2e\x3e\xb2\x0c\xa1\xec\x0e\xf0\xf2\x65\x47\xaa\xfe\x87\xfd\x2f\x00\x00\xff\xff\xbd\x2a\x5c\x18\x6f\x1e\x00\x00")

func staticx_dist_manifest_txt_bytes() ([]byte, error) {
	return bindata_read(
		_staticx_dist_manifest_txt,
		"staticx/dist/manifest.txt",
	)
}

func staticx_dist_manifest_txt() (*asset, error) {
	bytes, err := staticx_dist_manifest_txt_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "staticx/dist/manifest.txt", size: 7791, mode: os.FileMode(420), modTime: time.Unix(1442530162, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticx_dist_version_txt = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x2a\x33\xd0\x33\xd2\x33\xd0\x35\x34\x34\xd5\x4d\xb7\x30\xb7\x30\x4e\x36\xb1\xe4\x02\x04\x00\x00\xff\xff\x16\x8d\xc8\x06\x14\x00\x00\x00")

func staticx_dist_version_txt_bytes() ([]byte, error) {
	return bindata_read(
		_staticx_dist_version_txt,
		"staticx/dist/version.txt",
	)
}

func staticx_dist_version_txt() (*asset, error) {
	bytes, err := staticx_dist_version_txt_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "staticx/dist/version.txt", size: 20, mode: os.FileMode(420), modTime: time.Unix(1442530116, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticx_index_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x58\x4d\x8f\xa4\x36\x10\xbd\xef\xaf\xf0\x92\x43\x4e\x86\xe9\x6c\x14\x45\x51\x77\x4b\x9b\xdd\x28\x89\x94\xaf\x43\x2e\x39\x1a\x5c\x80\x67\x8c\x4d\x6c\x43\x4f\xef\xaf\x4f\xd9\x34\x0c\x30\xdb\x1b\xd3\xa3\x61\xa4\xb1\xc1\xef\xb9\x1e\x65\x97\xab\xe8\xfd\xdb\x8f\x7f\x7e\xf8\xfb\x9f\xbf\x7e\x22\xb5\x6b\xe4\xf1\xcd\xde\x37\x44\x32\x55\x1d\x12\x50\x09\x51\x15\x65\x6d\x7b\x48\x9a\xf3\xfb\xb6\x4d\xfc\x38\x30\x7e\x7c\x43\xc8\xbe\x01\xc7\x48\x51\x33\x63\xc1\x1d\x92\xce\x95\xf4\xfb\xe4\x69\x40\xb1\x06\x0e\x09\x07\x5b\x18\xd1\x3a\xa1\x71\xaa\x42\x2b\x07\x0a\xb1\x08\xf3\xb8\xb7\x94\x92\x1f\xb5\x76\xd6\x19\xd6\x12\x4a\x03\x59\x0a\xf5\x40\x6a\x03\xe5\x21\xc9\xac\x63\x4e\x14\x59\x61\x6d\xd6\x1a\x61\x9b\x14\x7b\x09\x31\x20\x0f\x89\x75\x67\x09\xb6\x06\x70\x49\x36\xcc\x76\x85\x88\xe2\xaf\xd2\xae\xb3\xf2\x51\xd6\x0d\x5c\xce\x6c\x9d\x6b\x66\xf8\x0d\x5c\x23\x8a\x07\x5b\xb3\x53\xda\x08\xb5\x91\x2e\x45\x9e\xe1\xaa\x75\x92\x19\xea\x0c\x40\x2f\xe0\x34\x3e\x48\xc7\x07\xff\xef\xc1\x61\xac\xd6\xc6\x15\x9d\x23\xa2\xf0\x0b\xb7\x34\x54\xb2\xde\x3f\x4e\xf1\x9f\x67\xee\xb3\x61\x47\xec\x73\xcd\xcf\x41\x1c\x17\x3d\x29\x24\xb3\xf6\x90\xf8\x25\x67\x42\x81\x09\x3b\x63\x39\xa6\x58\x9f\x33\x43\x86\x86\x0a\xd5\x03\xee\xa4\xf1\xb6\x14\x8f\xc0\xa9\xd3\x2d\xaa\xd5\x12\x02\x5a\x54\x2c\x6c\xa4\x61\xaa\x2f\x1b\xfa\xbc\x31\xea\xa5\x2e\x30\x88\x62\x23\x46\xa3\x02\xc1\x81\xe6\x86\x29\x3e\xbd\xf5\x02\x8c\x70\xd1\x54\x23\x41\xea\x4a\x27\xc4\x9a\xe2\xc9\x39\x38\x9a\x15\x79\xda\xaa\x6a\x58\xa9\x89\x96\xb1\x99\xb0\x0c\x95\xcd\x6e\x3b\x39\x93\x39\x7a\x00\x9b\xa5\x4e\x29\x8e\xa8\xf5\xa2\x4a\x28\x0e\x8f\x60\x51\xdd\xaf\x43\xcf\x1b\xd8\xe3\x26\x98\x5b\xe9\xe4\xcb\x8c\x28\xcd\x83\x89\x3f\x7c\xfb\x1a\x06\x1a\xad\x84\xd3\x06\x4d\xfc\x3e\xf4\x5e\xc5\x08\x53\xac\x02\x6f\x23\x74\x5e\xc3\x04\x6e\x04\xef\xa7\xdf\xb0\xb9\x79\xfa\xb1\x6b\x44\x55\xbb\xb5\xad\x91\xc2\x8d\x6e\xb9\x3e\xa9\xf5\xa6\x64\x6b\x00\x86\x4e\x55\x49\x48\x08\x67\x8e\x5d\x6e\x66\xf4\x05\x1b\xaf\xe1\x3d\xbe\x1a\x83\x2d\xef\x9c\xf3\x81\xcf\x8c\x60\x14\x1e\x5b\x8c\x07\xe0\x87\xa4\x64\xd2\xc2\xca\x34\x5e\xbf\x80\x6c\xc9\xde\x22\x6a\x8a\x46\x66\xf0\x58\x41\x3f\xf8\x87\x2b\xa9\xf3\x40\x58\x39\x64\x12\xdf\x80\xea\x46\x2d\xa1\xbf\xb6\xb9\x70\x7f\xed\x5c\xfb\x43\x96\x49\x96\xdb\xb4\xd0\x5d\x51\xe7\xcc\x02\xf6\x1a\x8c\xc4\xd2\xad\x03\x78\xba\x7e\x06\xe7\x84\xaa\x08\x46\xae\x71\xc0\x9f\x09\xf3\x5a\xe7\xeb\xb8\xdd\x32\x87\x9e\x56\x1d\x1e\x29\x99\x3f\x5a\xfc\xf9\x7b\x4d\xcb\x47\xe8\x41\xea\x16\xcc\xd7\x96\x04\xc6\x2b\xa8\x61\x1c\x93\x4a\xa4\x9e\xf7\x1e\x2b\x7c\x06\xc4\xa0\xdc\xae\x69\x5a\x50\xd1\x8b\x70\xde\xc6\x6a\x2f\xb5\xe9\x9a\xb5\xfa\x6b\x22\x3f\x8c\x28\xac\x2c\x9a\xa6\xc3\x03\xe4\x4c\x86\x09\xa2\x94\x2e\xe3\x72\x8d\x98\x8f\xce\xce\xeb\x4b\xf7\x59\x32\x33\xfa\x74\x25\x2f\x49\x6a\x1b\xba\xbb\x23\x97\x9e\x2e\x4b\xac\x97\xe8\x8e\x34\x98\xae\xd6\xc9\x0a\x8b\x2d\xbf\x2a\xc7\x45\x82\x78\x6e\x7d\x2e\x63\x3f\x14\x58\xcb\x2c\xe4\x6b\x81\xfb\x7f\x3b\x30\xe7\x4b\x43\xbf\x49\x77\xf8\x77\x6f\x43\x50\x06\xc6\x31\x9e\xdc\x89\x50\x8f\x44\xb3\xf9\xbb\xb4\x7f\x17\x0f\x5f\x14\x3d\xd1\xac\xba\xc3\x83\x5d\x7c\x82\x6d\xac\xa9\xb0\x9b\x95\x78\xd1\xe4\x4b\x35\x35\x55\x55\x5b\x89\xd4\xe8\xce\xc1\xf2\x6e\xfb\x24\xd7\x8b\xbb\x4d\x9e\x18\x5f\xc6\x62\xa9\xc7\x72\xb9\x41\xc8\x93\x0f\x3b\x41\xa7\x1b\xea\x5a\x69\xe9\x5d\xba\xdb\xa5\x77\xb7\x29\x69\x34\x67\x32\x9e\x36\x7c\x12\xc4\x6f\x69\xab\x55\xab\x05\x7e\x82\x44\x2e\xdc\xbd\xcd\x30\xf5\xf5\xb1\xeb\x7c\x3f\x7c\x6b\xc4\x62\xad\x3f\x80\x0b\xb0\xd1\x04\x5f\xe1\x62\x46\x94\x58\x25\x47\x73\x4a\x21\xdd\x16\x3c\x17\x06\x0a\x27\xfa\x0d\xb2\x42\x21\x1a\x8d\xf6\x15\x65\x34\xf8\x52\x1d\xc6\xe3\x43\x7d\x17\x0d\xf7\x45\x5b\x34\x38\x1c\x84\xf1\x7e\x84\xbc\xab\xa2\xd1\xf9\x77\xdf\xae\xb0\x5f\x7c\xc9\xb6\xc5\xaa\x65\x6c\x37\x38\x67\xe0\xa1\x8f\xe4\xd9\x8a\xf8\x37\x5f\x13\x69\xe8\x7c\xda\x10\x45\xcf\x66\x38\x69\xc3\x25\x56\x17\xb7\xcf\xe0\x7f\x76\x18\x36\xf7\xed\x73\x38\xfd\x00\x3e\x81\xbc\x74\x8a\xcf\xea\xd8\x67\xc3\xe7\x30\x7e\x1d\x87\x9f\x55\xfe\x0b\x00\x00\xff\xff\x7b\x3e\xa3\xed\x67\x11\x00\x00")

func staticx_index_html_bytes() ([]byte, error) {
	return bindata_read(
		_staticx_index_html,
		"staticx/index.html",
	)
}

func staticx_index_html() (*asset, error) {
	bytes, err := staticx_index_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "staticx/index.html", size: 4455, mode: os.FileMode(420), modTime: time.Unix(1435013003, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticx_partials_index_list_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x54\xc1\x6e\xdb\x30\x0c\x3d\x37\x5f\xc1\x69\x18\xb0\x01\x73\xbd\xee\xd6\xd6\xf1\x7d\x87\x15\xbb\xed\x38\xc8\x36\x63\x09\x95\x25\x43\xa2\x9b\x06\x41\xfe\x7d\x94\xe4\x38\x69\x87\x22\x3b\x35\x40\x64\x49\xe4\xe3\x7b\x22\x45\x55\xce\x80\xed\x0b\xbd\x59\x0b\x6d\x3b\x7c\x7e\x90\x03\x86\x6b\x83\xb6\x27\x25\x56\xc0\xbf\xd6\xc8\x10\xd6\xa2\xf1\x28\xbb\xd6\x4f\x43\x23\x6a\xde\xaf\x8c\xae\xab\x30\x4a\x7b\xb4\xf7\x66\x37\x2a\xdd\x3a\x0b\xcb\xac\x68\x9c\x7b\x14\x75\x55\xb2\xef\x11\x22\x41\x79\x64\xb2\x8f\xa2\xfe\x11\xf9\x30\x54\xa5\x9c\x5d\xaa\xd2\x99\x7a\xb5\xaa\x3a\xfd\x14\x35\x05\xe5\xb6\x6b\x81\xde\x3b\xff\x13\x43\x90\x3d\x8a\x23\x99\x34\xe8\x09\xd2\x58\x74\xd2\xf6\xe8\x23\xa0\x35\x4e\x3e\x0a\xf0\xce\xe0\xec\x92\xa4\xee\xf7\xe7\x31\x0e\x07\xe6\x61\x86\x48\x44\xb2\x31\x78\xe1\xf8\xa7\x0c\x64\xef\x34\x16\x81\xbc\x1e\xb1\xe3\xf8\x57\x15\x79\x1e\xf9\xa3\x60\xab\x3b\x52\x6b\x71\x7b\xfb\x49\xd4\x31\x52\x55\x92\x9a\x6d\xf5\x3c\xe7\x8f\xcf\xa0\xc8\xeb\x71\x44\x49\x67\xdc\xa0\x2d\x9c\x84\x88\x0c\xee\x4e\x69\x2b\x75\x4e\x5a\xb9\xdf\x2f\x6e\x87\x83\xa8\x5f\x2c\x73\x46\x19\x96\xd1\x10\x68\x17\x33\xb2\x55\x9a\x58\xf9\x28\x5b\xbc\x03\xeb\xb6\x5e\x8e\xf7\x89\xe1\xaa\x6a\x26\x22\xae\x5c\xca\xa1\x6e\x1f\x39\xeb\x9d\xa6\x54\x9f\xcf\x4b\xdc\x2f\x22\xba\xc2\xf1\x47\xbb\x91\x63\x66\xe0\x52\x97\x86\x2c\xf0\xbf\xe8\x70\x23\x27\x43\x69\x1e\x86\x4c\x72\x75\xf1\xba\x44\xd2\x78\x5d\xa2\x5f\x0d\x71\x95\xc4\x95\x99\xe4\x0d\xa5\x5c\x74\x8b\xef\x2e\x75\x34\x53\x28\x82\xee\xed\x49\x6f\x12\xf2\x1f\x82\x3b\x34\x48\xef\xaf\x98\xbc\x0c\x6a\x51\xfb\x5a\xe7\x7c\x5d\xf2\xed\xe4\x31\x5e\xf2\xb3\x56\x8c\xfd\xf1\xe1\xad\x06\x99\x49\x93\xf9\x37\x9a\xd6\x0d\x98\x9f\x08\x75\x53\xcf\x6b\x20\x07\x6d\xb3\xa1\xaa\xe4\xbd\x68\x8a\x0d\x18\x37\x40\x07\x90\xb0\x99\x8c\x29\x08\x9f\x09\x02\xfa\x27\x6e\xe6\x8d\xf3\xd0\xba\xa9\x55\x8d\x0c\x08\x9d\x24\x79\x3d\x37\xed\x8c\xfd\x65\x30\x59\x70\xa3\x2d\xc2\xce\x4d\x8c\xd1\x3e\x50\x6e\x1e\x6e\x44\xee\x46\x52\x08\x0f\xb8\x85\x94\x6a\xc8\x67\x3d\x86\x59\x9e\x80\x78\xc0\xe5\x00\xe3\x44\x45\xef\xdd\x34\x66\xfd\xff\x34\xdd\x1f\x8b\xdb\x64\x62\xe3\x5c\xd7\xd7\xc5\x19\xbd\x1e\xa4\xdf\x89\xb9\x84\x61\x6a\x06\x4d\x33\x86\x51\xfa\xd2\xa5\x8a\x15\xd2\xf5\x49\x77\x26\x5b\x2a\x15\xe7\xf2\x4c\x7e\x6a\xed\x7a\x75\x7d\x9e\x7c\x50\x37\x5f\xe1\xe5\x4e\x3c\xe5\x9e\xc1\x2c\xad\xd7\xf1\x5d\xe6\x68\xc3\x1d\x7c\xff\x36\x3e\xdf\xaf\xe2\x83\x98\xe3\xfc\x0d\x00\x00\xff\xff\x52\x12\x88\xe9\x0d\x06\x00\x00")

func staticx_partials_index_list_html_bytes() ([]byte, error) {
	return bindata_read(
		_staticx_partials_index_list_html,
		"staticx/partials/index/list.html",
	)
}

func staticx_partials_index_list_html() (*asset, error) {
	bytes, err := staticx_partials_index_list_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "staticx/partials/index/list.html", size: 1549, mode: os.FileMode(420), modTime: time.Unix(1435013101, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"staticx/dist/LICENSE.txt":         staticx_dist_license_txt,
	"staticx/dist/manifest.txt":        staticx_dist_manifest_txt,
	"staticx/dist/version.txt":         staticx_dist_version_txt,
	"staticx/index.html":               staticx_index_html,
	"staticx/partials/index/list.html": staticx_partials_index_list_html,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func     func() (*asset, error)
	Children map[string]*_bintree_t
}

var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"staticx": &_bintree_t{nil, map[string]*_bintree_t{
		"dist": &_bintree_t{nil, map[string]*_bintree_t{
			"LICENSE.txt":  &_bintree_t{staticx_dist_license_txt, map[string]*_bintree_t{}},
			"manifest.txt": &_bintree_t{staticx_dist_manifest_txt, map[string]*_bintree_t{}},
			"version.txt":  &_bintree_t{staticx_dist_version_txt, map[string]*_bintree_t{}},
		}},
		"index.html": &_bintree_t{staticx_index_html, map[string]*_bintree_t{}},
		"partials": &_bintree_t{nil, map[string]*_bintree_t{
			"index": &_bintree_t{nil, map[string]*_bintree_t{
				"list.html": &_bintree_t{staticx_partials_index_list_html, map[string]*_bintree_t{}},
			}},
		}},
	}},
}}

// Restore an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, path.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// Restore assets under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	if err != nil { // File
		return RestoreAsset(dir, name)
	} else { // Dir
		for _, child := range children {
			err = RestoreAssets(dir, path.Join(name, child))
			if err != nil {
				return err
			}
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

func assetFS() *assetfs.AssetFS {
	for k := range _bintree.Children {
		return &assetfs.AssetFS{Asset: Asset, AssetDir: AssetDir, Prefix: k}
	}
	panic("unreachable")
}
